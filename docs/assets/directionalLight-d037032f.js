import{n as o,V as i,z as c,h as n,J as d,p as e,U as f}from"./runBabylonPlaygroundScene-32a4afbd.js";import{L as u}from"./linesBuilder-a2dae4c1.js";class t{}t.ALPHA_DISABLE=0;t.ALPHA_ADD=1;t.ALPHA_COMBINE=2;t.ALPHA_SUBTRACT=3;t.ALPHA_MULTIPLY=4;t.ALPHA_MAXIMIZED=5;t.ALPHA_ONEONE=6;t.ALPHA_PREMULTIPLIED=7;t.ALPHA_PREMULTIPLIED_PORTERDUFF=8;t.ALPHA_INTERPOLATE=9;t.ALPHA_SCREENMODE=10;t.ALPHA_ONEONE_ONEONE=11;t.ALPHA_ALPHATOCOLOR=12;t.ALPHA_REVERSEONEMINUS=13;t.ALPHA_SRC_DSTONEMINUSSRCALPHA=14;t.ALPHA_ONEONE_ONEZERO=15;t.ALPHA_EXCLUSION=16;t.ALPHA_LAYER_ACCUMULATE=17;t.ALPHA_EQUATION_ADD=0;t.ALPHA_EQUATION_SUBSTRACT=1;t.ALPHA_EQUATION_REVERSE_SUBTRACT=2;t.ALPHA_EQUATION_MAX=3;t.ALPHA_EQUATION_MIN=4;t.ALPHA_EQUATION_DARKEN=5;t.DELAYLOADSTATE_NONE=0;t.DELAYLOADSTATE_LOADED=1;t.DELAYLOADSTATE_LOADING=2;t.DELAYLOADSTATE_NOTLOADED=4;t.NEVER=512;t.ALWAYS=519;t.LESS=513;t.EQUAL=514;t.LEQUAL=515;t.GREATER=516;t.GEQUAL=518;t.NOTEQUAL=517;t.KEEP=7680;t.ZERO=0;t.REPLACE=7681;t.INCR=7682;t.DECR=7683;t.INVERT=5386;t.INCR_WRAP=34055;t.DECR_WRAP=34056;t.TEXTURE_CLAMP_ADDRESSMODE=0;t.TEXTURE_WRAP_ADDRESSMODE=1;t.TEXTURE_MIRROR_ADDRESSMODE=2;t.TEXTURE_CREATIONFLAG_STORAGE=1;t.TEXTUREFORMAT_ALPHA=0;t.TEXTUREFORMAT_LUMINANCE=1;t.TEXTUREFORMAT_LUMINANCE_ALPHA=2;t.TEXTUREFORMAT_RGB=4;t.TEXTUREFORMAT_RGBA=5;t.TEXTUREFORMAT_RED=6;t.TEXTUREFORMAT_R=6;t.TEXTUREFORMAT_RG=7;t.TEXTUREFORMAT_RED_INTEGER=8;t.TEXTUREFORMAT_R_INTEGER=8;t.TEXTUREFORMAT_RG_INTEGER=9;t.TEXTUREFORMAT_RGB_INTEGER=10;t.TEXTUREFORMAT_RGBA_INTEGER=11;t.TEXTUREFORMAT_BGRA=12;t.TEXTUREFORMAT_DEPTH24_STENCIL8=13;t.TEXTUREFORMAT_DEPTH32_FLOAT=14;t.TEXTUREFORMAT_DEPTH16=15;t.TEXTUREFORMAT_DEPTH24=16;t.TEXTUREFORMAT_DEPTH24UNORM_STENCIL8=17;t.TEXTUREFORMAT_DEPTH32FLOAT_STENCIL8=18;t.TEXTUREFORMAT_STENCIL8=19;t.TEXTUREFORMAT_COMPRESSED_RGBA_BPTC_UNORM=36492;t.TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_BPTC_UNORM=36493;t.TEXTUREFORMAT_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT=36495;t.TEXTUREFORMAT_COMPRESSED_RGB_BPTC_SIGNED_FLOAT=36494;t.TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT5=33779;t.TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919;t.TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT3=33778;t.TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918;t.TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT1=33777;t.TEXTUREFORMAT_COMPRESSED_RGB_S3TC_DXT1=33776;t.TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917;t.TEXTUREFORMAT_COMPRESSED_SRGB_S3TC_DXT1_EXT=35916;t.TEXTUREFORMAT_COMPRESSED_RGBA_ASTC_4x4=37808;t.TEXTUREFORMAT_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840;t.TEXTUREFORMAT_COMPRESSED_RGB_ETC1_WEBGL=36196;t.TEXTUREFORMAT_COMPRESSED_RGB8_ETC2=37492;t.TEXTUREFORMAT_COMPRESSED_SRGB8_ETC2=37493;t.TEXTUREFORMAT_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37494;t.TEXTUREFORMAT_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37495;t.TEXTUREFORMAT_COMPRESSED_RGBA8_ETC2_EAC=37496;t.TEXTUREFORMAT_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37497;t.TEXTURETYPE_UNSIGNED_BYTE=0;t.TEXTURETYPE_UNSIGNED_INT=0;t.TEXTURETYPE_FLOAT=1;t.TEXTURETYPE_HALF_FLOAT=2;t.TEXTURETYPE_BYTE=3;t.TEXTURETYPE_SHORT=4;t.TEXTURETYPE_UNSIGNED_SHORT=5;t.TEXTURETYPE_INT=6;t.TEXTURETYPE_UNSIGNED_INTEGER=7;t.TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4=8;t.TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1=9;t.TEXTURETYPE_UNSIGNED_SHORT_5_6_5=10;t.TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV=11;t.TEXTURETYPE_UNSIGNED_INT_24_8=12;t.TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV=13;t.TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV=14;t.TEXTURETYPE_FLOAT_32_UNSIGNED_INT_24_8_REV=15;t.TEXTURETYPE_UNDEFINED=16;t.TEXTURE_2D=3553;t.TEXTURE_2D_ARRAY=35866;t.TEXTURE_CUBE_MAP=34067;t.TEXTURE_CUBE_MAP_ARRAY=3735928559;t.TEXTURE_3D=32879;t.TEXTURE_NEAREST_SAMPLINGMODE=1;t.TEXTURE_NEAREST_NEAREST=1;t.TEXTURE_BILINEAR_SAMPLINGMODE=2;t.TEXTURE_LINEAR_LINEAR=2;t.TEXTURE_TRILINEAR_SAMPLINGMODE=3;t.TEXTURE_LINEAR_LINEAR_MIPLINEAR=3;t.TEXTURE_NEAREST_NEAREST_MIPNEAREST=4;t.TEXTURE_NEAREST_LINEAR_MIPNEAREST=5;t.TEXTURE_NEAREST_LINEAR_MIPLINEAR=6;t.TEXTURE_NEAREST_LINEAR=7;t.TEXTURE_NEAREST_NEAREST_MIPLINEAR=8;t.TEXTURE_LINEAR_NEAREST_MIPNEAREST=9;t.TEXTURE_LINEAR_NEAREST_MIPLINEAR=10;t.TEXTURE_LINEAR_LINEAR_MIPNEAREST=11;t.TEXTURE_LINEAR_NEAREST=12;t.TEXTURE_EXPLICIT_MODE=0;t.TEXTURE_SPHERICAL_MODE=1;t.TEXTURE_PLANAR_MODE=2;t.TEXTURE_CUBIC_MODE=3;t.TEXTURE_PROJECTION_MODE=4;t.TEXTURE_SKYBOX_MODE=5;t.TEXTURE_INVCUBIC_MODE=6;t.TEXTURE_EQUIRECTANGULAR_MODE=7;t.TEXTURE_FIXED_EQUIRECTANGULAR_MODE=8;t.TEXTURE_FIXED_EQUIRECTANGULAR_MIRRORED_MODE=9;t.TEXTURE_FILTERING_QUALITY_OFFLINE=4096;t.TEXTURE_FILTERING_QUALITY_HIGH=64;t.TEXTURE_FILTERING_QUALITY_MEDIUM=16;t.TEXTURE_FILTERING_QUALITY_LOW=8;t.SCALEMODE_FLOOR=1;t.SCALEMODE_NEAREST=2;t.SCALEMODE_CEILING=3;t.MATERIAL_TextureDirtyFlag=1;t.MATERIAL_LightDirtyFlag=2;t.MATERIAL_FresnelDirtyFlag=4;t.MATERIAL_AttributesDirtyFlag=8;t.MATERIAL_MiscDirtyFlag=16;t.MATERIAL_PrePassDirtyFlag=32;t.MATERIAL_AllDirtyFlag=63;t.MATERIAL_TriangleFillMode=0;t.MATERIAL_WireFrameFillMode=1;t.MATERIAL_PointFillMode=2;t.MATERIAL_PointListDrawMode=3;t.MATERIAL_LineListDrawMode=4;t.MATERIAL_LineLoopDrawMode=5;t.MATERIAL_LineStripDrawMode=6;t.MATERIAL_TriangleStripDrawMode=7;t.MATERIAL_TriangleFanDrawMode=8;t.MATERIAL_ClockWiseSideOrientation=0;t.MATERIAL_CounterClockWiseSideOrientation=1;t.ACTION_NothingTrigger=0;t.ACTION_OnPickTrigger=1;t.ACTION_OnLeftPickTrigger=2;t.ACTION_OnRightPickTrigger=3;t.ACTION_OnCenterPickTrigger=4;t.ACTION_OnPickDownTrigger=5;t.ACTION_OnDoublePickTrigger=6;t.ACTION_OnPickUpTrigger=7;t.ACTION_OnPickOutTrigger=16;t.ACTION_OnLongPressTrigger=8;t.ACTION_OnPointerOverTrigger=9;t.ACTION_OnPointerOutTrigger=10;t.ACTION_OnEveryFrameTrigger=11;t.ACTION_OnIntersectionEnterTrigger=12;t.ACTION_OnIntersectionExitTrigger=13;t.ACTION_OnKeyDownTrigger=14;t.ACTION_OnKeyUpTrigger=15;t.PARTICLES_BILLBOARDMODE_Y=2;t.PARTICLES_BILLBOARDMODE_ALL=7;t.PARTICLES_BILLBOARDMODE_STRETCHED=8;t.PARTICLES_BILLBOARDMODE_STRETCHED_LOCAL=9;t.MESHES_CULLINGSTRATEGY_STANDARD=0;t.MESHES_CULLINGSTRATEGY_BOUNDINGSPHERE_ONLY=1;t.MESHES_CULLINGSTRATEGY_OPTIMISTIC_INCLUSION=2;t.MESHES_CULLINGSTRATEGY_OPTIMISTIC_INCLUSION_THEN_BSPHERE_ONLY=3;t.SCENELOADER_NO_LOGGING=0;t.SCENELOADER_MINIMAL_LOGGING=1;t.SCENELOADER_SUMMARY_LOGGING=2;t.SCENELOADER_DETAILED_LOGGING=3;t.PREPASS_IRRADIANCE_TEXTURE_TYPE=0;t.PREPASS_POSITION_TEXTURE_TYPE=1;t.PREPASS_VELOCITY_TEXTURE_TYPE=2;t.PREPASS_REFLECTIVITY_TEXTURE_TYPE=3;t.PREPASS_COLOR_TEXTURE_TYPE=4;t.PREPASS_DEPTH_TEXTURE_TYPE=5;t.PREPASS_NORMAL_TEXTURE_TYPE=6;t.PREPASS_ALBEDO_SQRT_TEXTURE_TYPE=7;t.BUFFER_CREATIONFLAG_READ=1;t.BUFFER_CREATIONFLAG_WRITE=2;t.BUFFER_CREATIONFLAG_READWRITE=3;t.BUFFER_CREATIONFLAG_UNIFORM=4;t.BUFFER_CREATIONFLAG_VERTEX=8;t.BUFFER_CREATIONFLAG_INDEX=16;t.BUFFER_CREATIONFLAG_STORAGE=32;t.RENDERPASS_MAIN=0;t.INPUT_ALT_KEY=18;t.INPUT_CTRL_KEY=17;t.INPUT_META_KEY1=91;t.INPUT_META_KEY2=92;t.INPUT_META_KEY3=93;t.INPUT_SHIFT_KEY=16;t.SNAPSHOTRENDERING_STANDARD=0;t.SNAPSHOTRENDERING_FAST=1;t.PERSPECTIVE_CAMERA=0;t.ORTHOGRAPHIC_CAMERA=1;t.FOVMODE_VERTICAL_FIXED=0;t.FOVMODE_HORIZONTAL_FIXED=1;t.RIG_MODE_NONE=0;t.RIG_MODE_STEREOSCOPIC_ANAGLYPH=10;t.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL=11;t.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED=12;t.RIG_MODE_STEREOSCOPIC_OVERUNDER=13;t.RIG_MODE_STEREOSCOPIC_INTERLACED=14;t.RIG_MODE_VR=20;t.RIG_MODE_WEBVR=21;t.RIG_MODE_CUSTOM=22;t.MAX_SUPPORTED_UV_SETS=6;t.GL_ALPHA_EQUATION_ADD=32774;t.GL_ALPHA_EQUATION_MIN=32775;t.GL_ALPHA_EQUATION_MAX=32776;t.GL_ALPHA_EQUATION_SUBTRACT=32778;t.GL_ALPHA_EQUATION_REVERSE_SUBTRACT=32779;t.GL_ALPHA_FUNCTION_SRC=768;t.GL_ALPHA_FUNCTION_ONE_MINUS_SRC_COLOR=769;t.GL_ALPHA_FUNCTION_SRC_ALPHA=770;t.GL_ALPHA_FUNCTION_ONE_MINUS_SRC_ALPHA=771;t.GL_ALPHA_FUNCTION_DST_ALPHA=772;t.GL_ALPHA_FUNCTION_ONE_MINUS_DST_ALPHA=773;t.GL_ALPHA_FUNCTION_DST_COLOR=774;t.GL_ALPHA_FUNCTION_ONE_MINUS_DST_COLOR=775;t.GL_ALPHA_FUNCTION_SRC_ALPHA_SATURATED=776;t.GL_ALPHA_FUNCTION_CONSTANT_COLOR=32769;t.GL_ALPHA_FUNCTION_ONE_MINUS_CONSTANT_COLOR=32770;t.GL_ALPHA_FUNCTION_CONSTANT_ALPHA=32771;t.GL_ALPHA_FUNCTION_ONE_MINUS_CONSTANT_ALPHA=32772;t.SnippetUrl="https://snippet.babylonjs.com";class A extends u{constructor(){super(...arguments),this._needProjectionMatrixCompute=!0}_setPosition(E){this._position=E}get position(){return this._position}set position(E){this._setPosition(E)}_setDirection(E){this._direction=E}get direction(){return this._direction}set direction(E){this._setDirection(E)}get shadowMinZ(){return this._shadowMinZ}set shadowMinZ(E){this._shadowMinZ=E,this.forceProjectionMatrixCompute()}get shadowMaxZ(){return this._shadowMaxZ}set shadowMaxZ(E){this._shadowMaxZ=E,this.forceProjectionMatrixCompute()}computeTransformedInformation(){return this.parent&&this.parent.getWorldMatrix?(this.transformedPosition||(this.transformedPosition=i.Zero()),i.TransformCoordinatesToRef(this.position,this.parent.getWorldMatrix(),this.transformedPosition),this.direction&&(this.transformedDirection||(this.transformedDirection=i.Zero()),i.TransformNormalToRef(this.direction,this.parent.getWorldMatrix(),this.transformedDirection)),!0):!1}getDepthScale(){return 50}getShadowDirection(E){return this.transformedDirection?this.transformedDirection:this.direction}getAbsolutePosition(){return this.transformedPosition?this.transformedPosition:this.position}setDirectionToTarget(E){return this.direction=i.Normalize(E.subtract(this.position)),this.direction}getRotation(){this.direction.normalize();const E=i.Cross(this.direction,c.Y),_=i.Cross(E,this.direction);return i.RotationFromAxis(E,_,this.direction)}needCube(){return!1}needProjectionMatrixCompute(){return this._needProjectionMatrixCompute}forceProjectionMatrixCompute(){this._needProjectionMatrixCompute=!0}_initCache(){super._initCache(),this._cache.position=i.Zero()}_isSynchronized(){return!!this._cache.position.equals(this.position)}computeWorldMatrix(E){return!E&&this.isSynchronized()?(this._currentRenderId=this.getScene().getRenderId(),this._worldMatrix):(this._updateCache(),this._cache.position.copyFrom(this.position),this._worldMatrix||(this._worldMatrix=n.Identity()),n.TranslationToRef(this.position.x,this.position.y,this.position.z,this._worldMatrix),this.parent&&this.parent.getWorldMatrix&&(this._worldMatrix.multiplyToRef(this.parent.getWorldMatrix(),this._worldMatrix),this._markSyncedWithParent()),this._worldMatrixDeterminantIsDirty=!0,this._worldMatrix)}getDepthMinZ(E){return this.shadowMinZ!==void 0?this.shadowMinZ:E.minZ}getDepthMaxZ(E){return this.shadowMaxZ!==void 0?this.shadowMaxZ:E.maxZ}setShadowProjectionMatrix(E,_,r){return this.customProjectionMatrixBuilder?this.customProjectionMatrixBuilder(_,r,E):this._setDefaultShadowProjectionMatrix(E,_,r),this}_syncParentEnabledState(){super._syncParentEnabledState(),(!this.parent||!this.parent.getWorldMatrix)&&(this.transformedPosition=null,this.transformedDirection=null)}}o([d()],A.prototype,"position",null);o([d()],A.prototype,"direction",null);o([e()],A.prototype,"shadowMinZ",null);o([e()],A.prototype,"shadowMaxZ",null);f.AddNodeConstructor("Light_Type_1",(s,E)=>()=>new R(s,i.Zero(),E));class R extends A{get shadowFrustumSize(){return this._shadowFrustumSize}set shadowFrustumSize(E){this._shadowFrustumSize=E,this.forceProjectionMatrixCompute()}get shadowOrthoScale(){return this._shadowOrthoScale}set shadowOrthoScale(E){this._shadowOrthoScale=E,this.forceProjectionMatrixCompute()}get orthoLeft(){return this._orthoLeft}set orthoLeft(E){this._orthoLeft=E}get orthoRight(){return this._orthoRight}set orthoRight(E){this._orthoRight=E}get orthoTop(){return this._orthoTop}set orthoTop(E){this._orthoTop=E}get orthoBottom(){return this._orthoBottom}set orthoBottom(E){this._orthoBottom=E}constructor(E,_,r){super(E,r),this._shadowFrustumSize=0,this._shadowOrthoScale=.1,this.autoUpdateExtends=!0,this.autoCalcShadowZBounds=!1,this._orthoLeft=Number.MAX_VALUE,this._orthoRight=Number.MIN_VALUE,this._orthoTop=Number.MIN_VALUE,this._orthoBottom=Number.MAX_VALUE,this.position=_.scale(-1),this.direction=_}getClassName(){return"DirectionalLight"}getTypeID(){return u.LIGHTTYPEID_DIRECTIONALLIGHT}_setDefaultShadowProjectionMatrix(E,_,r){this.shadowFrustumSize>0?this._setDefaultFixedFrustumShadowProjectionMatrix(E):this._setDefaultAutoExtendShadowProjectionMatrix(E,_,r)}_setDefaultFixedFrustumShadowProjectionMatrix(E){const _=this.getScene().activeCamera;_&&n.OrthoLHToRef(this.shadowFrustumSize,this.shadowFrustumSize,this.shadowMinZ!==void 0?this.shadowMinZ:_.minZ,this.shadowMaxZ!==void 0?this.shadowMaxZ:_.maxZ,E,this.getScene().getEngine().isNDCHalfZRange)}_setDefaultAutoExtendShadowProjectionMatrix(E,_,r){const h=this.getScene().activeCamera;if(!h)return;if(this.autoUpdateExtends||this._orthoLeft===Number.MAX_VALUE){const T=i.Zero();this._orthoLeft=Number.MAX_VALUE,this._orthoRight=Number.MIN_VALUE,this._orthoTop=Number.MIN_VALUE,this._orthoBottom=Number.MAX_VALUE;let O=Number.MAX_VALUE,a=Number.MIN_VALUE;for(let L=0;L<r.length;L++){const D=r[L];if(!D)continue;const C=D.getBoundingInfo().boundingBox;for(let N=0;N<C.vectorsWorld.length;N++)i.TransformCoordinatesToRef(C.vectorsWorld[N],_,T),T.x<this._orthoLeft&&(this._orthoLeft=T.x),T.y<this._orthoBottom&&(this._orthoBottom=T.y),T.x>this._orthoRight&&(this._orthoRight=T.x),T.y>this._orthoTop&&(this._orthoTop=T.y),this.autoCalcShadowZBounds&&(T.z<O&&(O=T.z),T.z>a&&(a=T.z))}this.autoCalcShadowZBounds&&(this._shadowMinZ=O,this._shadowMaxZ=a)}const S=this._orthoRight-this._orthoLeft,I=this._orthoTop-this._orthoBottom,M=this.shadowMinZ!==void 0?this.shadowMinZ:h.minZ,P=this.shadowMaxZ!==void 0?this.shadowMaxZ:h.maxZ,U=this.getScene().getEngine().useReverseDepthBuffer;n.OrthoOffCenterLHToRef(this._orthoLeft-S*this.shadowOrthoScale,this._orthoRight+S*this.shadowOrthoScale,this._orthoBottom-I*this.shadowOrthoScale,this._orthoTop+I*this.shadowOrthoScale,U?P:M,U?M:P,E,this.getScene().getEngine().isNDCHalfZRange)}_buildUniformLayout(){this._uniformBuffer.addUniform("vLightData",4),this._uniformBuffer.addUniform("vLightDiffuse",4),this._uniformBuffer.addUniform("vLightSpecular",4),this._uniformBuffer.addUniform("shadowsInfo",3),this._uniformBuffer.addUniform("depthValues",2),this._uniformBuffer.create()}transferToEffect(E,_){return this.computeTransformedInformation()?(this._uniformBuffer.updateFloat4("vLightData",this.transformedDirection.x,this.transformedDirection.y,this.transformedDirection.z,1,_),this):(this._uniformBuffer.updateFloat4("vLightData",this.direction.x,this.direction.y,this.direction.z,1,_),this)}transferToNodeMaterialEffect(E,_){return this.computeTransformedInformation()?(E.setFloat3(_,this.transformedDirection.x,this.transformedDirection.y,this.transformedDirection.z),this):(E.setFloat3(_,this.direction.x,this.direction.y,this.direction.z),this)}getDepthMinZ(E){const _=this._scene.getEngine();return!_.useReverseDepthBuffer&&_.isNDCHalfZRange?0:1}getDepthMaxZ(E){const _=this._scene.getEngine();return _.useReverseDepthBuffer&&_.isNDCHalfZRange?0:1}prepareLightSpecificDefines(E,_){E["DIRLIGHT"+_]=!0}}o([e()],R.prototype,"shadowFrustumSize",null);o([e()],R.prototype,"shadowOrthoScale",null);o([e()],R.prototype,"autoUpdateExtends",void 0);o([e()],R.prototype,"autoCalcShadowZBounds",void 0);o([e("orthoLeft")],R.prototype,"_orthoLeft",void 0);o([e("orthoRight")],R.prototype,"_orthoRight",void 0);o([e("orthoTop")],R.prototype,"_orthoTop",void 0);o([e("orthoBottom")],R.prototype,"_orthoBottom",void 0);export{t as C,R as D,A as S};
