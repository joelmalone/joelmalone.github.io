import{aa as L,V as m,g,v as E,w as U,f as v,d as Y,q as H,av as X,aA as S,W as k,ad as w,O as F,h as V,E as K,aE as Z,C as P,aK as N,at as q,as as $,aM as O,au as J,ar as Q,t as j,a1 as W}from"./runBabylonPlaygroundScene-32a4afbd.js";import{R as ee}from"./ExtrasAsMetadata-129db08e.js";import{B as te,k as z,p as ie,q as re,S as se,w as ne,H as ae,n as oe,y as de}from"./utilityLayerRenderer-fefda23f.js";import"./linesBuilder-a2dae4c1.js";class y{get mesh(){return this._mesh}set mesh(e){this._mesh!==e&&(this._mesh=e,e?(this._indices=e.getIndices(),this._positions=e.getVerticesData(L.PositionKind),this._normals=e.getVerticesData(L.NormalKind)):(this._indices=null,this._positions=null,this._normals=null))}constructor(e=null){this._indices=null,this._positions=null,this._normals=null,this._storedNormal=m.Zero(),this._mesh=null,this.direction1=new m(0,1,0),this.direction2=new m(0,1,0),this.useMeshNormalsForDirection=!0,this.mesh=e}startDirectionFunction(e,t,i,o){if(this.useMeshNormalsForDirection&&this._normals){m.TransformNormalToRef(this._storedNormal,e,t);return}const r=g.RandomRange(this.direction1.x,this.direction2.x),a=g.RandomRange(this.direction1.y,this.direction2.y),l=g.RandomRange(this.direction1.z,this.direction2.z);if(o){t.copyFromFloats(r,a,l);return}m.TransformNormalFromFloatsToRef(r,a,l,e,t)}startPositionFunction(e,t,i,o){if(!this._indices||!this._positions)return;const r=3*Math.random()*(this._indices.length/3)|0,a=Math.random(),l=Math.random()*(1-a),d=1-a-l,f=this._indices[r],u=this._indices[r+1],n=this._indices[r+2],s=E.Vector3[0],p=E.Vector3[1],C=E.Vector3[2],G=E.Vector3[3];m.FromArrayToRef(this._positions,f*3,s),m.FromArrayToRef(this._positions,u*3,p),m.FromArrayToRef(this._positions,n*3,C),G.x=a*s.x+l*p.x+d*C.x,G.y=a*s.y+l*p.y+d*C.y,G.z=a*s.z+l*p.z+d*C.z,o?t.copyFromFloats(G.x,G.y,G.z):m.TransformCoordinatesFromFloatsToRef(G.x,G.y,G.z,e,t),this.useMeshNormalsForDirection&&this._normals&&(m.FromArrayToRef(this._normals,f*3,s),m.FromArrayToRef(this._normals,u*3,p),m.FromArrayToRef(this._normals,n*3,C),this._storedNormal.x=a*s.x+l*p.x+d*C.x,this._storedNormal.y=a*s.y+l*p.y+d*C.y,this._storedNormal.z=a*s.z+l*p.z+d*C.z)}clone(){const e=new y(this.mesh);return U.DeepCopy(this,e),e}applyToShader(e){e.setVector3("direction1",this.direction1),e.setVector3("direction2",this.direction2)}buildUniformLayout(e){e.addUniform("direction1",3),e.addUniform("direction2",3)}getEffectDefines(){return""}getClassName(){return"MeshParticleEmitter"}serialize(){var e;const t={};return t.type=this.getClassName(),t.direction1=this.direction1.asArray(),t.direction2=this.direction2.asArray(),t.meshId=(e=this.mesh)===null||e===void 0?void 0:e.id,t.useMeshNormalsForDirection=this.useMeshNormalsForDirection,t}parse(e,t){m.FromArrayToRef(e.direction1,0,this.direction1),m.FromArrayToRef(e.direction2,0,this.direction2),e.meshId&&t&&(this.mesh=t.getLastMeshById(e.meshId)),this.useMeshNormalsForDirection=e.useMeshNormalsForDirection}}class he{constructor(e,t,i){this.gradient=e,this.color1=t,this.color2=i}getColorToRef(e){if(!this.color2){e.copyFrom(this.color1);return}v.LerpToRef(this.color1,this.color2,Math.random(),e)}}class ce{constructor(e,t){this.gradient=e,this.color=t}}class le{constructor(e,t,i){this.gradient=e,this.factor1=t,this.factor2=i}getFactor(){return this.factor2===void 0||this.factor2===this.factor1?this.factor1:this.factor1+(this.factor2-this.factor1)*Math.random()}}class R{static GetCurrentGradient(e,t,i){if(t[0].gradient>e){i(t[0],t[0],1);return}for(let r=0;r<t.length-1;r++){const a=t[r],l=t[r+1];if(e>=a.gradient&&e<=l.gradient){const d=(e-a.gradient)/(l.gradient-a.gradient);i(a,l,d);return}}const o=t.length-1;i(t[o],t[o],1)}}class b{constructor(e){this.particleSystem=e,this.position=m.Zero(),this.direction=m.Zero(),this.color=new v(0,0,0,0),this.colorStep=new v(0,0,0,0),this.lifeTime=1,this.age=0,this.size=0,this.scale=new Y(1,1),this.angle=0,this.angularSpeed=0,this.cellIndex=0,this._attachedSubEmitters=null,this._currentColor1=new v(0,0,0,0),this._currentColor2=new v(0,0,0,0),this._currentSize1=0,this._currentSize2=0,this._currentAngularSpeed1=0,this._currentAngularSpeed2=0,this._currentVelocity1=0,this._currentVelocity2=0,this._currentLimitVelocity1=0,this._currentLimitVelocity2=0,this._currentDrag1=0,this._currentDrag2=0,this.id=b._Count++,this.particleSystem.isAnimationSheetEnabled&&this._updateCellInfoFromSystem()}_updateCellInfoFromSystem(){this.cellIndex=this.particleSystem.startSpriteCellID}updateCellIndex(){let e=this.age,t=this.particleSystem.spriteCellChangeSpeed;this.particleSystem.spriteRandomStartCell&&(this._randomCellOffset===void 0&&(this._randomCellOffset=Math.random()*this.lifeTime),t===0?(t=1,e=this._randomCellOffset):e+=this._randomCellOffset);const i=this._initialEndSpriteCellID-this._initialStartSpriteCellID;let o;this._initialSpriteCellLoop?o=g.Clamp(e*t%this.lifeTime/this.lifeTime):o=g.Clamp(e*t/this.lifeTime),this.cellIndex=this._initialStartSpriteCellID+o*i|0}_inheritParticleInfoToSubEmitter(e){if(e.particleSystem.emitter.position){const t=e.particleSystem.emitter;if(t.position.copyFrom(this.position),e.inheritDirection){const i=E.Vector3[0];this.direction.normalizeToRef(i),t.setDirection(i,0,Math.PI/2)}}else e.particleSystem.emitter.copyFrom(this.position);this.direction.scaleToRef(e.inheritedVelocityAmount/2,E.Vector3[0]),e.particleSystem._inheritedVelocityOffset.copyFrom(E.Vector3[0])}_inheritParticleInfoToSubEmitters(){this._attachedSubEmitters&&this._attachedSubEmitters.length>0&&this._attachedSubEmitters.forEach(e=>{this._inheritParticleInfoToSubEmitter(e)})}_reset(){this.age=0,this.id=b._Count++,this._currentColorGradient=null,this._currentSizeGradient=null,this._currentAngularSpeedGradient=null,this._currentVelocityGradient=null,this._currentLimitVelocityGradient=null,this._currentDragGradient=null,this.cellIndex=this.particleSystem.startSpriteCellID,this._randomCellOffset=void 0}copyTo(e){e.position.copyFrom(this.position),this._initialDirection?e._initialDirection?e._initialDirection.copyFrom(this._initialDirection):e._initialDirection=this._initialDirection.clone():e._initialDirection=null,e.direction.copyFrom(this.direction),this._localPosition&&(e._localPosition?e._localPosition.copyFrom(this._localPosition):e._localPosition=this._localPosition.clone()),e.color.copyFrom(this.color),e.colorStep.copyFrom(this.colorStep),e.lifeTime=this.lifeTime,e.age=this.age,e._randomCellOffset=this._randomCellOffset,e.size=this.size,e.scale.copyFrom(this.scale),e.angle=this.angle,e.angularSpeed=this.angularSpeed,e.particleSystem=this.particleSystem,e.cellIndex=this.cellIndex,e.id=this.id,e._attachedSubEmitters=this._attachedSubEmitters,this._currentColorGradient&&(e._currentColorGradient=this._currentColorGradient,e._currentColor1.copyFrom(this._currentColor1),e._currentColor2.copyFrom(this._currentColor2)),this._currentSizeGradient&&(e._currentSizeGradient=this._currentSizeGradient,e._currentSize1=this._currentSize1,e._currentSize2=this._currentSize2),this._currentAngularSpeedGradient&&(e._currentAngularSpeedGradient=this._currentAngularSpeedGradient,e._currentAngularSpeed1=this._currentAngularSpeed1,e._currentAngularSpeed2=this._currentAngularSpeed2),this._currentVelocityGradient&&(e._currentVelocityGradient=this._currentVelocityGradient,e._currentVelocity1=this._currentVelocity1,e._currentVelocity2=this._currentVelocity2),this._currentLimitVelocityGradient&&(e._currentLimitVelocityGradient=this._currentLimitVelocityGradient,e._currentLimitVelocity1=this._currentLimitVelocity1,e._currentLimitVelocity2=this._currentLimitVelocity2),this._currentDragGradient&&(e._currentDragGradient=this._currentDragGradient,e._currentDrag1=this._currentDrag1,e._currentDrag2=this._currentDrag2),this.particleSystem.isAnimationSheetEnabled&&(e._initialStartSpriteCellID=this._initialStartSpriteCellID,e._initialEndSpriteCellID=this._initialEndSpriteCellID,e._initialSpriteCellLoop=this._initialSpriteCellLoop),this.particleSystem.useRampGradients&&(e.remapData&&this.remapData?e.remapData.copyFrom(this.remapData):e.remapData=new H(0,0,0,0)),this._randomNoiseCoordinates1&&(e._randomNoiseCoordinates1?(e._randomNoiseCoordinates1.copyFrom(this._randomNoiseCoordinates1),e._randomNoiseCoordinates2.copyFrom(this._randomNoiseCoordinates2)):(e._randomNoiseCoordinates1=this._randomNoiseCoordinates1.clone(),e._randomNoiseCoordinates2=this._randomNoiseCoordinates2.clone()))}}b._Count=0;var M;(function(T){T[T.ATTACHED=0]="ATTACHED",T[T.END=1]="END"})(M||(M={}));class B{constructor(e){if(this.particleSystem=e,this.type=M.END,this.inheritDirection=!1,this.inheritedVelocityAmount=0,!e.emitter||!e.emitter.dispose){const t=S("BABYLON.AbstractMesh");e.emitter=new t("SubemitterSystemEmitter",e.getScene()),e._disposeEmitterOnDispose=!0}}clone(){let e=this.particleSystem.emitter;if(!e)e=new m;else if(e instanceof m)e=e.clone();else if(e.getClassName().indexOf("Mesh")!==-1){const i=S("BABYLON.Mesh");e=new i("",e.getScene()),e.isVisible=!1}const t=new B(this.particleSystem.clone(this.particleSystem.name,e));return t.particleSystem.name+="Clone",t.type=this.type,t.inheritDirection=this.inheritDirection,t.inheritedVelocityAmount=this.inheritedVelocityAmount,t.particleSystem._disposeEmitterOnDispose=!0,t.particleSystem.disposeOnStop=!0,t}serialize(e=!1){const t={};return t.type=this.type,t.inheritDirection=this.inheritDirection,t.inheritedVelocityAmount=this.inheritedVelocityAmount,t.particleSystem=this.particleSystem.serialize(e),t}static _ParseParticleSystem(e,t,i,o=!1){throw X("ParseParticle")}static Parse(e,t,i){const o=e.particleSystem,r=new B(B._ParseParticleSystem(o,t,i,!0));return r.type=e.type,r.inheritDirection=e.inheritDirection,r.inheritedVelocityAmount=e.inheritedVelocityAmount,r.particleSystem._isSubEmitter=!0,r}dispose(){this.particleSystem.dispose()}}const fe="particlesPixelShader",ue=`#ifdef LOGARITHMICDEPTH
#extension GL_EXT_frag_depth : enable
#endif
varying vec2 vUV;
varying vec4 vColor;
uniform vec4 textureMask;
uniform sampler2D diffuseSampler;
#include<clipPlaneFragmentDeclaration>
#include<imageProcessingDeclaration>
#include<logDepthDeclaration>
#include<helperFunctions>
#include<imageProcessingFunctions>
#ifdef RAMPGRADIENT
varying vec4 remapRanges;
uniform sampler2D rampSampler;
#endif
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void) {
#define CUSTOM_FRAGMENT_MAIN_BEGIN
#include<clipPlaneFragment>
vec4 textureColor=texture2D(diffuseSampler,vUV);
vec4 baseColor=(textureColor*textureMask+(vec4(1.,1.,1.,1.)-textureMask))*vColor;
#ifdef RAMPGRADIENT
float alpha=baseColor.a;
float remappedColorIndex=clamp((alpha-remapRanges.x)/remapRanges.y,0.0,1.0);
vec4 rampColor=texture2D(rampSampler,vec2(1.0-remappedColorIndex,0.));
baseColor.rgb*=rampColor.rgb;
float finalAlpha=baseColor.a;
baseColor.a=clamp((alpha*rampColor.a-remapRanges.z)/remapRanges.w,0.0,1.0);
#endif
#ifdef BLENDMULTIPLYMODE
float sourceAlpha=vColor.a*textureColor.a;
baseColor.rgb=baseColor.rgb*sourceAlpha+vec3(1.0)*(1.0-sourceAlpha);
#endif
#include<logDepthFragment>
#ifdef IMAGEPROCESSINGPOSTPROCESS
baseColor.rgb=toLinearSpace(baseColor.rgb);
#else
#ifdef IMAGEPROCESSING
baseColor.rgb=toLinearSpace(baseColor.rgb);
baseColor=applyImageProcessing(baseColor);
#endif
#endif
gl_FragColor=baseColor;
#define CUSTOM_FRAGMENT_MAIN_END
}`;k.ShadersStore[fe]=ue;const _e="particlesVertexShader",me=`attribute vec3 position;
attribute vec4 color;
attribute float angle;
attribute vec2 size;
#ifdef ANIMATESHEET
attribute float cellIndex;
#endif
#ifndef BILLBOARD
attribute vec3 direction;
#endif
#ifdef BILLBOARDSTRETCHED
attribute vec3 direction;
#endif
#ifdef RAMPGRADIENT
attribute vec4 remapData;
#endif
attribute vec2 offset;
uniform mat4 view;
uniform mat4 projection;
uniform vec2 translationPivot;
#ifdef ANIMATESHEET
uniform vec3 particlesInfos; 
#endif
varying vec2 vUV;
varying vec4 vColor;
varying vec3 vPositionW;
#ifdef RAMPGRADIENT
varying vec4 remapRanges;
#endif
#if defined(BILLBOARD) && !defined(BILLBOARDY) && !defined(BILLBOARDSTRETCHED)
uniform mat4 invView;
#endif
#include<clipPlaneVertexDeclaration>
#include<logDepthDeclaration>
#ifdef BILLBOARD
uniform vec3 eyePosition;
#endif
vec3 rotate(vec3 yaxis,vec3 rotatedCorner) {
vec3 xaxis=normalize(cross(vec3(0.,1.0,0.),yaxis));
vec3 zaxis=normalize(cross(yaxis,xaxis));
vec3 row0=vec3(xaxis.x,xaxis.y,xaxis.z);
vec3 row1=vec3(yaxis.x,yaxis.y,yaxis.z);
vec3 row2=vec3(zaxis.x,zaxis.y,zaxis.z);
mat3 rotMatrix= mat3(row0,row1,row2);
vec3 alignedCorner=rotMatrix*rotatedCorner;
return position+alignedCorner;
}
#ifdef BILLBOARDSTRETCHED
vec3 rotateAlign(vec3 toCamera,vec3 rotatedCorner) {
vec3 normalizedToCamera=normalize(toCamera);
vec3 normalizedCrossDirToCamera=normalize(cross(normalize(direction),normalizedToCamera));
vec3 row0=vec3(normalizedCrossDirToCamera.x,normalizedCrossDirToCamera.y,normalizedCrossDirToCamera.z);
vec3 row2=vec3(normalizedToCamera.x,normalizedToCamera.y,normalizedToCamera.z);
#ifdef BILLBOARDSTRETCHED_LOCAL
vec3 row1=direction;
#else
vec3 crossProduct=normalize(cross(normalizedToCamera,normalizedCrossDirToCamera));
vec3 row1=vec3(crossProduct.x,crossProduct.y,crossProduct.z);
#endif
mat3 rotMatrix= mat3(row0,row1,row2);
vec3 alignedCorner=rotMatrix*rotatedCorner;
return position+alignedCorner;
}
#endif
#define CUSTOM_VERTEX_DEFINITIONS
void main(void) {
#define CUSTOM_VERTEX_MAIN_BEGIN
vec2 cornerPos;
cornerPos=(vec2(offset.x-0.5,offset.y -0.5)-translationPivot)*size+translationPivot;
#ifdef BILLBOARD
vec3 rotatedCorner;
#ifdef BILLBOARDY
rotatedCorner.x=cornerPos.x*cos(angle)-cornerPos.y*sin(angle);
rotatedCorner.z=cornerPos.x*sin(angle)+cornerPos.y*cos(angle);
rotatedCorner.y=0.;
vec3 yaxis=position-eyePosition;
yaxis.y=0.;
vPositionW=rotate(normalize(yaxis),rotatedCorner);
vec3 viewPos=(view*vec4(vPositionW,1.0)).xyz;
#elif defined(BILLBOARDSTRETCHED)
rotatedCorner.x=cornerPos.x*cos(angle)-cornerPos.y*sin(angle);
rotatedCorner.y=cornerPos.x*sin(angle)+cornerPos.y*cos(angle);
rotatedCorner.z=0.;
vec3 toCamera=position-eyePosition;
vPositionW=rotateAlign(toCamera,rotatedCorner);
vec3 viewPos=(view*vec4(vPositionW,1.0)).xyz;
#else
rotatedCorner.x=cornerPos.x*cos(angle)-cornerPos.y*sin(angle);
rotatedCorner.y=cornerPos.x*sin(angle)+cornerPos.y*cos(angle);
rotatedCorner.z=0.;
vec3 viewPos=(view*vec4(position,1.0)).xyz+rotatedCorner;
vPositionW=(invView*vec4(viewPos,1)).xyz;
#endif
#ifdef RAMPGRADIENT
remapRanges=remapData;
#endif
gl_Position=projection*vec4(viewPos,1.0);
#else
vec3 rotatedCorner;
rotatedCorner.x=cornerPos.x*cos(angle)-cornerPos.y*sin(angle);
rotatedCorner.z=cornerPos.x*sin(angle)+cornerPos.y*cos(angle);
rotatedCorner.y=0.;
vec3 yaxis=normalize(direction);
vPositionW=rotate(yaxis,rotatedCorner);
gl_Position=projection*view*vec4(vPositionW,1.0);
#endif
vColor=color;
#ifdef ANIMATESHEET
float rowOffset=floor(cellIndex*particlesInfos.z);
float columnOffset=cellIndex-rowOffset/particlesInfos.z;
vec2 uvScale=particlesInfos.xy;
vec2 uvOffset=vec2(offset.x ,1.0-offset.y);
vUV=(uvOffset+vec2(columnOffset,rowOffset))*uvScale;
#else
vUV=offset;
#endif
#if defined(CLIPPLANE) || defined(CLIPPLANE2) || defined(CLIPPLANE3) || defined(CLIPPLANE4) || defined(CLIPPLANE5) || defined(CLIPPLANE6)
vec4 worldPos=vec4(vPositionW,1.0);
#endif
#include<clipPlaneVertex>
#include<logDepthVertex>
#define CUSTOM_VERTEX_MAIN_END
}`;k.ShadersStore[_e]=me;class _ extends te{set onDispose(e){this._onDisposeObserver&&this.onDisposeObservable.remove(this._onDisposeObserver),this._onDisposeObserver=this.onDisposeObservable.add(e)}get useRampGradients(){return this._useRampGradients}set useRampGradients(e){this._useRampGradients!==e&&(this._useRampGradients=e,this._resetEffect())}get particles(){return this._particles}getActiveCount(){return this._particles.length}getClassName(){return"ParticleSystem"}isStopping(){return this._stopped&&this.isAlive()}getCustomEffect(e=0){var t,i;return(i=(t=this._customWrappers[e])===null||t===void 0?void 0:t.effect)!==null&&i!==void 0?i:this._customWrappers[0].effect}_getCustomDrawWrapper(e=0){var t;return(t=this._customWrappers[e])!==null&&t!==void 0?t:this._customWrappers[0]}setCustomEffect(e,t=0){this._customWrappers[t]=new w(this._engine),this._customWrappers[t].effect=e,this._customWrappers[t].drawContext&&(this._customWrappers[t].drawContext.useInstancing=this._useInstancing)}get onBeforeDrawParticlesObservable(){return this._onBeforeDrawParticlesObservable||(this._onBeforeDrawParticlesObservable=new F),this._onBeforeDrawParticlesObservable}get vertexShaderName(){return"particles"}get vertexBuffers(){return this._vertexBuffers}get indexBuffer(){return this._indexBuffer}constructor(e,t,i,o=null,r=!1,a=.01){super(e),this._emitterInverseWorldMatrix=V.Identity(),this._inheritedVelocityOffset=new m,this.onDisposeObservable=new F,this.onStoppedObservable=new F,this._particles=new Array,this._stockParticles=new Array,this._newPartsExcess=0,this._vertexBuffers={},this._scaledColorStep=new v(0,0,0,0),this._colorDiff=new v(0,0,0,0),this._scaledDirection=m.Zero(),this._scaledGravity=m.Zero(),this._currentRenderId=-1,this._useInstancing=!1,this._started=!1,this._stopped=!1,this._actualFrame=0,this._currentEmitRate1=0,this._currentEmitRate2=0,this._currentStartSize1=0,this._currentStartSize2=0,this.updateInAnimate=!0,this._rawTextureWidth=256,this._useRampGradients=!1,this._disposeEmitterOnDispose=!1,this.isLocal=!1,this.isGPU=!1,this._onBeforeDrawParticlesObservable=null,this.recycleParticle=d=>{const f=this._particles.pop();f!==d&&f.copyTo(d),this._stockParticles.push(f)},this._createParticle=()=>{let d;if(this._stockParticles.length!==0?(d=this._stockParticles.pop(),d._reset()):d=new b(this),this._subEmitters&&this._subEmitters.length>0){const f=this._subEmitters[Math.floor(Math.random()*this._subEmitters.length)];d._attachedSubEmitters=[],f.forEach(u=>{if(u.type===M.ATTACHED){const n=u.clone();d._attachedSubEmitters.push(n),n.particleSystem.start()}})}return d},this._emitFromParticle=d=>{if(!this._subEmitters||this._subEmitters.length===0)return;const f=Math.floor(Math.random()*this._subEmitters.length);this._subEmitters[f].forEach(u=>{if(u.type===M.END){const n=u.clone();d._inheritParticleInfoToSubEmitter(n),n.particleSystem._rootParticleSystem=this,this.activeSubSystems.push(n.particleSystem),n.particleSystem.start()}})},this._capacity=t,this._epsilon=a,this._isAnimationSheetEnabled=r,!i||i.getClassName()==="Scene"?(this._scene=i||K.LastCreatedScene,this._engine=this._scene.getEngine(),this.uniqueId=this._scene.getUniqueId(),this._scene.particleSystems.push(this)):(this._engine=i,this.defaultProjectionMatrix=V.PerspectiveFovLH(.8,1,.1,100,this._engine.isNDCHalfZRange)),this._engine.getCaps().vertexArrayObject&&(this._vertexArrayObject=null),this._attachImageProcessingConfiguration(null),this._customWrappers={0:new w(this._engine)},this._customWrappers[0].effect=o,this._drawWrappers=[],this._useInstancing=this._engine.getCaps().instancedArrays,this._createIndexBuffer(),this._createVertexBuffers(),this.particleEmitterType=new z;let l=null;this.updateFunction=d=>{var f;let u=null;this.noiseTexture&&(u=this.noiseTexture.getSize(),(f=this.noiseTexture.getContent())===null||f===void 0||f.then(n=>{l=n}));for(let n=0;n<d.length;n++){const s=d[n];let p=this._scaledUpdateSpeed;const C=s.age;if(s.age+=p,s.age>s.lifeTime){const h=s.age-C;p=(s.lifeTime-C)*p/h,s.age=s.lifeTime}const G=s.age/s.lifeTime;this._colorGradients&&this._colorGradients.length>0?R.GetCurrentGradient(G,this._colorGradients,(h,x,D)=>{h!==s._currentColorGradient&&(s._currentColor1.copyFrom(s._currentColor2),x.getColorToRef(s._currentColor2),s._currentColorGradient=h),v.LerpToRef(s._currentColor1,s._currentColor2,D,s.color)}):(s.colorStep.scaleToRef(p,this._scaledColorStep),s.color.addInPlace(this._scaledColorStep),s.color.a<0&&(s.color.a=0)),this._angularSpeedGradients&&this._angularSpeedGradients.length>0&&R.GetCurrentGradient(G,this._angularSpeedGradients,(h,x,D)=>{h!==s._currentAngularSpeedGradient&&(s._currentAngularSpeed1=s._currentAngularSpeed2,s._currentAngularSpeed2=x.getFactor(),s._currentAngularSpeedGradient=h),s.angularSpeed=g.Lerp(s._currentAngularSpeed1,s._currentAngularSpeed2,D)}),s.angle+=s.angularSpeed*p;let c=p;if(this._velocityGradients&&this._velocityGradients.length>0&&R.GetCurrentGradient(G,this._velocityGradients,(h,x,D)=>{h!==s._currentVelocityGradient&&(s._currentVelocity1=s._currentVelocity2,s._currentVelocity2=x.getFactor(),s._currentVelocityGradient=h),c*=g.Lerp(s._currentVelocity1,s._currentVelocity2,D)}),s.direction.scaleToRef(c,this._scaledDirection),this._limitVelocityGradients&&this._limitVelocityGradients.length>0&&R.GetCurrentGradient(G,this._limitVelocityGradients,(h,x,D)=>{h!==s._currentLimitVelocityGradient&&(s._currentLimitVelocity1=s._currentLimitVelocity2,s._currentLimitVelocity2=x.getFactor(),s._currentLimitVelocityGradient=h);const A=g.Lerp(s._currentLimitVelocity1,s._currentLimitVelocity2,D);s.direction.length()>A&&s.direction.scaleInPlace(this.limitVelocityDamping)}),this._dragGradients&&this._dragGradients.length>0&&R.GetCurrentGradient(G,this._dragGradients,(h,x,D)=>{h!==s._currentDragGradient&&(s._currentDrag1=s._currentDrag2,s._currentDrag2=x.getFactor(),s._currentDragGradient=h);const A=g.Lerp(s._currentDrag1,s._currentDrag2,D);this._scaledDirection.scaleInPlace(1-A)}),this.isLocal&&s._localPosition?(s._localPosition.addInPlace(this._scaledDirection),m.TransformCoordinatesToRef(s._localPosition,this._emitterWorldMatrix,s.position)):s.position.addInPlace(this._scaledDirection),l&&u&&s._randomNoiseCoordinates1){const h=this._fetchR(s._randomNoiseCoordinates1.x,s._randomNoiseCoordinates1.y,u.width,u.height,l),x=this._fetchR(s._randomNoiseCoordinates1.z,s._randomNoiseCoordinates2.x,u.width,u.height,l),D=this._fetchR(s._randomNoiseCoordinates2.y,s._randomNoiseCoordinates2.z,u.width,u.height,l),A=E.Vector3[0],I=E.Vector3[1];A.copyFromFloats((2*h-1)*this.noiseStrength.x,(2*x-1)*this.noiseStrength.y,(2*D-1)*this.noiseStrength.z),A.scaleToRef(p,I),s.direction.addInPlace(I)}if(this.gravity.scaleToRef(p,this._scaledGravity),s.direction.addInPlace(this._scaledGravity),this._sizeGradients&&this._sizeGradients.length>0&&R.GetCurrentGradient(G,this._sizeGradients,(h,x,D)=>{h!==s._currentSizeGradient&&(s._currentSize1=s._currentSize2,s._currentSize2=x.getFactor(),s._currentSizeGradient=h),s.size=g.Lerp(s._currentSize1,s._currentSize2,D)}),this._useRampGradients&&(this._colorRemapGradients&&this._colorRemapGradients.length>0&&R.GetCurrentGradient(G,this._colorRemapGradients,(h,x,D)=>{const A=g.Lerp(h.factor1,x.factor1,D),I=g.Lerp(h.factor2,x.factor2,D);s.remapData.x=A,s.remapData.y=I-A}),this._alphaRemapGradients&&this._alphaRemapGradients.length>0&&R.GetCurrentGradient(G,this._alphaRemapGradients,(h,x,D)=>{const A=g.Lerp(h.factor1,x.factor1,D),I=g.Lerp(h.factor2,x.factor2,D);s.remapData.z=A,s.remapData.w=I-A})),this._isAnimationSheetEnabled&&s.updateCellIndex(),s._inheritParticleInfoToSubEmitters(),s.age>=s.lifeTime){this._emitFromParticle(s),s._attachedSubEmitters&&(s._attachedSubEmitters.forEach(h=>{h.particleSystem.disposeOnStop=!0,h.particleSystem.stop()}),s._attachedSubEmitters=null),this.recycleParticle(s),n--;continue}}}}_addFactorGradient(e,t,i,o){const r=new le(t,i,o);e.push(r),e.sort((a,l)=>a.gradient<l.gradient?-1:a.gradient>l.gradient?1:0)}_removeFactorGradient(e,t){if(!e)return;let i=0;for(const o of e){if(o.gradient===t){e.splice(i,1);break}i++}}addLifeTimeGradient(e,t,i){return this._lifeTimeGradients||(this._lifeTimeGradients=[]),this._addFactorGradient(this._lifeTimeGradients,e,t,i),this}removeLifeTimeGradient(e){return this._removeFactorGradient(this._lifeTimeGradients,e),this}addSizeGradient(e,t,i){return this._sizeGradients||(this._sizeGradients=[]),this._addFactorGradient(this._sizeGradients,e,t,i),this}removeSizeGradient(e){return this._removeFactorGradient(this._sizeGradients,e),this}addColorRemapGradient(e,t,i){return this._colorRemapGradients||(this._colorRemapGradients=[]),this._addFactorGradient(this._colorRemapGradients,e,t,i),this}removeColorRemapGradient(e){return this._removeFactorGradient(this._colorRemapGradients,e),this}addAlphaRemapGradient(e,t,i){return this._alphaRemapGradients||(this._alphaRemapGradients=[]),this._addFactorGradient(this._alphaRemapGradients,e,t,i),this}removeAlphaRemapGradient(e){return this._removeFactorGradient(this._alphaRemapGradients,e),this}addAngularSpeedGradient(e,t,i){return this._angularSpeedGradients||(this._angularSpeedGradients=[]),this._addFactorGradient(this._angularSpeedGradients,e,t,i),this}removeAngularSpeedGradient(e){return this._removeFactorGradient(this._angularSpeedGradients,e),this}addVelocityGradient(e,t,i){return this._velocityGradients||(this._velocityGradients=[]),this._addFactorGradient(this._velocityGradients,e,t,i),this}removeVelocityGradient(e){return this._removeFactorGradient(this._velocityGradients,e),this}addLimitVelocityGradient(e,t,i){return this._limitVelocityGradients||(this._limitVelocityGradients=[]),this._addFactorGradient(this._limitVelocityGradients,e,t,i),this}removeLimitVelocityGradient(e){return this._removeFactorGradient(this._limitVelocityGradients,e),this}addDragGradient(e,t,i){return this._dragGradients||(this._dragGradients=[]),this._addFactorGradient(this._dragGradients,e,t,i),this}removeDragGradient(e){return this._removeFactorGradient(this._dragGradients,e),this}addEmitRateGradient(e,t,i){return this._emitRateGradients||(this._emitRateGradients=[]),this._addFactorGradient(this._emitRateGradients,e,t,i),this}removeEmitRateGradient(e){return this._removeFactorGradient(this._emitRateGradients,e),this}addStartSizeGradient(e,t,i){return this._startSizeGradients||(this._startSizeGradients=[]),this._addFactorGradient(this._startSizeGradients,e,t,i),this}removeStartSizeGradient(e){return this._removeFactorGradient(this._startSizeGradients,e),this}_createRampGradientTexture(){if(!this._rampGradients||!this._rampGradients.length||this._rampGradientsTexture||!this._scene)return;const e=new Uint8Array(this._rawTextureWidth*4),t=Z.Color3[0];for(let i=0;i<this._rawTextureWidth;i++){const o=i/this._rawTextureWidth;R.GetCurrentGradient(o,this._rampGradients,(r,a,l)=>{P.LerpToRef(r.color,a.color,l,t),e[i*4]=t.r*255,e[i*4+1]=t.g*255,e[i*4+2]=t.b*255,e[i*4+3]=255})}this._rampGradientsTexture=ee.CreateRGBATexture(e,this._rawTextureWidth,1,this._scene,!1,!1,1)}getRampGradients(){return this._rampGradients}forceRefreshGradients(){this._syncRampGradientTexture()}_syncRampGradientTexture(){this._rampGradients&&(this._rampGradients.sort((e,t)=>e.gradient<t.gradient?-1:e.gradient>t.gradient?1:0),this._rampGradientsTexture&&(this._rampGradientsTexture.dispose(),this._rampGradientsTexture=null),this._createRampGradientTexture())}addRampGradient(e,t){this._rampGradients||(this._rampGradients=[]);const i=new ce(e,t);return this._rampGradients.push(i),this._syncRampGradientTexture(),this}removeRampGradient(e){return this._removeGradientAndTexture(e,this._rampGradients,this._rampGradientsTexture),this._rampGradientsTexture=null,this._rampGradients&&this._rampGradients.length>0&&this._createRampGradientTexture(),this}addColorGradient(e,t,i){this._colorGradients||(this._colorGradients=[]);const o=new he(e,t,i);return this._colorGradients.push(o),this._colorGradients.sort((r,a)=>r.gradient<a.gradient?-1:r.gradient>a.gradient?1:0),this}removeColorGradient(e){if(!this._colorGradients)return this;let t=0;for(const i of this._colorGradients){if(i.gradient===e){this._colorGradients.splice(t,1);break}t++}return this}resetDrawCache(){for(const e of this._drawWrappers)if(e)for(const t of e)t==null||t.dispose();this._drawWrappers=[]}_fetchR(e,t,i,o,r){e=Math.abs(e)*.5+.5,t=Math.abs(t)*.5+.5;const a=e*i%i|0,l=t*o%o|0,d=(a+l*i)*4;return r[d]/255}_reset(){this._resetEffect()}_resetEffect(){this._vertexBuffer&&(this._vertexBuffer.dispose(),this._vertexBuffer=null),this._spriteBuffer&&(this._spriteBuffer.dispose(),this._spriteBuffer=null),this._vertexArrayObject&&(this._engine.releaseVertexArrayObject(this._vertexArrayObject),this._vertexArrayObject=null),this._createVertexBuffers()}_createVertexBuffers(){this._vertexBufferSize=this._useInstancing?10:12,this._isAnimationSheetEnabled&&(this._vertexBufferSize+=1),(!this._isBillboardBased||this.billboardMode===_.BILLBOARDMODE_STRETCHED||this.billboardMode===_.BILLBOARDMODE_STRETCHED_LOCAL)&&(this._vertexBufferSize+=3),this._useRampGradients&&(this._vertexBufferSize+=4);const e=this._engine,t=this._vertexBufferSize*(this._useInstancing?1:4);this._vertexData=new Float32Array(this._capacity*t),this._vertexBuffer=new N(e,this._vertexData,!0,t);let i=0;const o=this._vertexBuffer.createVertexBuffer(L.PositionKind,i,3,this._vertexBufferSize,this._useInstancing);this._vertexBuffers[L.PositionKind]=o,i+=3;const r=this._vertexBuffer.createVertexBuffer(L.ColorKind,i,4,this._vertexBufferSize,this._useInstancing);this._vertexBuffers[L.ColorKind]=r,i+=4;const a=this._vertexBuffer.createVertexBuffer("angle",i,1,this._vertexBufferSize,this._useInstancing);this._vertexBuffers.angle=a,i+=1;const l=this._vertexBuffer.createVertexBuffer("size",i,2,this._vertexBufferSize,this._useInstancing);if(this._vertexBuffers.size=l,i+=2,this._isAnimationSheetEnabled){const f=this._vertexBuffer.createVertexBuffer("cellIndex",i,1,this._vertexBufferSize,this._useInstancing);this._vertexBuffers.cellIndex=f,i+=1}if(!this._isBillboardBased||this.billboardMode===_.BILLBOARDMODE_STRETCHED||this.billboardMode===_.BILLBOARDMODE_STRETCHED_LOCAL){const f=this._vertexBuffer.createVertexBuffer("direction",i,3,this._vertexBufferSize,this._useInstancing);this._vertexBuffers.direction=f,i+=3}if(this._useRampGradients){const f=this._vertexBuffer.createVertexBuffer("remapData",i,4,this._vertexBufferSize,this._useInstancing);this._vertexBuffers.remapData=f,i+=4}let d;if(this._useInstancing){const f=new Float32Array([0,0,1,0,0,1,1,1]);this._spriteBuffer=new N(e,f,!1,2),d=this._spriteBuffer.createVertexBuffer("offset",0,2)}else d=this._vertexBuffer.createVertexBuffer("offset",i,2,this._vertexBufferSize,this._useInstancing),i+=2;this._vertexBuffers.offset=d,this.resetDrawCache()}_createIndexBuffer(){if(this._useInstancing)return;const e=[];let t=0;for(let i=0;i<this._capacity;i++)e.push(t),e.push(t+1),e.push(t+2),e.push(t),e.push(t+2),e.push(t+3),t+=4;this._indexBuffer=this._engine.createIndexBuffer(e)}getCapacity(){return this._capacity}isAlive(){return this._alive}isStarted(){return this._started}_prepareSubEmitterInternalArray(){this._subEmitters=new Array,this.subEmitters&&this.subEmitters.forEach(e=>{e instanceof _?this._subEmitters.push([new B(e)]):e instanceof B?this._subEmitters.push([e]):e instanceof Array&&this._subEmitters.push(e)})}start(e=this.startDelay){var t;if(!this.targetStopDuration&&this._hasTargetStopDurationDependantGradient())throw"Particle system started with a targetStopDuration dependant gradient (eg. startSizeGradients) but no targetStopDuration set";if(e){setTimeout(()=>{this.start(0)},e);return}if(this._prepareSubEmitterInternalArray(),this._started=!0,this._stopped=!1,this._actualFrame=0,this._subEmitters&&this._subEmitters.length!=0&&(this.activeSubSystems=new Array),this._emitRateGradients&&(this._emitRateGradients.length>0&&(this._currentEmitRateGradient=this._emitRateGradients[0],this._currentEmitRate1=this._currentEmitRateGradient.getFactor(),this._currentEmitRate2=this._currentEmitRate1),this._emitRateGradients.length>1&&(this._currentEmitRate2=this._emitRateGradients[1].getFactor())),this._startSizeGradients&&(this._startSizeGradients.length>0&&(this._currentStartSizeGradient=this._startSizeGradients[0],this._currentStartSize1=this._currentStartSizeGradient.getFactor(),this._currentStartSize2=this._currentStartSize1),this._startSizeGradients.length>1&&(this._currentStartSize2=this._startSizeGradients[1].getFactor())),this.preWarmCycles){((t=this.emitter)===null||t===void 0?void 0:t.getClassName().indexOf("Mesh"))!==-1&&this.emitter.computeWorldMatrix(!0);const i=this.noiseTexture;if(i&&i.onGeneratedObservable)i.onGeneratedObservable.addOnce(()=>{setTimeout(()=>{for(let o=0;o<this.preWarmCycles;o++)this.animate(!0),i.render()})});else for(let o=0;o<this.preWarmCycles;o++)this.animate(!0)}this.beginAnimationOnStart&&this.animations&&this.animations.length>0&&this._scene&&this._scene.beginAnimation(this,this.beginAnimationFrom,this.beginAnimationTo,this.beginAnimationLoop)}stop(e=!0){this._stopped||(this.onStoppedObservable.notifyObservers(this),this._stopped=!0,e&&this._stopSubEmitters())}reset(){this._stockParticles.length=0,this._particles.length=0}_appendParticleVertex(e,t,i,o){let r=e*this._vertexBufferSize;if(this._vertexData[r++]=t.position.x+this.worldOffset.x,this._vertexData[r++]=t.position.y+this.worldOffset.y,this._vertexData[r++]=t.position.z+this.worldOffset.z,this._vertexData[r++]=t.color.r,this._vertexData[r++]=t.color.g,this._vertexData[r++]=t.color.b,this._vertexData[r++]=t.color.a,this._vertexData[r++]=t.angle,this._vertexData[r++]=t.scale.x*t.size,this._vertexData[r++]=t.scale.y*t.size,this._isAnimationSheetEnabled&&(this._vertexData[r++]=t.cellIndex),this._isBillboardBased)(this.billboardMode===_.BILLBOARDMODE_STRETCHED||this.billboardMode===_.BILLBOARDMODE_STRETCHED_LOCAL)&&(this._vertexData[r++]=t.direction.x,this._vertexData[r++]=t.direction.y,this._vertexData[r++]=t.direction.z);else if(t._initialDirection){let a=t._initialDirection;this.isLocal&&(m.TransformNormalToRef(a,this._emitterWorldMatrix,E.Vector3[0]),a=E.Vector3[0]),a.x===0&&a.z===0&&(a.x=.001),this._vertexData[r++]=a.x,this._vertexData[r++]=a.y,this._vertexData[r++]=a.z}else{let a=t.direction;this.isLocal&&(m.TransformNormalToRef(a,this._emitterWorldMatrix,E.Vector3[0]),a=E.Vector3[0]),a.x===0&&a.z===0&&(a.x=.001),this._vertexData[r++]=a.x,this._vertexData[r++]=a.y,this._vertexData[r++]=a.z}this._useRampGradients&&t.remapData&&(this._vertexData[r++]=t.remapData.x,this._vertexData[r++]=t.remapData.y,this._vertexData[r++]=t.remapData.z,this._vertexData[r++]=t.remapData.w),this._useInstancing||(this._isAnimationSheetEnabled&&(i===0?i=this._epsilon:i===1&&(i=1-this._epsilon),o===0?o=this._epsilon:o===1&&(o=1-this._epsilon)),this._vertexData[r++]=i,this._vertexData[r++]=o)}_stopSubEmitters(){this.activeSubSystems&&(this.activeSubSystems.forEach(e=>{e.stop(!0)}),this.activeSubSystems=new Array)}_removeFromRoot(){if(!this._rootParticleSystem)return;const e=this._rootParticleSystem.activeSubSystems.indexOf(this);e!==-1&&this._rootParticleSystem.activeSubSystems.splice(e,1),this._rootParticleSystem=null}_update(e){if(this._alive=this._particles.length>0,this.emitter.position){const i=this.emitter;this._emitterWorldMatrix=i.getWorldMatrix()}else{const i=this.emitter;this._emitterWorldMatrix=V.Translation(i.x,i.y,i.z)}this._emitterWorldMatrix.invertToRef(this._emitterInverseWorldMatrix),this.updateFunction(this._particles);let t;for(let i=0;i<e&&this._particles.length!==this._capacity;i++){if(t=this._createParticle(),this._particles.push(t),this.targetStopDuration&&this._lifeTimeGradients&&this._lifeTimeGradients.length>0){const r=g.Clamp(this._actualFrame/this.targetStopDuration);R.GetCurrentGradient(r,this._lifeTimeGradients,(a,l)=>{const d=a,f=l,u=d.getFactor(),n=f.getFactor(),s=(r-d.gradient)/(f.gradient-d.gradient);t.lifeTime=g.Lerp(u,n,s)})}else t.lifeTime=g.RandomRange(this.minLifeTime,this.maxLifeTime);const o=g.RandomRange(this.minEmitPower,this.maxEmitPower);if(this.startPositionFunction?this.startPositionFunction(this._emitterWorldMatrix,t.position,t,this.isLocal):this.particleEmitterType.startPositionFunction(this._emitterWorldMatrix,t.position,t,this.isLocal),this.isLocal&&(t._localPosition?t._localPosition.copyFrom(t.position):t._localPosition=t.position.clone(),m.TransformCoordinatesToRef(t._localPosition,this._emitterWorldMatrix,t.position)),this.startDirectionFunction?this.startDirectionFunction(this._emitterWorldMatrix,t.direction,t,this.isLocal):this.particleEmitterType.startDirectionFunction(this._emitterWorldMatrix,t.direction,t,this.isLocal,this._emitterInverseWorldMatrix),o===0?t._initialDirection?t._initialDirection.copyFrom(t.direction):t._initialDirection=t.direction.clone():t._initialDirection=null,t.direction.scaleInPlace(o),!this._sizeGradients||this._sizeGradients.length===0?t.size=g.RandomRange(this.minSize,this.maxSize):(t._currentSizeGradient=this._sizeGradients[0],t._currentSize1=t._currentSizeGradient.getFactor(),t.size=t._currentSize1,this._sizeGradients.length>1?t._currentSize2=this._sizeGradients[1].getFactor():t._currentSize2=t._currentSize1),t.scale.copyFromFloats(g.RandomRange(this.minScaleX,this.maxScaleX),g.RandomRange(this.minScaleY,this.maxScaleY)),this._startSizeGradients&&this._startSizeGradients[0]&&this.targetStopDuration){const r=this._actualFrame/this.targetStopDuration;R.GetCurrentGradient(r,this._startSizeGradients,(a,l,d)=>{a!==this._currentStartSizeGradient&&(this._currentStartSize1=this._currentStartSize2,this._currentStartSize2=l.getFactor(),this._currentStartSizeGradient=a);const f=g.Lerp(this._currentStartSize1,this._currentStartSize2,d);t.scale.scaleInPlace(f)})}if(!this._angularSpeedGradients||this._angularSpeedGradients.length===0?t.angularSpeed=g.RandomRange(this.minAngularSpeed,this.maxAngularSpeed):(t._currentAngularSpeedGradient=this._angularSpeedGradients[0],t.angularSpeed=t._currentAngularSpeedGradient.getFactor(),t._currentAngularSpeed1=t.angularSpeed,this._angularSpeedGradients.length>1?t._currentAngularSpeed2=this._angularSpeedGradients[1].getFactor():t._currentAngularSpeed2=t._currentAngularSpeed1),t.angle=g.RandomRange(this.minInitialRotation,this.maxInitialRotation),this._velocityGradients&&this._velocityGradients.length>0&&(t._currentVelocityGradient=this._velocityGradients[0],t._currentVelocity1=t._currentVelocityGradient.getFactor(),this._velocityGradients.length>1?t._currentVelocity2=this._velocityGradients[1].getFactor():t._currentVelocity2=t._currentVelocity1),this._limitVelocityGradients&&this._limitVelocityGradients.length>0&&(t._currentLimitVelocityGradient=this._limitVelocityGradients[0],t._currentLimitVelocity1=t._currentLimitVelocityGradient.getFactor(),this._limitVelocityGradients.length>1?t._currentLimitVelocity2=this._limitVelocityGradients[1].getFactor():t._currentLimitVelocity2=t._currentLimitVelocity1),this._dragGradients&&this._dragGradients.length>0&&(t._currentDragGradient=this._dragGradients[0],t._currentDrag1=t._currentDragGradient.getFactor(),this._dragGradients.length>1?t._currentDrag2=this._dragGradients[1].getFactor():t._currentDrag2=t._currentDrag1),!this._colorGradients||this._colorGradients.length===0){const r=g.RandomRange(0,1);v.LerpToRef(this.color1,this.color2,r,t.color),this.colorDead.subtractToRef(t.color,this._colorDiff),this._colorDiff.scaleToRef(1/t.lifeTime,t.colorStep)}else t._currentColorGradient=this._colorGradients[0],t._currentColorGradient.getColorToRef(t.color),t._currentColor1.copyFrom(t.color),this._colorGradients.length>1?this._colorGradients[1].getColorToRef(t._currentColor2):t._currentColor2.copyFrom(t.color);this._isAnimationSheetEnabled&&(t._initialStartSpriteCellID=this.startSpriteCellID,t._initialEndSpriteCellID=this.endSpriteCellID,t._initialSpriteCellLoop=this.spriteCellLoop),t.direction.addInPlace(this._inheritedVelocityOffset),this._useRampGradients&&(t.remapData=new H(0,1,0,1)),this.noiseTexture&&(t._randomNoiseCoordinates1?(t._randomNoiseCoordinates1.copyFromFloats(Math.random(),Math.random(),Math.random()),t._randomNoiseCoordinates2.copyFromFloats(Math.random(),Math.random(),Math.random())):(t._randomNoiseCoordinates1=new m(Math.random(),Math.random(),Math.random()),t._randomNoiseCoordinates2=new m(Math.random(),Math.random(),Math.random()))),t._inheritParticleInfoToSubEmitters()}}static _GetAttributeNamesOrOptions(e=!1,t=!1,i=!1){const o=[L.PositionKind,L.ColorKind,"angle","offset","size"];return e&&o.push("cellIndex"),t||o.push("direction"),i&&o.push("remapData"),o}static _GetEffectCreationOptions(e=!1,t=!1){const i=["invView","view","projection","textureMask","translationPivot","eyePosition"];return q(i),e&&i.push("particlesInfos"),t&&i.push("logarithmicDepthConstant"),i}fillDefines(e,t){if(this._scene&&$(this,this._scene,e),this._isAnimationSheetEnabled&&e.push("#define ANIMATESHEET"),this.useLogarithmicDepth&&e.push("#define LOGARITHMICDEPTH"),t===_.BLENDMODE_MULTIPLY&&e.push("#define BLENDMULTIPLYMODE"),this._useRampGradients&&e.push("#define RAMPGRADIENT"),this._isBillboardBased)switch(e.push("#define BILLBOARD"),this.billboardMode){case _.BILLBOARDMODE_Y:e.push("#define BILLBOARDY");break;case _.BILLBOARDMODE_STRETCHED:case _.BILLBOARDMODE_STRETCHED_LOCAL:e.push("#define BILLBOARDSTRETCHED"),this.billboardMode===_.BILLBOARDMODE_STRETCHED_LOCAL&&e.push("#define BILLBOARDSTRETCHED_LOCAL");break;case _.BILLBOARDMODE_ALL:e.push("#define BILLBOARDMODE_ALL");break}this._imageProcessingConfiguration&&(this._imageProcessingConfiguration.prepareDefines(this._imageProcessingConfigurationDefines),e.push(this._imageProcessingConfigurationDefines.toString()))}fillUniformsAttributesAndSamplerNames(e,t,i){t.push(..._._GetAttributeNamesOrOptions(this._isAnimationSheetEnabled,this._isBillboardBased&&this.billboardMode!==_.BILLBOARDMODE_STRETCHED&&this.billboardMode!==_.BILLBOARDMODE_STRETCHED_LOCAL,this._useRampGradients)),e.push(..._._GetEffectCreationOptions(this._isAnimationSheetEnabled,this.useLogarithmicDepth)),i.push("diffuseSampler","rampSampler"),this._imageProcessingConfiguration&&(O.PrepareUniforms(e,this._imageProcessingConfigurationDefines),O.PrepareSamplers(i,this._imageProcessingConfigurationDefines))}_getWrapper(e){const t=this._getCustomDrawWrapper(e);if(t!=null&&t.effect)return t;const i=[];this.fillDefines(i,e);const o=this._engine._features.supportRenderPasses?this._engine.currentRenderPassId:0;let r=this._drawWrappers[o];r||(r=this._drawWrappers[o]=[]);let a=r[e];a||(a=new w(this._engine),a.drawContext&&(a.drawContext.useInstancing=this._useInstancing),r[e]=a);const l=i.join(`
`);if(a.defines!==l){const d=[],f=[],u=[];this.fillUniformsAttributesAndSamplerNames(f,d,u),a.setEffect(this._engine.createEffect("particles",d,f,u,l),l)}return a}animate(e=!1){var t;if(!this._started)return;if(!e&&this._scene){if(!this.isReady()||this._currentRenderId===this._scene.getFrameId())return;this._currentRenderId=this._scene.getFrameId()}this._scaledUpdateSpeed=this.updateSpeed*(e?this.preWarmStepOffset:((t=this._scene)===null||t===void 0?void 0:t.getAnimationRatio())||1);let i;if(this.manualEmitCount>-1)i=this.manualEmitCount,this._newPartsExcess=0,this.manualEmitCount=0;else{let o=this.emitRate;if(this._emitRateGradients&&this._emitRateGradients.length>0&&this.targetStopDuration){const r=this._actualFrame/this.targetStopDuration;R.GetCurrentGradient(r,this._emitRateGradients,(a,l,d)=>{a!==this._currentEmitRateGradient&&(this._currentEmitRate1=this._currentEmitRate2,this._currentEmitRate2=l.getFactor(),this._currentEmitRateGradient=a),o=g.Lerp(this._currentEmitRate1,this._currentEmitRate2,d)})}i=o*this._scaledUpdateSpeed>>0,this._newPartsExcess+=o*this._scaledUpdateSpeed-i}if(this._newPartsExcess>1&&(i+=this._newPartsExcess>>0,this._newPartsExcess-=this._newPartsExcess>>0),this._alive=!1,this._stopped?i=0:(this._actualFrame+=this._scaledUpdateSpeed,this.targetStopDuration&&this._actualFrame>=this.targetStopDuration&&this.stop()),this._update(i),this._stopped&&(this._alive||(this._started=!1,this.onAnimationEnd&&this.onAnimationEnd(),this.disposeOnStop&&this._scene&&this._scene._toBeDisposed.push(this))),!e){let o=0;for(let r=0;r<this._particles.length;r++){const a=this._particles[r];this._appendParticleVertices(o,a),o+=this._useInstancing?1:4}this._vertexBuffer&&this._vertexBuffer.updateDirectly(this._vertexData,0,this._particles.length)}this.manualEmitCount===0&&this.disposeOnStop&&this.stop()}_appendParticleVertices(e,t){this._appendParticleVertex(e++,t,0,0),this._useInstancing||(this._appendParticleVertex(e++,t,1,0),this._appendParticleVertex(e++,t,1,1),this._appendParticleVertex(e++,t,0,1))}rebuild(){var e,t;this._engine.getCaps().vertexArrayObject&&(this._vertexArrayObject=null),this._createIndexBuffer(),(e=this._spriteBuffer)===null||e===void 0||e._rebuild(),(t=this._vertexBuffer)===null||t===void 0||t._rebuild();for(const i in this._vertexBuffers)this._vertexBuffers[i]._rebuild();this.resetDrawCache()}isReady(){if(!this.emitter||this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.isReady()||!this.particleTexture||!this.particleTexture.isReady())return!1;if(this.blendMode!==_.BLENDMODE_MULTIPLYADD){if(!this._getWrapper(this.blendMode).effect.isReady())return!1}else if(!this._getWrapper(_.BLENDMODE_MULTIPLY).effect.isReady()||!this._getWrapper(_.BLENDMODE_ADD).effect.isReady())return!1;return!0}_render(e){var t,i;const o=this._getWrapper(e),r=o.effect,a=this._engine;a.enableEffect(o);const l=(t=this.defaultViewMatrix)!==null&&t!==void 0?t:this._scene.getViewMatrix();if(r.setTexture("diffuseSampler",this.particleTexture),r.setMatrix("view",l),r.setMatrix("projection",(i=this.defaultProjectionMatrix)!==null&&i!==void 0?i:this._scene.getProjectionMatrix()),this._isAnimationSheetEnabled&&this.particleTexture){const f=this.particleTexture.getBaseSize();r.setFloat3("particlesInfos",this.spriteCellWidth/f.width,this.spriteCellHeight/f.height,this.spriteCellWidth/f.width)}if(r.setVector2("translationPivot",this.translationPivot),r.setFloat4("textureMask",this.textureMask.r,this.textureMask.g,this.textureMask.b,this.textureMask.a),this._isBillboardBased&&this._scene){const f=this._scene.activeCamera;r.setVector3("eyePosition",f.globalPosition)}this._rampGradientsTexture&&((!this._rampGradients||!this._rampGradients.length)&&(this._rampGradientsTexture.dispose(),this._rampGradientsTexture=null),r.setTexture("rampSampler",this._rampGradientsTexture));const d=r.defines;switch(this._scene&&J(r,this,this._scene),d.indexOf("#define BILLBOARDMODE_ALL")>=0&&(l.invertToRef(E.Matrix[0]),r.setMatrix("invView",E.Matrix[0])),this._vertexArrayObject!==void 0?(this._vertexArrayObject||(this._vertexArrayObject=this._engine.recordVertexArrayObject(this._vertexBuffers,this._indexBuffer,r)),this._engine.bindVertexArrayObject(this._vertexArrayObject,this._indexBuffer)):a.bindBuffers(this._vertexBuffers,this._indexBuffer,r),this.useLogarithmicDepth&&this._scene&&Q.BindLogDepth(d,r,this._scene),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(r),e){case _.BLENDMODE_ADD:a.setAlphaMode(1);break;case _.BLENDMODE_ONEONE:a.setAlphaMode(6);break;case _.BLENDMODE_STANDARD:a.setAlphaMode(2);break;case _.BLENDMODE_MULTIPLY:a.setAlphaMode(4);break}return this._onBeforeDrawParticlesObservable&&this._onBeforeDrawParticlesObservable.notifyObservers(r),this._useInstancing?a.drawArraysType(7,0,4,this._particles.length):a.drawElementsType(0,0,this._particles.length*6),this._particles.length}render(){if(!this.isReady()||!this._particles.length)return 0;const e=this._engine;e.setState&&(e.setState(!1),this.forceDepthWrite&&e.setDepthWrite(!0));let t=0;return this.blendMode===_.BLENDMODE_MULTIPLYADD?t=this._render(_.BLENDMODE_MULTIPLY)+this._render(_.BLENDMODE_ADD):t=this._render(this.blendMode),this._engine.unbindInstanceAttributes(),this._engine.setAlphaMode(0),t}dispose(e=!0){if(this.resetDrawCache(),this._vertexBuffer&&(this._vertexBuffer.dispose(),this._vertexBuffer=null),this._spriteBuffer&&(this._spriteBuffer.dispose(),this._spriteBuffer=null),this._indexBuffer&&(this._engine._releaseBuffer(this._indexBuffer),this._indexBuffer=null),this._vertexArrayObject&&(this._engine.releaseVertexArrayObject(this._vertexArrayObject),this._vertexArrayObject=null),e&&this.particleTexture&&(this.particleTexture.dispose(),this.particleTexture=null),e&&this.noiseTexture&&(this.noiseTexture.dispose(),this.noiseTexture=null),this._rampGradientsTexture&&(this._rampGradientsTexture.dispose(),this._rampGradientsTexture=null),this._removeFromRoot(),this.subEmitters&&!this._subEmitters&&this._prepareSubEmitterInternalArray(),this._subEmitters&&this._subEmitters.length){for(let t=0;t<this._subEmitters.length;t++)for(const i of this._subEmitters[t])i.dispose();this._subEmitters=[],this.subEmitters=[]}if(this._disposeEmitterOnDispose&&this.emitter&&this.emitter.dispose&&this.emitter.dispose(!0),this._onBeforeDrawParticlesObservable&&this._onBeforeDrawParticlesObservable.clear(),this._scene){const t=this._scene.particleSystems.indexOf(this);t>-1&&this._scene.particleSystems.splice(t,1),this._scene._activeParticleSystems.dispose()}this.onDisposeObservable.notifyObservers(this),this.onDisposeObservable.clear(),this.onStoppedObservable.clear(),this.reset()}clone(e,t,i=!1){const o=Object.assign({},this._customWrappers);let r=null;const a=this._engine;if(a.createEffectForParticles&&this.customShader!=null){r=this.customShader;const f=r.shaderOptions.defines.length>0?r.shaderOptions.defines.join(`
`):"",u=a.createEffectForParticles(r.shaderPath.fragmentElement,r.shaderOptions.uniforms,r.shaderOptions.samplers,f);o[0]?o[0].effect=u:this.setCustomEffect(u,0)}const l=this.serialize(i),d=_.Parse(l,this._scene||this._engine,this._rootUrl);return d.name=e,d.customShader=r,d._customWrappers=o,t===void 0&&(t=this.emitter),this.noiseTexture&&(d.noiseTexture=this.noiseTexture.clone()),d.emitter=t,this.preventAutoStart||d.start(),d}serialize(e=!1){const t={};if(_._Serialize(t,this,e),t.textureMask=this.textureMask.asArray(),t.customShader=this.customShader,t.preventAutoStart=this.preventAutoStart,this.subEmitters){t.subEmitters=[],this._subEmitters||this._prepareSubEmitterInternalArray();for(const i of this._subEmitters){const o=[];for(const r of i)o.push(r.serialize(e));t.subEmitters.push(o)}}return t}static _Serialize(e,t,i){if(e.name=t.name,e.id=t.id,e.capacity=t.getCapacity(),e.disposeOnStop=t.disposeOnStop,e.manualEmitCount=t.manualEmitCount,t.emitter.position){const c=t.emitter;e.emitterId=c.id}else{const c=t.emitter;e.emitter=c.asArray()}t.particleEmitterType&&(e.particleEmitterType=t.particleEmitterType.serialize()),t.particleTexture&&(i?e.texture=t.particleTexture.serialize():(e.textureName=t.particleTexture.name,e.invertY=!!t.particleTexture._invertY)),e.isLocal=t.isLocal,j.AppendSerializedAnimations(t,e),e.beginAnimationOnStart=t.beginAnimationOnStart,e.beginAnimationFrom=t.beginAnimationFrom,e.beginAnimationTo=t.beginAnimationTo,e.beginAnimationLoop=t.beginAnimationLoop,e.startDelay=t.startDelay,e.renderingGroupId=t.renderingGroupId,e.isBillboardBased=t.isBillboardBased,e.billboardMode=t.billboardMode,e.minAngularSpeed=t.minAngularSpeed,e.maxAngularSpeed=t.maxAngularSpeed,e.minSize=t.minSize,e.maxSize=t.maxSize,e.minScaleX=t.minScaleX,e.maxScaleX=t.maxScaleX,e.minScaleY=t.minScaleY,e.maxScaleY=t.maxScaleY,e.minEmitPower=t.minEmitPower,e.maxEmitPower=t.maxEmitPower,e.minLifeTime=t.minLifeTime,e.maxLifeTime=t.maxLifeTime,e.emitRate=t.emitRate,e.gravity=t.gravity.asArray(),e.noiseStrength=t.noiseStrength.asArray(),e.color1=t.color1.asArray(),e.color2=t.color2.asArray(),e.colorDead=t.colorDead.asArray(),e.updateSpeed=t.updateSpeed,e.targetStopDuration=t.targetStopDuration,e.blendMode=t.blendMode,e.preWarmCycles=t.preWarmCycles,e.preWarmStepOffset=t.preWarmStepOffset,e.minInitialRotation=t.minInitialRotation,e.maxInitialRotation=t.maxInitialRotation,e.startSpriteCellID=t.startSpriteCellID,e.spriteCellLoop=t.spriteCellLoop,e.endSpriteCellID=t.endSpriteCellID,e.spriteCellChangeSpeed=t.spriteCellChangeSpeed,e.spriteCellWidth=t.spriteCellWidth,e.spriteCellHeight=t.spriteCellHeight,e.spriteRandomStartCell=t.spriteRandomStartCell,e.isAnimationSheetEnabled=t.isAnimationSheetEnabled,e.useLogarithmicDepth=t.useLogarithmicDepth;const o=t.getColorGradients();if(o){e.colorGradients=[];for(const c of o){const h={gradient:c.gradient,color1:c.color1.asArray()};c.color2?h.color2=c.color2.asArray():h.color2=c.color1.asArray(),e.colorGradients.push(h)}}const r=t.getRampGradients();if(r){e.rampGradients=[];for(const c of r){const h={gradient:c.gradient,color:c.color.asArray()};e.rampGradients.push(h)}e.useRampGradients=t.useRampGradients}const a=t.getColorRemapGradients();if(a){e.colorRemapGradients=[];for(const c of a){const h={gradient:c.gradient,factor1:c.factor1};c.factor2!==void 0?h.factor2=c.factor2:h.factor2=c.factor1,e.colorRemapGradients.push(h)}}const l=t.getAlphaRemapGradients();if(l){e.alphaRemapGradients=[];for(const c of l){const h={gradient:c.gradient,factor1:c.factor1};c.factor2!==void 0?h.factor2=c.factor2:h.factor2=c.factor1,e.alphaRemapGradients.push(h)}}const d=t.getSizeGradients();if(d){e.sizeGradients=[];for(const c of d){const h={gradient:c.gradient,factor1:c.factor1};c.factor2!==void 0?h.factor2=c.factor2:h.factor2=c.factor1,e.sizeGradients.push(h)}}const f=t.getAngularSpeedGradients();if(f){e.angularSpeedGradients=[];for(const c of f){const h={gradient:c.gradient,factor1:c.factor1};c.factor2!==void 0?h.factor2=c.factor2:h.factor2=c.factor1,e.angularSpeedGradients.push(h)}}const u=t.getVelocityGradients();if(u){e.velocityGradients=[];for(const c of u){const h={gradient:c.gradient,factor1:c.factor1};c.factor2!==void 0?h.factor2=c.factor2:h.factor2=c.factor1,e.velocityGradients.push(h)}}const n=t.getDragGradients();if(n){e.dragGradients=[];for(const c of n){const h={gradient:c.gradient,factor1:c.factor1};c.factor2!==void 0?h.factor2=c.factor2:h.factor2=c.factor1,e.dragGradients.push(h)}}const s=t.getEmitRateGradients();if(s){e.emitRateGradients=[];for(const c of s){const h={gradient:c.gradient,factor1:c.factor1};c.factor2!==void 0?h.factor2=c.factor2:h.factor2=c.factor1,e.emitRateGradients.push(h)}}const p=t.getStartSizeGradients();if(p){e.startSizeGradients=[];for(const c of p){const h={gradient:c.gradient,factor1:c.factor1};c.factor2!==void 0?h.factor2=c.factor2:h.factor2=c.factor1,e.startSizeGradients.push(h)}}const C=t.getLifeTimeGradients();if(C){e.lifeTimeGradients=[];for(const c of C){const h={gradient:c.gradient,factor1:c.factor1};c.factor2!==void 0?h.factor2=c.factor2:h.factor2=c.factor1,e.lifeTimeGradients.push(h)}}const G=t.getLimitVelocityGradients();if(G){e.limitVelocityGradients=[];for(const c of G){const h={gradient:c.gradient,factor1:c.factor1};c.factor2!==void 0?h.factor2=c.factor2:h.factor2=c.factor1,e.limitVelocityGradients.push(h)}e.limitVelocityDamping=t.limitVelocityDamping}t.noiseTexture&&(e.noiseTexture=t.noiseTexture.serialize())}static _Parse(e,t,i,o){var r,a,l;let d;i instanceof W?d=null:d=i;const f=S("BABYLON.Texture");if(f&&d&&(e.texture?t.particleTexture=f.Parse(e.texture,d,o):e.textureName&&(t.particleTexture=new f(o+e.textureName,d,!1,e.invertY!==void 0?e.invertY:!0),t.particleTexture.name=e.textureName)),!e.emitterId&&e.emitterId!==0&&e.emitter===void 0?t.emitter=m.Zero():e.emitterId&&d?t.emitter=d.getLastMeshById(e.emitterId):t.emitter=m.FromArray(e.emitter),t.isLocal=!!e.isLocal,e.renderingGroupId!==void 0&&(t.renderingGroupId=e.renderingGroupId),e.isBillboardBased!==void 0&&(t.isBillboardBased=e.isBillboardBased),e.billboardMode!==void 0&&(t.billboardMode=e.billboardMode),e.useLogarithmicDepth!==void 0&&(t.useLogarithmicDepth=e.useLogarithmicDepth),e.animations){for(let n=0;n<e.animations.length;n++){const s=e.animations[n],p=S("BABYLON.Animation");p&&t.animations.push(p.Parse(s))}t.beginAnimationOnStart=e.beginAnimationOnStart,t.beginAnimationFrom=e.beginAnimationFrom,t.beginAnimationTo=e.beginAnimationTo,t.beginAnimationLoop=e.beginAnimationLoop}if(e.autoAnimate&&d&&d.beginAnimation(t,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,e.autoAnimateSpeed||1),t.startDelay=e.startDelay|0,t.minAngularSpeed=e.minAngularSpeed,t.maxAngularSpeed=e.maxAngularSpeed,t.minSize=e.minSize,t.maxSize=e.maxSize,e.minScaleX&&(t.minScaleX=e.minScaleX,t.maxScaleX=e.maxScaleX,t.minScaleY=e.minScaleY,t.maxScaleY=e.maxScaleY),e.preWarmCycles!==void 0&&(t.preWarmCycles=e.preWarmCycles,t.preWarmStepOffset=e.preWarmStepOffset),e.minInitialRotation!==void 0&&(t.minInitialRotation=e.minInitialRotation,t.maxInitialRotation=e.maxInitialRotation),t.minLifeTime=e.minLifeTime,t.maxLifeTime=e.maxLifeTime,t.minEmitPower=e.minEmitPower,t.maxEmitPower=e.maxEmitPower,t.emitRate=e.emitRate,t.gravity=m.FromArray(e.gravity),e.noiseStrength&&(t.noiseStrength=m.FromArray(e.noiseStrength)),t.color1=v.FromArray(e.color1),t.color2=v.FromArray(e.color2),t.colorDead=v.FromArray(e.colorDead),t.updateSpeed=e.updateSpeed,t.targetStopDuration=e.targetStopDuration,t.blendMode=e.blendMode,e.colorGradients)for(const n of e.colorGradients)t.addColorGradient(n.gradient,v.FromArray(n.color1),n.color2?v.FromArray(n.color2):void 0);if(e.rampGradients){for(const n of e.rampGradients)t.addRampGradient(n.gradient,P.FromArray(n.color));t.useRampGradients=e.useRampGradients}if(e.colorRemapGradients)for(const n of e.colorRemapGradients)t.addColorRemapGradient(n.gradient,n.factor1!==void 0?n.factor1:n.factor,n.factor2);if(e.alphaRemapGradients)for(const n of e.alphaRemapGradients)t.addAlphaRemapGradient(n.gradient,n.factor1!==void 0?n.factor1:n.factor,n.factor2);if(e.sizeGradients)for(const n of e.sizeGradients)t.addSizeGradient(n.gradient,n.factor1!==void 0?n.factor1:n.factor,n.factor2);if(e.angularSpeedGradients)for(const n of e.angularSpeedGradients)t.addAngularSpeedGradient(n.gradient,n.factor1!==void 0?n.factor1:n.factor,n.factor2);if(e.velocityGradients)for(const n of e.velocityGradients)t.addVelocityGradient(n.gradient,n.factor1!==void 0?n.factor1:n.factor,n.factor2);if(e.dragGradients)for(const n of e.dragGradients)t.addDragGradient(n.gradient,n.factor1!==void 0?n.factor1:n.factor,n.factor2);if(e.emitRateGradients)for(const n of e.emitRateGradients)t.addEmitRateGradient(n.gradient,n.factor1!==void 0?n.factor1:n.factor,n.factor2);if(e.startSizeGradients)for(const n of e.startSizeGradients)t.addStartSizeGradient(n.gradient,n.factor1!==void 0?n.factor1:n.factor,n.factor2);if(e.lifeTimeGradients)for(const n of e.lifeTimeGradients)t.addLifeTimeGradient(n.gradient,n.factor1!==void 0?n.factor1:n.factor,n.factor2);if(e.limitVelocityGradients){for(const n of e.limitVelocityGradients)t.addLimitVelocityGradient(n.gradient,n.factor1!==void 0?n.factor1:n.factor,n.factor2);t.limitVelocityDamping=e.limitVelocityDamping}if(e.noiseTexture&&d){const n=S("BABYLON.ProceduralTexture");t.noiseTexture=n.Parse(e.noiseTexture,d,o)}let u;if(e.particleEmitterType){switch(e.particleEmitterType.type){case"SphereParticleEmitter":u=new de;break;case"SphereDirectedParticleEmitter":u=new se;break;case"ConeEmitter":case"ConeParticleEmitter":u=new oe;break;case"CylinderParticleEmitter":u=new re;break;case"CylinderDirectedParticleEmitter":u=new ie;break;case"HemisphericParticleEmitter":u=new ae;break;case"PointParticleEmitter":u=new ne;break;case"MeshParticleEmitter":u=new y;break;case"BoxEmitter":case"BoxParticleEmitter":default:u=new z;break}u.parse(e.particleEmitterType,d)}else u=new z,u.parse(e,d);t.particleEmitterType=u,t.startSpriteCellID=e.startSpriteCellID,t.endSpriteCellID=e.endSpriteCellID,t.spriteCellLoop=(r=e.spriteCellLoop)!==null&&r!==void 0?r:!0,t.spriteCellWidth=e.spriteCellWidth,t.spriteCellHeight=e.spriteCellHeight,t.spriteCellChangeSpeed=e.spriteCellChangeSpeed,t.spriteRandomStartCell=e.spriteRandomStartCell,t.disposeOnStop=(a=e.disposeOnStop)!==null&&a!==void 0?a:!1,t.manualEmitCount=(l=e.manualEmitCount)!==null&&l!==void 0?l:-1}static Parse(e,t,i,o=!1,r){const a=e.name;let l=null,d=null,f,u;if(t instanceof W?f=t:(u=t,f=u.getEngine()),e.customShader&&f.createEffectForParticles){d=e.customShader;const s=d.shaderOptions.defines.length>0?d.shaderOptions.defines.join(`
`):"";l=f.createEffectForParticles(d.shaderPath.fragmentElement,d.shaderOptions.uniforms,d.shaderOptions.samplers,s)}const n=new _(a,r||e.capacity,t,l,e.isAnimationSheetEnabled);if(n.customShader=d,n._rootUrl=i,e.id&&(n.id=e.id),e.subEmitters){n.subEmitters=[];for(const s of e.subEmitters){const p=[];for(const C of s)p.push(B.Parse(C,t,i));n.subEmitters.push(p)}}return _._Parse(e,n,t,i),e.textureMask&&(n.textureMask=v.FromArray(e.textureMask)),e.preventAutoStart&&(n.preventAutoStart=e.preventAutoStart),!o&&!n.preventAutoStart&&n.start(),n}}_.BILLBOARDMODE_Y=2;_.BILLBOARDMODE_ALL=7;_.BILLBOARDMODE_STRETCHED=8;_.BILLBOARDMODE_STRETCHED_LOCAL=9;B._ParseParticleSystem=_.Parse;export{he as C,le as F,R as G,y as M,_ as P,B as S,ce as a,b,M as c};
