import{M as d,V as l,Q as c,L as p,a6 as _,x as y,y as P}from"./runBabylonPlaygroundScene-32a4afbd.js";import{a as m}from"./physicsEngineComponent-f32049b7.js";d._PhysicsImpostorParser=function(f,t,i){return new n(t,i.physicsImpostor,{mass:i.physicsMass,friction:i.physicsFriction,restitution:i.physicsRestitution},f)};class n{get isDisposed(){return this._isDisposed}get mass(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getBodyMass(this):0}set mass(t){this.setMass(t)}get friction(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getBodyFriction(this):0}set friction(t){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setBodyFriction(this,t)}get restitution(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getBodyRestitution(this):0}set restitution(t){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setBodyRestitution(this,t)}get pressure(){if(!this._physicsEngine)return 0;const t=this._physicsEngine.getPhysicsPlugin();return t.setBodyPressure?t.getBodyPressure(this):0}set pressure(t){if(!this._physicsEngine)return;const i=this._physicsEngine.getPhysicsPlugin();i.setBodyPressure&&i.setBodyPressure(this,t)}get stiffness(){if(!this._physicsEngine)return 0;const t=this._physicsEngine.getPhysicsPlugin();return t.getBodyStiffness?t.getBodyStiffness(this):0}set stiffness(t){if(!this._physicsEngine)return;const i=this._physicsEngine.getPhysicsPlugin();i.setBodyStiffness&&i.setBodyStiffness(this,t)}get velocityIterations(){if(!this._physicsEngine)return 0;const t=this._physicsEngine.getPhysicsPlugin();return t.getBodyVelocityIterations?t.getBodyVelocityIterations(this):0}set velocityIterations(t){if(!this._physicsEngine)return;const i=this._physicsEngine.getPhysicsPlugin();i.setBodyVelocityIterations&&i.setBodyVelocityIterations(this,t)}get positionIterations(){if(!this._physicsEngine)return 0;const t=this._physicsEngine.getPhysicsPlugin();return t.getBodyPositionIterations?t.getBodyPositionIterations(this):0}set positionIterations(t){if(!this._physicsEngine)return;const i=this._physicsEngine.getPhysicsPlugin();i.setBodyPositionIterations&&i.setBodyPositionIterations(this,t)}constructor(t,i,s={mass:0},r){if(this.object=t,this.type=i,this._options=s,this._scene=r,this._pluginData={},this._bodyUpdateRequired=!1,this._onBeforePhysicsStepCallbacks=new Array,this._onAfterPhysicsStepCallbacks=new Array,this._onPhysicsCollideCallbacks=[],this._deltaPosition=l.Zero(),this._isDisposed=!1,this.soft=!1,this.segments=0,this._tmpQuat=new c,this._tmpQuat2=new c,this.beforeStep=()=>{this._physicsEngine&&(this.object.translate(this._deltaPosition,-1),this._deltaRotationConjugated&&this.object.rotationQuaternion&&this.object.rotationQuaternion.multiplyToRef(this._deltaRotationConjugated,this.object.rotationQuaternion),this.object.computeWorldMatrix(!1),this.object.parent&&this.object.rotationQuaternion?(this.getParentsRotation(),this._tmpQuat.multiplyToRef(this.object.rotationQuaternion,this._tmpQuat)):this._tmpQuat.copyFrom(this.object.rotationQuaternion||new c),this._options.disableBidirectionalTransformation||this.object.rotationQuaternion&&this._physicsEngine.getPhysicsPlugin().setPhysicsBodyTransformation(this,this.object.getAbsolutePosition(),this._tmpQuat),this._onBeforePhysicsStepCallbacks.forEach(o=>{o(this)}))},this.afterStep=()=>{this._physicsEngine&&(this._onAfterPhysicsStepCallbacks.forEach(o=>{o(this)}),this._physicsEngine.getPhysicsPlugin().setTransformationFromPhysicsBody(this),this.object.parent&&this.object.rotationQuaternion&&(this.getParentsRotation(),this._tmpQuat.conjugateInPlace(),this._tmpQuat.multiplyToRef(this.object.rotationQuaternion,this.object.rotationQuaternion)),this.object.setAbsolutePosition(this.object.position),this._deltaRotation?(this.object.rotationQuaternion&&this.object.rotationQuaternion.multiplyToRef(this._deltaRotation,this.object.rotationQuaternion),this._deltaPosition.applyRotationQuaternionToRef(this._deltaRotation,n._TmpVecs[0]),this.object.translate(n._TmpVecs[0],1)):this.object.translate(this._deltaPosition,1),this.object.computeWorldMatrix(!0))},this.onCollideEvent=null,this.onCollide=o=>{if(!this._onPhysicsCollideCallbacks.length&&!this.onCollideEvent||!this._physicsEngine)return;const e=this._physicsEngine.getImpostorWithPhysicsBody(o.body);e&&(this.onCollideEvent&&this.onCollideEvent(this,e),this._onPhysicsCollideCallbacks.filter(h=>h.otherImpostors.indexOf(e)!==-1).forEach(h=>{h.callback(this,e,o.point,o.distance,o.impulse,o.normal)}))},!this.object){p.Error("No object was provided. A physics object is obligatory");return}this.object.parent&&s.mass!==0&&p.Warn("A physics impostor has been created for an object which has a parent. Babylon physics currently works in local space so unexpected issues may occur."),!this._scene&&t.getScene&&(this._scene=t.getScene()),this._scene&&(this.type>100&&(this.soft=!0),this._physicsEngine=this._scene.getPhysicsEngine(),this._physicsEngine?(this.object.rotationQuaternion||(this.object.rotation?this.object.rotationQuaternion=c.RotationYawPitchRoll(this.object.rotation.y,this.object.rotation.x,this.object.rotation.z):this.object.rotationQuaternion=new c),this._options.mass=s.mass===void 0?0:s.mass,this._options.friction=s.friction===void 0?.2:s.friction,this._options.restitution=s.restitution===void 0?.2:s.restitution,this.soft&&(this._options.mass=this._options.mass>0?this._options.mass:1,this._options.pressure=s.pressure===void 0?200:s.pressure,this._options.stiffness=s.stiffness===void 0?1:s.stiffness,this._options.velocityIterations=s.velocityIterations===void 0?20:s.velocityIterations,this._options.positionIterations=s.positionIterations===void 0?20:s.positionIterations,this._options.fixedPoints=s.fixedPoints===void 0?0:s.fixedPoints,this._options.margin=s.margin===void 0?0:s.margin,this._options.damping=s.damping===void 0?0:s.damping,this._options.path=s.path===void 0?null:s.path,this._options.shape=s.shape===void 0?null:s.shape),this._joints=[],!this.object.parent||this._options.ignoreParent?this._init():this.object.parent.physicsImpostor&&p.Warn("You must affect impostors to children before affecting impostor to parent.")):p.Error("Physics not enabled. Please use scene.enablePhysics(...) before creating impostors."))}_init(){this._physicsEngine&&(this._physicsEngine.removeImpostor(this),this.physicsBody=null,this._parent=this._parent||this._getPhysicsParent(),!this._isDisposed&&(!this.parent||this._options.ignoreParent)&&this._physicsEngine.addImpostor(this))}_getPhysicsParent(){return this.object.parent instanceof _?this.object.parent.physicsImpostor:null}isBodyInitRequired(){return this._bodyUpdateRequired||!this._physicsBody&&(!this._parent||!!this._options.ignoreParent)}setScalingUpdated(){this.forceUpdate()}forceUpdate(){this._init(),this.parent&&!this._options.ignoreParent&&this.parent.forceUpdate()}get physicsBody(){return this._parent&&!this._options.ignoreParent?this._parent.physicsBody:this._physicsBody}get parent(){return!this._options.ignoreParent&&this._parent?this._parent:null}set parent(t){this._parent=t}set physicsBody(t){this._physicsBody&&this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().removePhysicsBody(this),this._physicsBody=t,this.resetUpdateFlags()}resetUpdateFlags(){this._bodyUpdateRequired=!1}getObjectExtents(){if(this.object.getBoundingInfo){const t=this.object.rotationQuaternion,i=this.object.scaling.clone();this.object.rotationQuaternion=n.IDENTITY_QUATERNION;const s=this.object.computeWorldMatrix&&this.object.computeWorldMatrix(!0);s&&s.decompose(i,void 0,void 0);const o=this.object.getBoundingInfo().boundingBox.extendSize.scale(2).multiplyInPlace(i);return o.x=Math.abs(o.x),o.y=Math.abs(o.y),o.z=Math.abs(o.z),this.object.rotationQuaternion=t,this.object.computeWorldMatrix&&this.object.computeWorldMatrix(!0),o}else return n.DEFAULT_OBJECT_SIZE}getObjectCenter(){return this.object.getBoundingInfo?this.object.getBoundingInfo().boundingBox.centerWorld:this.object.position}getParam(t){return this._options[t]}setParam(t,i){this._options[t]=i,this._bodyUpdateRequired=!0}setMass(t){this.getParam("mass")!==t&&this.setParam("mass",t),this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setBodyMass(this,t)}getLinearVelocity(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getLinearVelocity(this):l.Zero()}setLinearVelocity(t){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setLinearVelocity(this,t)}getAngularVelocity(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getAngularVelocity(this):l.Zero()}setAngularVelocity(t){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setAngularVelocity(this,t)}executeNativeFunction(t){this._physicsEngine&&t(this._physicsEngine.getPhysicsPlugin().world,this.physicsBody)}registerBeforePhysicsStep(t){this._onBeforePhysicsStepCallbacks.push(t)}unregisterBeforePhysicsStep(t){const i=this._onBeforePhysicsStepCallbacks.indexOf(t);i>-1?this._onBeforePhysicsStepCallbacks.splice(i,1):p.Warn("Function to remove was not found")}registerAfterPhysicsStep(t){this._onAfterPhysicsStepCallbacks.push(t)}unregisterAfterPhysicsStep(t){const i=this._onAfterPhysicsStepCallbacks.indexOf(t);i>-1?this._onAfterPhysicsStepCallbacks.splice(i,1):p.Warn("Function to remove was not found")}registerOnPhysicsCollide(t,i){const s=t instanceof Array?t:[t];this._onPhysicsCollideCallbacks.push({callback:i,otherImpostors:s})}unregisterOnPhysicsCollide(t,i){const s=t instanceof Array?t:[t];let r=-1;this._onPhysicsCollideCallbacks.some((e,h)=>{if(e.callback===i&&e.otherImpostors.length===s.length){const a=e.otherImpostors.every(u=>s.indexOf(u)>-1);return a&&(r=h),a}return!1})?this._onPhysicsCollideCallbacks.splice(r,1):p.Warn("Function to remove was not found")}getParentsRotation(){let t=this.object.parent;for(this._tmpQuat.copyFromFloats(0,0,0,1);t;)t.rotationQuaternion?this._tmpQuat2.copyFrom(t.rotationQuaternion):c.RotationYawPitchRollToRef(t.rotation.y,t.rotation.x,t.rotation.z,this._tmpQuat2),this._tmpQuat.multiplyToRef(this._tmpQuat2,this._tmpQuat),t=t.parent;return this._tmpQuat}applyForce(t,i){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().applyForce(this,t,i),this}applyImpulse(t,i){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().applyImpulse(this,t,i),this}createJoint(t,i,s){const r=new m(i,s);return this.addJoint(t,r),this}addJoint(t,i){return this._joints.push({otherImpostor:t,joint:i}),this._physicsEngine&&this._physicsEngine.addJoint(this,t,i),this}addAnchor(t,i,s,r,o){if(!this._physicsEngine)return this;const e=this._physicsEngine.getPhysicsPlugin();return e.appendAnchor?(this._physicsEngine&&e.appendAnchor(this,t,i,s,r,o),this):this}addHook(t,i,s,r){if(!this._physicsEngine)return this;const o=this._physicsEngine.getPhysicsPlugin();return o.appendAnchor?(this._physicsEngine&&o.appendHook(this,t,i,s,r),this):this}sleep(){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().sleepBody(this),this}wakeUp(){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().wakeUpBody(this),this}clone(t){return t?new n(t,this.type,this._options,this._scene):null}dispose(){this._physicsEngine&&(this._joints.forEach(t=>{this._physicsEngine&&this._physicsEngine.removeJoint(this,t.otherImpostor,t.joint)}),this._physicsEngine.removeImpostor(this),this.parent&&this.parent.forceUpdate(),this._isDisposed=!0)}setDeltaPosition(t){this._deltaPosition.copyFrom(t)}setDeltaRotation(t){this._deltaRotation||(this._deltaRotation=new c),this._deltaRotation.copyFrom(t),this._deltaRotationConjugated=this._deltaRotation.conjugate()}getBoxSizeToRef(t){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().getBoxSizeToRef(this,t),this}getRadius(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getRadius(this):0}syncBoneWithImpostor(t,i,s,r,o){const e=n._TmpVecs[0],h=this.object;if(h.rotationQuaternion)if(o){const a=n._TmpQuat;h.rotationQuaternion.multiplyToRef(o,a),t.setRotationQuaternion(a,y.WORLD,i)}else t.setRotationQuaternion(h.rotationQuaternion,y.WORLD,i);e.x=0,e.y=0,e.z=0,s&&(e.x=s.x,e.y=s.y,e.z=s.z,t.getDirectionToRef(e,i,e),r==null&&(r=s.length()),e.x*=r,e.y*=r,e.z*=r),t.getParent()?(e.addInPlace(h.getAbsolutePosition()),t.setAbsolutePosition(e,i)):(i.setAbsolutePosition(h.getAbsolutePosition()),i.position.x-=e.x,i.position.y-=e.y,i.position.z-=e.z)}syncImpostorWithBone(t,i,s,r,o,e){const h=this.object;if(h.rotationQuaternion)if(o){const g=n._TmpQuat;t.getRotationQuaternionToRef(y.WORLD,i,g),g.multiplyToRef(o,h.rotationQuaternion)}else t.getRotationQuaternionToRef(y.WORLD,i,h.rotationQuaternion);const a=n._TmpVecs[0],u=n._TmpVecs[1];e||(e=n._TmpVecs[2],e.x=0,e.y=1,e.z=0),t.getDirectionToRef(e,i,u),t.getAbsolutePositionToRef(i,a),r==null&&s&&(r=s.length()),r!=null&&(a.x+=u.x*r,a.y+=u.y*r,a.z+=u.z*r),h.setAbsolutePosition(a)}}n.DEFAULT_OBJECT_SIZE=new l(1,1,1);n.IDENTITY_QUATERNION=c.Identity();n._TmpVecs=P.BuildArray(3,l.Zero);n._TmpQuat=c.Identity();n.NoImpostor=0;n.SphereImpostor=1;n.BoxImpostor=2;n.PlaneImpostor=3;n.MeshImpostor=4;n.CapsuleImpostor=6;n.CylinderImpostor=7;n.ParticleImpostor=8;n.HeightmapImpostor=9;n.ConvexHullImpostor=10;n.CustomImpostor=100;n.RopeImpostor=101;n.ClothImpostor=102;n.SoftbodyImpostor=103;export{n as P};
