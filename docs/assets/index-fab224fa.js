import{A as x,S as L,V as d,C as O,P as T,M as B,O as p}from"./runBabylonPlaygroundScene-32a4afbd.js";import{A as y,E as W}from"./actionManager-ebe9c8f8.js";import{H as K}from"./linesBuilder-a2dae4c1.js";import{D as X}from"./directionalLight-d037032f.js";import{S as V}from"./shadowGeneratorSceneComponent-1c2fa54e.js";import{F as H}from"./followCamera-c80fc60d.js";import{S as R}from"./sceneLoader-f06775c7.js";import"./ExtrasAsMetadata-129db08e.js";import"./sceneHelpers-bf4caa22.js";import"./blurPostProcess-f61d1d3e.js";import"./workerPool-f37bc04e.js";import"./pbrMaterial-34e2fd30.js";import"./animationGroup-a96e107c.js";import"./dynamicTexture-7393bdcd.js";import"./utilityLayerRenderer-fefda23f.js";const j="/assets/apc-6635a715.glb";function z(s){const l={forward:!1,left:!1,right:!1},t={forward:new p,left:new p,right:new p,all:new p},g={w:"forward",a:"left",d:"right"};return s.actionManager=new y(s),s.actionManager.registerAction(new W(y.OnKeyDownTrigger,function(c){const m=c.sourceEvent,n=g[m.key.toLowerCase()];n&&!l[n]&&(l[n]=!0,t[n].notifyObservers(!0),t.all.notifyObservers(l))})),s.actionManager.registerAction(new W(y.OnKeyUpTrigger,function(c){const m=c.sourceEvent,n=g[m.key.toLowerCase()];n&&l[n]&&(l[n]=!1,t[n].notifyObservers(!1),t.all.notifyObservers(l))})),{...t,destroy:()=>{}}}function oe(s,l){s.enableOfflineSupport=!1,x.AllowMatricesInterpolation=!0;var t=new L(s);const g=z(t);var c=new K("light1",new d(0,1,0),t);c.intensity=.6,c.specular=O.Black();var m=new X("dir01",new d(3,-3,1),t);m.position=new d(0,5,5);var n=new V(1024,m);n.useBlurExponentialShadowMap=!0,n.blurKernel=32;const u=new H("camera1",new d,t);u.radius=5,u.heightOffset=1.5;const a=new d;g.all.add(i=>{a.set(0,0,0),i.forward&&a.addInPlaceFromFloats(0,0,1),i.left&&a.addInPlaceFromFloats(-1,0,0),i.right&&a.addInPlaceFromFloats(1,0,0)}),t.onPointerObservable.add(i=>{switch(i.type){case T.POINTERTAP:console.log(i),i.event.clientX<l.clientWidth*.2?a.set(1,0,0):i.event.clientX<l.clientWidth*.4?a.set(1,0,1):i.event.clientX<l.clientWidth*.6?a.set(0,0,1):i.event.clientX<l.clientWidth*.8?a.set(-1,0,1):a.set(-1,0,0)}});const k=t.createDefaultEnvironment({enableGroundShadow:!0});return k.setMainColor(O.Teal()),k.ground.position.y+=.01,R.ImportMesh("",j,"",t,(i,M,S,f,C,E,I)=>{n.addShadowCaster(i[0],!0);const b=f.find(e=>e.name==="Idle"),A=f.find(e=>e.name==="Walking"),h=f.find(e=>e.name==="Left"),w=f.find(e=>e.name==="Right");[b,A,h,w].forEach(e=>{e.setWeightForAllAnimatables(0),e.start(!0)}),[h,w].forEach(e=>{e.syncAllAnimationsWith(A.animatables[0])});const o={idleAnimation:1,walkingAnimation:0,leftAnimation:0,rightAnimation:0},r={idleAnimation:1,walkingAnimation:0,leftAnimation:0,rightAnimation:0},P=["idleAnimation","walkingAnimation","leftAnimation","rightAnimation"];t.onBeforeAnimationsObservable.add(()=>{o.walkingAnimation=a.z>.1?1:1e-6,o.leftAnimation=a.x<-.1?1:0,o.rightAnimation=a.x>.1?1:0,o.idleAnimation=o.walkingAnimation==1e-6&&o.leftAnimation==0&&o.rightAnimation==0?1:0;for(const e of P)r[e]<o[e]?(r[e]+=.1,r[e]>o[e]&&(r[e]=o[e])):r[e]>o[e]&&(r[e]-=.1,r[e]<o[e]&&(r[e]=o[e]));b.setWeightForAllAnimatables(r.idleAnimation),A.setWeightForAllAnimatables(r.walkingAnimation),h.setWeightForAllAnimatables(r.leftAnimation),w.setWeightForAllAnimatables(r.rightAnimation)});const F=new B("dummy",t,i[0]);F.position.addInPlaceFromFloats(0,1,0),u.lockedTarget=F;const v={idleAnimation:b,walkingAnimation:A,leftAnimation:h,rightAnimation:w,meshes:i,particleSystems:M,skeletons:S,animationGroups:f,transformNodes:C,geometries:E,lights:I};console.debug("hax",v),Object.assign(window,{hax:v})},function(){}),t}export{oe as createScene};
