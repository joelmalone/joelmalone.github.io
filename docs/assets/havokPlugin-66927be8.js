import{Q as D,v as g,x as R,V as u,h as S,L as E,a4 as Z,g as O,y as j,O as V,M as $,aa as q}from"./runBabylonPlaygroundScene-32a4afbd.js";class b{constructor(t,i,s,e){if(this._pluginData=void 0,this._pluginDataInstances=[],this._collisionCBEnabled=!1,this.disablePreStep=!0,!e)return;const n=e.getPhysicsEngine();if(!n)throw new Error("No Physics Engine available.");if(this._physicsEngine=n,n.getPluginVersion()!=2)throw new Error("Plugin version is incorrect. Expected version 2.");const a=n.getPhysicsPlugin();if(!a)throw new Error("No Physics Plugin available.");this._physicsPlugin=a,t.rotationQuaternion||(t.rotationQuaternion=D.FromEulerAngles(t.rotation.x,t.rotation.y,t.rotation.z)),this.startAsleep=s;const o=t;o.hasThinInstances?this._physicsPlugin.initBodyInstances(this,i,o):(t.parent&&t.computeWorldMatrix(!0),this._physicsPlugin.initBody(this,i,t.absolutePosition,t.absoluteRotationQuaternion)),this.transformNode=t,t.physicsBody=this,n.addBody(this),this._nodeDisposeObserver=t.onDisposeObservable.add(()=>{this.dispose()})}getClassName(){return"PhysicsBody"}clone(t){const i=new b(t,this.getMotionType(),this.startAsleep,this.transformNode.getScene());return i.shape=this.shape,i}updateBodyInstances(){const t=this.transformNode;t.hasThinInstances&&this._physicsPlugin.updateBodyInstances(this,t)}get numInstances(){return this._pluginDataInstances.length}set shape(t){this._physicsPlugin.setShape(this,t)}get shape(){return this._physicsPlugin.getShape(this)}setEventMask(t,i){this._physicsPlugin.setEventMask(this,t,i)}getEventMask(t){return this._physicsPlugin.getEventMask(this,t)}setMotionType(t,i){this._physicsPlugin.setMotionType(this,t,i)}getMotionType(t){return this._physicsPlugin.getMotionType(this,t)}computeMassProperties(t){return this._physicsPlugin.computeMassProperties(this,t)}setMassProperties(t,i){this._physicsPlugin.setMassProperties(this,t,i)}getMassProperties(t){return this._physicsPlugin.getMassProperties(this,t)}setLinearDamping(t,i){this._physicsPlugin.setLinearDamping(this,t,i)}getLinearDamping(t){return this._physicsPlugin.getLinearDamping(this,t)}setAngularDamping(t,i){this._physicsPlugin.setAngularDamping(this,t,i)}getAngularDamping(t){return this._physicsPlugin.getAngularDamping(this,t)}setLinearVelocity(t,i){this._physicsPlugin.setLinearVelocity(this,t,i)}getLinearVelocityToRef(t,i){return this._physicsPlugin.getLinearVelocityToRef(this,t,i)}setAngularVelocity(t,i){this._physicsPlugin.setAngularVelocity(this,t,i)}getAngularVelocityToRef(t,i){return this._physicsPlugin.getAngularVelocityToRef(this,t,i)}applyImpulse(t,i,s){this._physicsPlugin.applyImpulse(this,t,i,s)}applyForce(t,i,s){this._physicsPlugin.applyForce(this,t,i,s)}getGeometry(){return this._physicsPlugin.getBodyGeometry(this)}getCollisionObservable(){return this._physicsPlugin.getCollisionObservable(this)}setCollisionCallbackEnabled(t){this._collisionCBEnabled=t,this._physicsPlugin.setCollisionCallbackEnabled(this,t)}getObjectCenterWorld(t){const i=new u;return this.getObjectCenterWorldToRef(i,t)}getObjectCenterWorldToRef(t,i){var s;if(((s=this._pluginDataInstances)===null||s===void 0?void 0:s.length)>0){const e=i||0,n=this.transformNode._thinInstanceDataStorage.matrixData;n&&t.set(n[e*16+12],n[e*16+13],n[e*16+14])}else t.copyFrom(this.transformNode.position);return t}addConstraint(t,i,s,e){this._physicsPlugin.addConstraint(this,t,i,s,e)}syncWithBone(t,i,s,e,n,a){const o=this.transformNode;if(o.rotationQuaternion)if(n){const _=g.Quaternion[0];t.getRotationQuaternionToRef(R.WORLD,i,_),_.multiplyToRef(n,o.rotationQuaternion)}else t.getRotationQuaternionToRef(R.WORLD,i,o.rotationQuaternion);const h=g.Vector3[0],l=g.Vector3[1];a||(a=g.Vector3[2],a.x=0,a.y=1,a.z=0),t.getDirectionToRef(a,i,l),t.getAbsolutePositionToRef(i,h),e==null&&s&&(e=s.length()),e!=null&&(h.x+=l.x*e,h.y+=l.y*e,h.z+=l.z*e),o.setAbsolutePosition(h)}iterateOverAllInstances(t){var i;if(((i=this._pluginDataInstances)===null||i===void 0?void 0:i.length)>0)for(let s=0;s<this._pluginDataInstances.length;s++)t(this,s);else t(this,void 0)}setGravityFactor(t,i){this._physicsPlugin.setGravityFactor(this,t,i)}getGravityFactor(t){return this._physicsPlugin.getGravityFactor(this,t)}dispose(){this._collisionCBEnabled&&this.setCollisionCallbackEnabled(!1),this._nodeDisposeObserver&&(this.transformNode.onDisposeObservable.remove(this._nodeDisposeObserver),this._nodeDisposeObserver=null),this._physicsEngine.removeBody(this),this._physicsPlugin.removeBody(this),this._physicsPlugin.disposeBody(this),this._pluginData=null,this._pluginDataInstances.length=0}}var y;(function(r){r[r.FREE=0]="FREE",r[r.LIMITED=1]="LIMITED",r[r.LOCKED=2]="LOCKED"})(y||(y={}));var C;(function(r){r[r.LINEAR_X=0]="LINEAR_X",r[r.LINEAR_Y=1]="LINEAR_Y",r[r.LINEAR_Z=2]="LINEAR_Z",r[r.ANGULAR_X=3]="ANGULAR_X",r[r.ANGULAR_Y=4]="ANGULAR_Y",r[r.ANGULAR_Z=5]="ANGULAR_Z",r[r.LINEAR_DISTANCE=6]="LINEAR_DISTANCE"})(C||(C={}));var m;(function(r){r[r.BALL_AND_SOCKET=1]="BALL_AND_SOCKET",r[r.DISTANCE=2]="DISTANCE",r[r.HINGE=3]="HINGE",r[r.SLIDER=4]="SLIDER",r[r.LOCK=5]="LOCK",r[r.PRISMATIC=6]="PRISMATIC",r[r.SIX_DOF=7]="SIX_DOF"})(m||(m={}));var d;(function(r){r[r.SPHERE=0]="SPHERE",r[r.CAPSULE=1]="CAPSULE",r[r.CYLINDER=2]="CYLINDER",r[r.BOX=3]="BOX",r[r.CONVEX_HULL=4]="CONVEX_HULL",r[r.CONTAINER=5]="CONTAINER",r[r.MESH=6]="MESH",r[r.HEIGHTFIELD=7]="HEIGHTFIELD"})(d||(d={}));var x;(function(r){r[r.NONE=0]="NONE",r[r.VELOCITY=1]="VELOCITY",r[r.POSITION=2]="POSITION"})(x||(x={}));var I;(function(r){r[r.STATIC=0]="STATIC",r[r.ANIMATED=1]="ANIMATED",r[r.DYNAMIC=2]="DYNAMIC"})(I||(I={}));class M{constructor(t,i){var s;if(this._pluginData=void 0,!i)return;const e=i.getPhysicsEngine();if(!e)throw new Error("No Physics Engine available.");if(e.getPluginVersion()!=2)throw new Error("Plugin version is incorrect. Expected version 2.");const n=e.getPhysicsPlugin();if(!n)throw new Error("No Physics Plugin available.");if(this._physicsPlugin=n,t.pluginData!==void 0&&t.pluginData!==null)this._pluginData=t.pluginData,this._type=this._physicsPlugin.getShapeType(this);else if(t.type!==void 0&&t.type!==null){this._type=t.type;const a=(s=t.parameters)!==null&&s!==void 0?s:{};this._physicsPlugin.initShape(this,t.type,a)}}getClassName(){return"PhysicsShape"}get type(){return this._type}set filterMembershipMask(t){this._physicsPlugin.setShapeFilterMembershipMask(this,t)}get filterMembershipMask(){return this._physicsPlugin.getShapeFilterMembershipMask(this)}set filterCollideMask(t){this._physicsPlugin.setShapeFilterCollideMask(this,t)}get filterCollideMask(){return this._physicsPlugin.getShapeFilterCollideMask(this)}set material(t){this._physicsPlugin.setMaterial(this,t),this._material=t}get material(){return this._material}set density(t){this._physicsPlugin.setDensity(this,t)}get density(){return this._physicsPlugin.getDensity(this)}addChildFromParent(t,i,s){const e=s.computeWorldMatrix(!0),n=t.computeWorldMatrix(!0),a=g.Matrix[0];e.multiplyToRef(S.Invert(n),a);const o=g.Vector3[0],h=g.Quaternion[0],l=g.Vector3[1];a.decompose(l,h,o),this._physicsPlugin.addChild(this,i,o,h,l)}addChild(t,i,s,e){this._physicsPlugin.addChild(this,t,i,s,e)}removeChild(t){this._physicsPlugin.removeChild(this,t)}getNumChildren(){return this._physicsPlugin.getNumChildren(this)}getBoundingBox(){return this._physicsPlugin.getBoundingBox(this)}dispose(){this._physicsPlugin.disposeShape(this)}}class U extends M{constructor(t,i,s){super({type:d.SPHERE,parameters:{center:t,radius:i}},s)}static FromMesh(t){const i=t.getBoundingInfo(),s=i.boundingSphere.center,e=i.boundingBox.extendSize,n=Math.max(e.x,e.y,e.z);return new U(s,n,t.getScene())}}class W extends M{constructor(t,i,s,e){super({type:d.CAPSULE,parameters:{pointA:t,pointB:i,radius:s}},e)}static FromMesh(t){const i=t.getBoundingInfo(),s=i.boundingBox.extendSize.x,e=new u(0,i.boundingBox.extendSize.y-s,0),n=i.boundingBox.center.add(e),a=i.boundingBox.center.subtract(e);return new W(n,a,s,t.getScene())}}class K extends M{constructor(t,i,s,e){super({type:d.CYLINDER,parameters:{pointA:t,pointB:i,radius:s}},e)}static FromMesh(t){const i=t.getBoundingInfo(),s=i.boundingBox.extendSize.x,e=new u(0,i.boundingBox.extendSize.y,0),n=i.boundingBox.center.add(e),a=i.boundingBox.center.subtract(e);return new K(n,a,s,t.getScene())}}class Y extends M{constructor(t,i,s,e){super({type:d.BOX,parameters:{center:t,rotation:i,extents:s}},e)}static FromMesh(t){const i=t.getBoundingInfo(),s=i.boundingBox.center,e=i.boundingBox.extendSize.scale(2);return new Y(s,D.Identity(),e,t.getScene())}}class it extends M{constructor(t,i){super({type:d.CONVEX_HULL,parameters:{mesh:t}},i)}}class st extends M{constructor(t,i){super({type:d.MESH,parameters:{mesh:t}},i)}}class et extends M{constructor(t){super({type:d.CONTAINER,parameters:{}},t)}}var k;(function(r){r[r.GEOMETRIC_MEAN=0]="GEOMETRIC_MEAN",r[r.MINIMUM=1]="MINIMUM",r[r.MAXIMUM=2]="MAXIMUM",r[r.ARITHMETIC_MEAN=3]="ARITHMETIC_MEAN",r[r.MULTIPLY=4]="MULTIPLY"})(k||(k={}));class nt{constructor(t,i,s={mass:0},e){var n;if(this.transformNode=t,this.type=i,this._options=s,this._scene=e,this._disposeShapeWhenDisposed=!0,!this.transformNode){E.Error("No object was provided. A physics object is obligatory");return}const a=t;if(this.transformNode.parent&&this._options.mass!==0&&a.hasThinInstances&&E.Warn("A physics body has been created for an object which has a parent and thin instances. Babylon physics currently works in local space so unexpected issues may occur."),!this._scene&&t.getScene&&(this._scene=t.getScene()),!this._scene)return;this._options.mass=s.mass===void 0?0:s.mass,this._options.friction=s.friction===void 0?.2:s.friction,this._options.restitution=s.restitution===void 0?.2:s.restitution;const o=this._options.mass===0?I.STATIC:I.DYNAMIC,h=(n=this._options.startAsleep)!==null&&n!==void 0?n:!1;this.body=new b(t,o,h,this._scene),this._addSizeOptions(),i.getClassName&&i.getClassName()==="PhysicsShape"?(this.shape=i,this._disposeShapeWhenDisposed=!1):this.shape=new M({type:i,parameters:this._options},this._scene),this.material={friction:this._options.friction,restitution:this._options.restitution},this.body.shape=this.shape,this.shape.material=this.material,this.body.setMassProperties({mass:this._options.mass}),this._nodeDisposeObserver=this.transformNode.onDisposeObservable.add(()=>{this.dispose()})}_getObjectBoundingBox(){return this.transformNode.getRawBoundingInfo?this.transformNode.getRawBoundingInfo().boundingBox:new Z(new u(-.5,-.5,-.5),new u(.5,.5,.5))}_hasVertices(t){return(t==null?void 0:t.getTotalVertices())>0}_addSizeOptions(){var t,i,s,e,n,a,o,h;this.transformNode.computeWorldMatrix(!0);const l=this._getObjectBoundingBox(),_=g.Vector3[0];_.copyFrom(l.extendSize),_.scaleInPlace(2),_.multiplyInPlace(this.transformNode.scaling);const c=g.Vector3[1];if(c.copyFrom(l.minimum),c.multiplyInPlace(this.transformNode.scaling),!this._options.center){const p=new u;p.copyFrom(l.center),p.multiplyInPlace(this.transformNode.scaling),this._options.center=p}switch(this.type){case d.SPHERE:!this._options.radius&&O.WithinEpsilon(_.x,_.y,1e-4)&&O.WithinEpsilon(_.x,_.z,1e-4)?this._options.radius=_.x/2:this._options.radius||(E.Warn("Non uniform scaling is unsupported for sphere shapes. Setting the radius to the biggest bounding box extent."),this._options.radius=Math.max(_.x,_.y,_.z)/2);break;case d.CAPSULE:{const p=_.x/2;this._options.radius=(t=this._options.radius)!==null&&t!==void 0?t:p,this._options.pointA=(i=this._options.pointA)!==null&&i!==void 0?i:new u(0,c.y+p,0),this._options.pointB=(s=this._options.pointB)!==null&&s!==void 0?s:new u(0,c.y+_.y-p,0)}break;case d.CYLINDER:{const p=_.x/2;this._options.radius=(e=this._options.radius)!==null&&e!==void 0?e:p,this._options.pointA=(n=this._options.pointA)!==null&&n!==void 0?n:new u(0,c.y,0),this._options.pointB=(a=this._options.pointB)!==null&&a!==void 0?a:new u(0,c.y+_.y,0)}break;case d.MESH:case d.CONVEX_HULL:if(!this._options.mesh&&this._hasVertices(this.transformNode))this._options.mesh=this.transformNode;else if(!this._options.mesh||!this._hasVertices(this._options.mesh))throw new Error("No valid mesh was provided for mesh or convex hull shape parameter. Please provide a mesh with valid geometry (number of vertices greater than 0).");break;case d.BOX:this._options.extents=(o=this._options.extents)!==null&&o!==void 0?o:new u(_.x,_.y,_.z),this._options.rotation=(h=this._options.rotation)!==null&&h!==void 0?h:D.Identity();break}}dispose(){this._nodeDisposeObserver&&(this.body.transformNode.onDisposeObservable.remove(this._nodeDisposeObserver),this._nodeDisposeObserver=null),this.body.dispose(),this._disposeShapeWhenDisposed&&this.shape.dispose()}}class J{constructor(t,i,s){this._vertices=[],this._indices=[],this._isRightHanded=s.useRightHandedSystem,this._collectIndices=i}addMesh(t,i){const s=this._vertices.length;t.computeWorldMatrix(!0);const e=g.Matrix[0];S.ScalingToRef(t.absoluteScaling.x,t.absoluteScaling.y,t.absoluteScaling.z,e);const n=t.getVerticesData(q.PositionKind)||[],a=n.length/3;for(let o=0;o<a;o++){const h=new u(n[o*3+0],n[o*3+1],n[o*3+2]);this._vertices.push(u.TransformCoordinates(h,e))}if(this._collectIndices){const o=t.getIndices();if(o)for(let h=0;h<o.length;h+=3)this._isRightHanded?(this._indices.push(o[h+0]+s),this._indices.push(o[h+1]+s),this._indices.push(o[h+2]+s)):(this._indices.push(o[h+2]+s),this._indices.push(o[h+1]+s),this._indices.push(o[h+0]+s))}i&&t.getChildMeshes(!1).filter(h=>!h.physicsBody).forEach(h=>this.addMesh(h,i))}getVertices(t){const i=this._vertices.length*3,e=i*4,n=t._malloc(e),a=new Float32Array(t.HEAPU8.buffer,n,i);for(let o=0;o<this._vertices.length;o++)a[o*3+0]=this._vertices[o].x,a[o*3+1]=this._vertices[o].y,a[o*3+2]=this._vertices[o].z;return a}freeBuffer(t,i){t._free(i.byteOffset)}getTriangles(t){const s=this._indices.length*4,e=t._malloc(s),n=new Int32Array(t.HEAPU8.buffer,e,this._indices.length);for(let a=0;a<this._indices.length;a++)n[a]=this._indices[a];return n}}class w{constructor(t){this.hpBodyId=t,this.userMassProps={centerOfMass:void 0,mass:void 0,inertia:void 0,inertiaOrientation:void 0}}}class F{constructor(){this.bodyId=BigInt(0),this.position=new u,this.normal=new u}}class G{constructor(){this.contactOnA=new F,this.contactOnB=new F,this.impulseApplied=0}static readToRef(t,i,s){const e=new Int32Array(t,i),n=new Float32Array(t,i),a=2;s.contactOnA.bodyId=BigInt(e[a]),s.contactOnA.position.set(n[a+8],n[a+9],n[a+10]),s.contactOnA.normal.set(n[a+11],n[a+12],n[a+13]);const o=18;s.contactOnB.bodyId=BigInt(e[o]),s.contactOnB.position.set(n[o+8],n[o+9],n[o+10]),s.contactOnB.normal.set(n[o+11],n[o+12],n[o+13]),s.impulseApplied=n[o+13+3]}}class ot{constructor(t=!0,i=HK){if(this._useDeltaForWorldStep=t,this._hknp={},this.name="HavokPlugin",this._fixedTimeStep=1/60,this._timeStep=1/60,this._tmpVec3=j.BuildArray(3,u.Zero),this._bodies=new Map,this._bodyCollisionObservable=new Map,this.onCollisionObservable=new V,typeof i=="function"){E.Error("Havok is not ready. Please make sure you await HK() before using the plugin.");return}else this._hknp=i;if(!this.isSupported()){E.Error("Havok is not available. Please make sure you included the js file.");return}this.world=this._hknp.HP_World_Create()[1],this._queryCollector=this._hknp.HP_QueryCollector_Create(1)[1]}isSupported(){return this._hknp!==void 0}setGravity(t){this._hknp.HP_World_SetGravity(this.world,this._bVecToV3(t))}setTimeStep(t){this._fixedTimeStep=t}getTimeStep(){return this._fixedTimeStep}executeStep(t,i){for(const s of i)s.disablePreStep||this.setPhysicsBodyTransformation(s,s.transformNode);this._hknp.HP_World_Step(this.world,this._useDeltaForWorldStep?t:this._timeStep),this._bodyBuffer=this._hknp.HP_World_GetBodyBuffer(this.world)[1];for(const s of i)this.sync(s);this._notifyCollisions()}getPluginVersion(){return 2}initBody(t,i,s,e){t._pluginData=new w(this._hknp.HP_Body_Create()[1]),this._internalSetMotionType(t._pluginData,i);const n=[this._bVecToV3(s),this._bQuatToV4(e)];this._hknp.HP_Body_SetQTransform(t._pluginData.hpBodyId,n),this._hknp.HP_World_AddBody(this.world,t._pluginData.hpBodyId,t.startAsleep),this._bodies.set(t._pluginData.hpBodyId[0],{body:t,index:0})}removeBody(t){if(t._pluginDataInstances&&t._pluginDataInstances.length>0)for(const i of t._pluginDataInstances)this._bodyCollisionObservable.delete(i.hpBodyId[0]),this._hknp.HP_World_RemoveBody(this.world,i.hpBodyId);t._pluginData&&(this._bodyCollisionObservable.delete(t._pluginData.hpBodyId[0]),this._hknp.HP_World_RemoveBody(this.world,t._pluginData.hpBodyId))}initBodyInstances(t,i,s){var e,n;const a=(n=(e=s._thinInstanceDataStorage)===null||e===void 0?void 0:e.instancesCount)!==null&&n!==void 0?n:0,o=s._thinInstanceDataStorage.matrixData;o&&(this._createOrUpdateBodyInstances(t,i,o,0,a,!1),t._pluginDataInstances.forEach((h,l)=>{this._bodies.set(h.hpBodyId[0],{body:t,index:l})}))}_createOrUpdateBodyInstances(t,i,s,e,n,a){const o=g.Quaternion[0],h=S.Identity();for(let l=e;l<n;l++){const _=[s[l*16+12],s[l*16+13],s[l*16+14]];let c;a?c=t._pluginDataInstances[l].hpBodyId:c=this._hknp.HP_Body_Create()[1],h.setRowFromFloats(0,s[l*16+0],s[l*16+1],s[l*16+2],0),h.setRowFromFloats(1,s[l*16+4],s[l*16+5],s[l*16+6],0),h.setRowFromFloats(2,s[l*16+8],s[l*16+9],s[l*16+10],0),D.FromRotationMatrixToRef(h,o);const p=[_,[o.x,o.y,o.z,o.w]];if(this._hknp.HP_Body_SetQTransform(c,p),!a){const f=new w(c);t._pluginDataInstances.length&&(f.userMassProps=t._pluginDataInstances[0].userMassProps),this._internalSetMotionType(f,i),this._internalUpdateMassProperties(f),t._pluginDataInstances.push(f),this._hknp.HP_World_AddBody(this.world,c,t.startAsleep),f.worldTransformOffset=this._hknp.HP_Body_GetWorldTransformOffset(c)[1]}}}updateBodyInstances(t,i){var s,e;const n=(e=(s=i._thinInstanceDataStorage)===null||s===void 0?void 0:s.instancesCount)!==null&&e!==void 0?e:0,a=i._thinInstanceDataStorage.matrixData;if(!a)return;const o=t._pluginDataInstances.length,h=this.getMotionType(t);if(n>o){this._createOrUpdateBodyInstances(t,h,a,o,n,!1);const l=this._hknp.HP_Body_GetShape(t._pluginDataInstances[0].hpBodyId)[1];for(let _=o;_<n;_++)this._hknp.HP_Body_SetShape(t._pluginDataInstances[_].hpBodyId,l),this._internalUpdateMassProperties(t._pluginDataInstances[_]),this._bodies.set(t._pluginDataInstances[_].hpBodyId[0],{body:t,index:_})}else if(n<o){const l=o-n;for(let _=0;_<l;_++){const c=t._pluginDataInstances.pop();this._bodies.delete(c.hpBodyId[0]),this._hknp.HP_World_RemoveBody(this.world,c.hpBodyId),this._hknp.HP_Body_Release(c.hpBodyId)}this._createOrUpdateBodyInstances(t,h,a,0,n,!0)}}sync(t){this.syncTransform(t,t.transformNode)}syncTransform(t,i){var s;if(t._pluginDataInstances.length){const e=i,n=e._thinInstanceDataStorage.matrixData;if(!n)return;const a=t._pluginDataInstances.length;for(let o=0;o<a;o++){const h=t._pluginDataInstances[o].worldTransformOffset,l=new Float32Array(this._hknp.HEAPU8.buffer,this._bodyBuffer+h,16),_=o*16;for(let c=0;c<15;c++)(c&3)!=3&&(n[_+c]=l[c]);n[_+15]=1}e.thinInstanceBufferUpdated("matrix")}else try{const e=this._hknp.HP_Body_GetQTransform(t._pluginData.hpBodyId)[1],n=e[0],a=e[1],o=g.Quaternion[0];o.set(a[0],a[1],a[2],a[3]);const h=i.parent;if(h&&!h.getWorldMatrix().isIdentity()){h.computeWorldMatrix(!0),o.normalize();const l=g.Matrix[0],_=g.Vector3[0];_.copyFromFloats(n[0],n[1],n[2]),S.ComposeToRef(i.absoluteScaling,o,_,l);const c=g.Matrix[1];h.getWorldMatrix().invertToRef(c);const p=g.Matrix[2];l.multiplyToRef(c,p),p.decomposeToTransformNode(i),(s=i.rotationQuaternion)===null||s===void 0||s.normalize()}else i.position.set(n[0],n[1],n[2]),i.rotationQuaternion?i.rotationQuaternion.copyFrom(o):o.toEulerAnglesToRef(i.rotation)}catch(e){console.log(`Syncing transform failed for node ${i.name}: ${e.message}...`)}}setShape(t,i){var s,e,n;const a=i&&i._pluginData?i._pluginData:BigInt(0);if(!(t.transformNode instanceof $)||!(!((s=t.transformNode._thinInstanceDataStorage)===null||s===void 0)&&s.matrixData)){this._hknp.HP_Body_SetShape(t._pluginData.hpBodyId,a),this._internalUpdateMassProperties(t._pluginData);return}const h=(n=(e=t.transformNode._thinInstanceDataStorage)===null||e===void 0?void 0:e.instancesCount)!==null&&n!==void 0?n:0;for(let l=0;l<h;l++)this._hknp.HP_Body_SetShape(t._pluginDataInstances[l].hpBodyId,a),this._internalUpdateMassProperties(t._pluginDataInstances[l])}_getPluginReference(t,i){var s;return!((s=t._pluginDataInstances)===null||s===void 0)&&s.length?t._pluginDataInstances[i??0]:t._pluginData}getShape(t){const i=this._getPluginReference(t),s=this._hknp.HP_Body_GetShape(i.hpBodyId)[1];if(s!=0){const e=t.transformNode.getScene();return new M({pluginData:s},e)}return null}getShapeType(t){return t.type?t.type:this._hknp.HP_Shape_GetType(t._pluginData)}setEventMask(t,i,s){this._applyToBodyOrInstances(t,e=>{this._hknp.HP_Body_SetEventMask(e.hpBodyId,i)},s)}getEventMask(t,i){const s=this._getPluginReference(t,i);return this._hknp.HP_Body_GetEventMask(s.hpBodyId)[1]}_fromMassPropertiesTuple(t){return{centerOfMass:u.FromArray(t[0]),mass:t[1],inertia:u.FromArray(t[2]),inertiaOrientation:D.FromArray(t[3])}}_internalUpdateMassProperties(t){const i=this._internalComputeMassProperties(t),s=t.userMassProps;s.centerOfMass&&(i[0]=s.centerOfMass.asArray()),s.mass!=null&&(i[1]=s.mass),s.inertia&&(i[2]=s.inertia.asArray()),s.inertiaOrientation&&(i[3]=s.inertiaOrientation.asArray()),this._hknp.HP_Body_SetMassProperties(t.hpBodyId,i)}_internalSetMotionType(t,i){switch(i){case I.STATIC:this._hknp.HP_Body_SetMotionType(t.hpBodyId,this._hknp.MotionType.STATIC);break;case I.ANIMATED:this._hknp.HP_Body_SetMotionType(t.hpBodyId,this._hknp.MotionType.KINEMATIC);break;case I.DYNAMIC:this._hknp.HP_Body_SetMotionType(t.hpBodyId,this._hknp.MotionType.DYNAMIC);break}}setMotionType(t,i,s){this._applyToBodyOrInstances(t,e=>{this._internalSetMotionType(e,i)},s)}getMotionType(t,i){const s=this._getPluginReference(t,i),e=this._hknp.HP_Body_GetMotionType(s.hpBodyId)[1];switch(e){case this._hknp.MotionType.STATIC:return I.STATIC;case this._hknp.MotionType.KINEMATIC:return I.ANIMATED;case this._hknp.MotionType.DYNAMIC:return I.DYNAMIC}throw new Error("Unknown motion type: "+e)}_internalComputeMassProperties(t){const i=this._hknp.HP_Body_GetShape(t.hpBodyId);if(i[0]==this._hknp.Result.RESULT_OK){const s=this._hknp.HP_Shape_BuildMassProperties(i[1]);if(s[0]==this._hknp.Result.RESULT_OK)return s[1]}return[[0,0,0],1,[1,1,1],[0,0,0,1]]}computeMassProperties(t,i){const s=this._getPluginReference(t,i),e=this._internalComputeMassProperties(s);return this._fromMassPropertiesTuple(e)}setMassProperties(t,i,s){this._applyToBodyOrInstances(t,e=>{e.userMassProps=i,this._internalUpdateMassProperties(e)},s)}getMassProperties(t,i){const s=this._getPluginReference(t,i),e=this._hknp.HP_Body_GetMassProperties(s.hpBodyId)[1];return this._fromMassPropertiesTuple(e)}setLinearDamping(t,i,s){this._applyToBodyOrInstances(t,e=>{this._hknp.HP_Body_SetLinearDamping(e.hpBodyId,i)},s)}getLinearDamping(t,i){const s=this._getPluginReference(t,i);return this._hknp.HP_Body_GetLinearDamping(s.hpBodyId)[1]}setAngularDamping(t,i,s){this._applyToBodyOrInstances(t,e=>{this._hknp.HP_Body_SetAngularDamping(e.hpBodyId,i)},s)}getAngularDamping(t,i){const s=this._getPluginReference(t,i);return this._hknp.HP_Body_GetAngularDamping(s.hpBodyId)[1]}setLinearVelocity(t,i,s){this._applyToBodyOrInstances(t,e=>{this._hknp.HP_Body_SetLinearVelocity(e.hpBodyId,this._bVecToV3(i))},s)}getLinearVelocityToRef(t,i,s){const e=this._getPluginReference(t,s),n=this._hknp.HP_Body_GetLinearVelocity(e.hpBodyId)[1];this._v3ToBvecRef(n,i)}_applyToBodyOrInstances(t,i,s){var e;if(((e=t._pluginDataInstances)===null||e===void 0?void 0:e.length)>0&&s===void 0)for(let n=0;n<t._pluginDataInstances.length;n++)i(t._pluginDataInstances[n]);else i(this._getPluginReference(t,s))}applyImpulse(t,i,s,e){this._applyToBodyOrInstances(t,n=>{this._hknp.HP_Body_ApplyImpulse(n.hpBodyId,this._bVecToV3(s),this._bVecToV3(i))},e)}applyForce(t,i,s,e){i.scaleToRef(this.getTimeStep(),this._tmpVec3[0]),this.applyImpulse(t,this._tmpVec3[0],s,e)}setAngularVelocity(t,i,s){this._applyToBodyOrInstances(t,e=>{this._hknp.HP_Body_SetAngularVelocity(e.hpBodyId,this._bVecToV3(i))},s)}getAngularVelocityToRef(t,i,s){const e=this._getPluginReference(t,s),n=this._hknp.HP_Body_GetAngularVelocity(e.hpBodyId)[1];this._v3ToBvecRef(n,i)}setPhysicsBodyTransformation(t,i){const s=t.transformNode;if(t.numInstances>0){const n=s._thinInstanceDataStorage.matrixData;if(!n)return;const a=t.numInstances;this._createOrUpdateBodyInstances(t,t.getMotionType(),n,0,a,!0)}else this._hknp.HP_Body_SetQTransform(t._pluginData.hpBodyId,this._getTransformInfos(i))}setGravityFactor(t,i,s){this._applyToBodyOrInstances(t,e=>{this._hknp.HP_Body_SetGravityFactor(e.hpBodyId,i)},s)}getGravityFactor(t,i){const s=this._getPluginReference(t,i);return this._hknp.HP_Body_GetGravityFactor(s.hpBodyId)[1]}disposeBody(t){if(t._pluginDataInstances&&t._pluginDataInstances.length>0)for(const i of t._pluginDataInstances)this._hknp.HP_Body_Release(i.hpBodyId),i.hpBodyId=void 0;t._pluginData&&(this._hknp.HP_Body_Release(t._pluginData.hpBodyId),t._pluginData.hpBodyId=void 0)}initShape(t,i,s){switch(i){case d.SPHERE:{const e=s.radius||1,n=s.center?this._bVecToV3(s.center):[0,0,0];t._pluginData=this._hknp.HP_Shape_CreateSphere(n,e)[1]}break;case d.BOX:{const e=s.rotation?this._bQuatToV4(s.rotation):[0,0,0,1],n=s.extents?this._bVecToV3(s.extents):[1,1,1],a=s.center?this._bVecToV3(s.center):[0,0,0];t._pluginData=this._hknp.HP_Shape_CreateBox(a,e,n)[1]}break;case d.CAPSULE:{const e=s.pointA?this._bVecToV3(s.pointA):[0,0,0],n=s.pointB?this._bVecToV3(s.pointB):[0,1,0],a=s.radius||0;t._pluginData=this._hknp.HP_Shape_CreateCapsule(e,n,a)[1]}break;case d.CONTAINER:t._pluginData=this._hknp.HP_Shape_CreateContainer()[1];break;case d.CYLINDER:{const e=s.pointA?this._bVecToV3(s.pointA):[0,0,0],n=s.pointB?this._bVecToV3(s.pointB):[0,1,0],a=s.radius||0;t._pluginData=this._hknp.HP_Shape_CreateCylinder(e,n,a)[1]}break;case d.CONVEX_HULL:case d.MESH:{const e=s.mesh;if(e){const n=!!s.includeChildMeshes,a=i!=d.CONVEX_HULL,o=new J(e,a,e==null?void 0:e.getScene());o.addMesh(e,n);const h=o.getVertices(this._hknp),l=h.length/3;if(i==d.CONVEX_HULL)t._pluginData=this._hknp.HP_Shape_CreateConvexHull(h.byteOffset,l)[1];else{const _=o.getTriangles(this._hknp),c=_.length/3;t._pluginData=this._hknp.HP_Shape_CreateMesh(h.byteOffset,l,_.byteOffset,c)[1],o.freeBuffer(this._hknp,_)}o.freeBuffer(this._hknp,h)}else throw new Error("No mesh provided to create physics shape.")}break;default:throw new Error("Unsupported Shape Type.")}}setShapeFilterMembershipMask(t,i){const s=this._hknp.HP_Shape_GetFilterInfo(t._pluginData)[1][1];this._hknp.HP_Shape_SetFilterInfo(t._pluginData,[i,s])}getShapeFilterMembershipMask(t){return this._hknp.HP_Shape_GetFilterInfo(t._pluginData)[1][0]}setShapeFilterCollideMask(t,i){const s=this._hknp.HP_Shape_GetFilterInfo(t._pluginData)[1][0];this._hknp.HP_Shape_SetFilterInfo(t._pluginData,[s,i])}getShapeFilterCollideMask(t){return this._hknp.HP_Shape_GetFilterInfo(t._pluginData)[1][1]}setMaterial(t,i){var s,e,n,a,o;const h=(s=i.friction)!==null&&s!==void 0?s:.5,l=(e=i.staticFriction)!==null&&e!==void 0?e:h,_=(n=i.restitution)!==null&&n!==void 0?n:0,c=(a=i.frictionCombine)!==null&&a!==void 0?a:k.MINIMUM,p=(o=i.restitutionCombine)!==null&&o!==void 0?o:k.MAXIMUM,f=[l,h,_,this._materialCombineToNative(c),this._materialCombineToNative(p)];this._hknp.HP_Shape_SetMaterial(t._pluginData,f)}setDensity(t,i){this._hknp.HP_Shape_SetDensity(t._pluginData,i)}getDensity(t){return this._hknp.HP_Shape_GetDensity(t._pluginData)[1]}_getTransformInfos(t){if(t.parent)return t.computeWorldMatrix(!0),[this._bVecToV3(t.absolutePosition),this._bQuatToV4(t.absoluteRotationQuaternion)];let i=g.Quaternion[0];if(t.rotationQuaternion)i=t.rotationQuaternion;else{const e=t.rotation;D.FromEulerAnglesToRef(e.x,e.y,e.z,i)}return[this._bVecToV3(t.position),this._bQuatToV4(i)]}addChild(t,i,s,e,n){const a=[s?this._bVecToV3(s):[0,0,0],e?this._bQuatToV4(e):[0,0,0,1],n?this._bVecToV3(n):[1,1,1]];this._hknp.HP_Shape_AddChild(t._pluginData,i._pluginData,a)}removeChild(t,i){this._hknp.HP_Shape_RemoveChild(t._pluginData,i)}getNumChildren(t){return this._hknp.HP_Shape_GetNumChildren(t._pluginData)[1]}getBoundingBox(t){return{}}getBodyGeometry(t){var i;const s=((i=t._pluginDataInstances)===null||i===void 0?void 0:i.length)>0?t._pluginDataInstances[0]:t._pluginData,e=this._hknp.HP_Body_GetShape(s.hpBodyId)[1],n=this._hknp.HP_Shape_CreateDebugDisplayGeometry(e);if(n[0]!=this._hknp.Result.RESULT_OK)return{positions:[],indices:[]};const a=this._hknp.HP_DebugGeometry_GetInfo(n[1])[1],o=new Float32Array(this._hknp.HEAPU8.buffer,a[0],a[1]*3),h=new Uint32Array(this._hknp.HEAPU8.buffer,a[2],a[3]*3),l=o.slice(0),_=h.slice(0);return this._hknp.HP_DebugGeometry_Release(n[1]),{positions:l,indices:_}}disposeShape(t){this._hknp.HP_Shape_Release(t._pluginData),t._pluginData=void 0}initConstraint(t,i,s,e,n){var a,o,h,l;const _=t.type,c=t.options;if(!_||!c){E.Warn("No constraint type or options. Constraint is invalid.");return}if(i._pluginDataInstances.length>0&&e===void 0||s._pluginDataInstances.length>0&&n===void 0){E.Warn("Body is instanced but no instance index was specified. Constraint will not be applied.");return}const p=this._hknp.HP_Constraint_Create()[1];t._pluginData=p;const f=this._getPluginReference(i,e).hpBodyId,P=this._getPluginReference(s,n).hpBodyId;this._hknp.HP_Constraint_SetParentBody(p,f),this._hknp.HP_Constraint_SetChildBody(p,P);const Q=c.pivotA?this._bVecToV3(c.pivotA):this._bVecToV3(u.Zero()),H=(a=c.axisA)!==null&&a!==void 0?a:new u(1,0,0),v=this._tmpVec3[0];c.perpAxisA?v.copyFrom(c.perpAxisA):H.getNormalToRef(v),this._hknp.HP_Constraint_SetAnchorInParent(p,Q,this._bVecToV3(H),this._bVecToV3(v));const X=c.pivotB?this._bVecToV3(c.pivotB):this._bVecToV3(u.Zero()),N=(o=c.axisB)!==null&&o!==void 0?o:new u(1,0,0),L=this._tmpVec3[0];if(c.perpAxisB?L.copyFrom(c.perpAxisB):N.getNormalToRef(L),this._hknp.HP_Constraint_SetAnchorInChild(p,X,this._bVecToV3(N),this._bVecToV3(L)),_==m.LOCK)this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.ANGULAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(_==m.DISTANCE){const T=c.maxDistance||0,A=this._hknp.ConstraintAxis.LINEAR_DISTANCE;this._hknp.HP_Constraint_SetAxisMode(p,A,this._hknp.ConstraintAxisLimitMode.LIMITED),this._hknp.HP_Constraint_SetAxisMinLimit(p,A,T),this._hknp.HP_Constraint_SetAxisMaxLimit(p,A,T)}else if(_==m.HINGE)this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(_==m.PRISMATIC)this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.ANGULAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(_==m.SLIDER)this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(_==m.BALL_AND_SOCKET)this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(p,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(_==m.SIX_DOF){const T=t;for(const A of T.limits){const B=this._constraintAxisToNative(A.axis);((h=A.minLimit)!==null&&h!==void 0?h:-1)==0&&((l=A.maxLimit)!==null&&l!==void 0?l:-1)==0?this._hknp.HP_Constraint_SetAxisMode(p,B,this._hknp.ConstraintAxisLimitMode.LOCKED):(A.minLimit!=null&&(this._hknp.HP_Constraint_SetAxisMode(p,B,this._hknp.ConstraintAxisLimitMode.LIMITED),this._hknp.HP_Constraint_SetAxisMinLimit(p,B,A.minLimit)),A.maxLimit!=null&&(this._hknp.HP_Constraint_SetAxisMode(p,B,this._hknp.ConstraintAxisLimitMode.LIMITED),this._hknp.HP_Constraint_SetAxisMaxLimit(p,B,A.maxLimit)))}}else throw new Error("Unsupported Constraint Type.");const z=!!c.collision;this._hknp.HP_Constraint_SetCollisionsEnabled(p,z),this._hknp.HP_Constraint_SetEnabled(p,!0)}addConstraint(t,i,s,e,n){this.initConstraint(s,t,i,e,n)}setEnabled(t,i){this._hknp.HP_Constraint_SetEnabled(t._pluginData,i)}getEnabled(t){return this._hknp.HP_Constraint_GetEnabled(t._pluginData)[1]}setCollisionsEnabled(t,i){this._hknp.HP_Constraint_SetCollisionsEnabled(t._pluginData,i)}getCollisionsEnabled(t){return this._hknp.HP_Constraint_GetCollisionsEnabled(t._pluginData)[1]}setAxisFriction(t,i,s){this._hknp.HP_Constraint_SetAxisFriction(t._pluginData,this._constraintAxisToNative(i),s)}getAxisFriction(t,i){return this._hknp.HP_Constraint_GetAxisFriction(t._pluginData,this._constraintAxisToNative(i))[1]}setAxisMode(t,i,s){this._hknp.HP_Constraint_SetAxisMode(t._pluginData,this._constraintAxisToNative(i),this._limitModeToNative(s))}getAxisMode(t,i){const s=this._hknp.HP_Constraint_GetAxisMode(t._pluginData,this._constraintAxisToNative(i))[1];return this._nativeToLimitMode(s)}setAxisMinLimit(t,i,s){this._hknp.HP_Constraint_SetAxisMinLimit(t._pluginData,this._constraintAxisToNative(i),s)}getAxisMinLimit(t,i){return this._hknp.HP_Constraint_GetAxisMinLimit(t._pluginData,this._constraintAxisToNative(i))[1]}setAxisMaxLimit(t,i,s){this._hknp.HP_Constraint_SetAxisMaxLimit(t._pluginData,this._constraintAxisToNative(i),s)}getAxisMaxLimit(t,i){return this._hknp.HP_Constraint_GetAxisMaxLimit(t._pluginData,this._constraintAxisToNative(i))[1]}setAxisMotorType(t,i,s){this._hknp.HP_Constraint_SetAxisMotorType(t._pluginData,this._constraintAxisToNative(i),this._constraintMotorTypeToNative(s))}getAxisMotorType(t,i){return this._nativeToMotorType(this._hknp.HP_Constraint_GetAxisMotorType(t._pluginData,this._constraintAxisToNative(i))[1])}setAxisMotorTarget(t,i,s){this._hknp.HP_Constraint_SetAxisMotorTarget(t._pluginData,this._constraintAxisToNative(i),s)}getAxisMotorTarget(t,i){return this._hknp.HP_Constraint_GetAxisMotorTarget(t._pluginData,this._constraintAxisToNative(i))[1]}setAxisMotorMaxForce(t,i,s){this._hknp.HP_Constraint_SetAxisMotorMaxForce(t._pluginData,this._constraintAxisToNative(i),s)}getAxisMotorMaxForce(t,i){return this._hknp.HP_Constraint_GetAxisMotorMaxForce(t._pluginData,this._constraintAxisToNative(i))[1]}disposeConstraint(t){const i=t._pluginData;this._hknp.HP_Constraint_SetEnabled(i,!1),this._hknp.HP_Constraint_Release(i),t._pluginData=void 0}raycast(t,i,s,e){var n,a;const o=(n=e==null?void 0:e.membership)!==null&&n!==void 0?n:-1,h=(a=e==null?void 0:e.collideWith)!==null&&a!==void 0?a:-1;s.reset(t,i);const l=[this._bVecToV3(t),this._bVecToV3(i),[o,h]];if(this._hknp.HP_World_CastRayWithCollector(this.world,this._queryCollector,l),this._hknp.HP_QueryCollector_GetNumHits(this._queryCollector)[1]>0){const _=this._hknp.HP_QueryCollector_GetCastRayResult(this._queryCollector,0)[1],c=_[1][3],p=_[1][4],f=_[1][5];s.setHitData({x:p[0],y:p[1],z:p[2]},{x:c[0],y:c[1],z:c[2]},f),s.calculateHitDistance();const P=this._bodies.get(_[1][0][0]);s.body=P==null?void 0:P.body,s.bodyIndex=P==null?void 0:P.index}}getCollisionObservable(t){const i=t._pluginData.hpBodyId[0];let s=this._bodyCollisionObservable.get(i);return s||(s=new V,this._bodyCollisionObservable.set(i,s)),s}setCollisionCallbackEnabled(t,i){const s=this._hknp.EventType.COLLISION_STARTED.value|this._hknp.EventType.COLLISION_CONTINUED.value|this._hknp.EventType.COLLISION_FINISHED.value;t._pluginDataInstances&&t._pluginDataInstances.length?t._pluginDataInstances.forEach(e=>{this._hknp.HP_Body_SetEventMask(e.hpBodyId,i?s:0)}):t._pluginData&&this._hknp.HP_Body_SetEventMask(t._pluginData.hpBodyId,i?s:0)}_notifyCollisions(){let t=this._hknp.HP_World_GetCollisionEvents(this.world)[1];const i=new G,s=Number(this.world);for(;t;){G.readToRef(this._hknp.HEAPU8.buffer,t,i),i.contactOnB.position.subtractToRef(i.contactOnA.position,this._tmpVec3[0]);const e=u.Dot(this._tmpVec3[0],i.contactOnA.normal),n=this._bodies.get(i.contactOnA.bodyId),a=this._bodies.get(i.contactOnB.bodyId),o={collider:n.body,colliderIndex:n.index,collidedAgainst:a.body,collidedAgainstIndex:a.index,point:i.contactOnA.position,distance:e,impulse:i.impulseApplied,normal:i.contactOnA.normal};if(this.onCollisionObservable.notifyObservers(o),this._bodyCollisionObservable.size){const h=this._bodyCollisionObservable.get(i.contactOnA.bodyId),l=this._bodyCollisionObservable.get(i.contactOnB.bodyId);h?h.notifyObservers(o):l&&(o.collider=a.body,o.colliderIndex=a.index,o.collidedAgainst=n.body,o.collidedAgainstIndex=n.index,o.normal=i.contactOnB.normal,l.notifyObservers(o))}t=this._hknp.HP_World_GetNextCollisionEvent(s,t)}}get numBodies(){return this._hknp.HP_World_GetNumBodies(this.world)[1]}dispose(){this._hknp.HP_QueryCollector_Release(this._queryCollector),this._queryCollector=BigInt(0),this._hknp.HP_World_Release(this.world),this.world=void 0}_v3ToBvecRef(t,i){i.set(t[0],t[1],t[2])}_bVecToV3(t){return[t._x,t._y,t._z]}_bQuatToV4(t){return[t._x,t._y,t._z,t._w]}_constraintMotorTypeToNative(t){switch(t){case x.POSITION:return this._hknp.ConstraintMotorType.POSITION;case x.VELOCITY:return this._hknp.ConstraintMotorType.VELOCITY}return this._hknp.ConstraintMotorType.NONE}_nativeToMotorType(t){switch(t){case this._hknp.ConstraintMotorType.POSITION:return x.POSITION;case this._hknp.ConstraintMotorType.VELOCITY:return x.VELOCITY}return x.NONE}_materialCombineToNative(t){switch(t){case k.GEOMETRIC_MEAN:return this._hknp.MaterialCombine.GEOMETRIC_MEAN;case k.MINIMUM:return this._hknp.MaterialCombine.MINIMUM;case k.MAXIMUM:return this._hknp.MaterialCombine.MAXIMUM;case k.ARITHMETIC_MEAN:return this._hknp.MaterialCombine.ARITHMETIC_MEAN;case k.MULTIPLY:return this._hknp.MaterialCombine.MULTIPLY}}_constraintAxisToNative(t){switch(t){case C.LINEAR_X:return this._hknp.ConstraintAxis.LINEAR_X;case C.LINEAR_Y:return this._hknp.ConstraintAxis.LINEAR_Y;case C.LINEAR_Z:return this._hknp.ConstraintAxis.LINEAR_Z;case C.ANGULAR_X:return this._hknp.ConstraintAxis.ANGULAR_X;case C.ANGULAR_Y:return this._hknp.ConstraintAxis.ANGULAR_Y;case C.ANGULAR_Z:return this._hknp.ConstraintAxis.ANGULAR_Z;case C.LINEAR_DISTANCE:return this._hknp.ConstraintAxis.LINEAR_DISTANCE}}_nativeToLimitMode(t){switch(t){case this._hknp.ConstraintAxisLimitMode.FREE:return y.FREE;case this._hknp.ConstraintAxisLimitMode.LIMITED:return y.LIMITED;case this._hknp.ConstraintAxisLimitMode.LOCKED:return y.LOCKED}return y.FREE}_limitModeToNative(t){switch(t){case y.FREE:return this._hknp.ConstraintAxisLimitMode.FREE;case y.LIMITED:return this._hknp.ConstraintAxisLimitMode.LIMITED;case y.LOCKED:return this._hknp.ConstraintAxisLimitMode.LOCKED}}}export{ot as H,b as P,I as a,Y as b,U as c,et as d,nt as e,d as f,C as g,y as h,x as i,m as j,k,M as l,W as m,it as n,K as o,st as p};
