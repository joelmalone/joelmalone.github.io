import{O as h,E as g,cp as l,A as d}from"./runBabylonPlaygroundScene-32a4afbd.js";class f{getClassName(){return"TargetedAnimation"}serialize(){const t={};return t.animation=this.animation.serialize(),t.targetId=this.target.id,t}}class m{get from(){return this._from}get to(){return this._to}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(t){if(this._speedRatio!==t){this._speedRatio=t;for(let i=0;i<this._animatables.length;i++){const e=this._animatables[i];e.speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(t){if(this._loopAnimation!==t){this._loopAnimation=t;for(let i=0;i<this._animatables.length;i++){const e=this._animatables[i];e.loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(t){if(this._isAdditive!==t){this._isAdditive=t;for(let i=0;i<this._animatables.length;i++){const e=this._animatables[i];e.isAdditive=this._isAdditive}}}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}constructor(t,i=null){this.name=t,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._parentContainer=null,this.onAnimationEndObservable=new h,this.onAnimationLoopObservable=new h,this.onAnimationGroupLoopObservable=new h,this.onAnimationGroupEndObservable=new h,this.onAnimationGroupPauseObservable=new h,this.onAnimationGroupPlayObservable=new h,this.metadata=null,this._animationLoopFlags=[],this._scene=i||g.LastCreatedScene,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(t,i){const e=new f;e.animation=t,e.target=i;const n=t.getKeys();return this._from>n[0].frame&&(this._from=n[0].frame),this._to<n[n.length-1].frame&&(this._to=n[n.length-1].frame),this._targetedAnimations.push(e),e}removeTargetedAnimation(t){for(let i=this._targetedAnimations.length-1;i>-1;i--)this._targetedAnimations[i].animation===t&&this._targetedAnimations.splice(i,1)}normalize(t=null,i=null){t==null&&(t=this._from),i==null&&(i=this._to);for(let e=0;e<this._targetedAnimations.length;e++){const a=this._targetedAnimations[e].animation.getKeys(),s=a[0],r=a[a.length-1];if(s.frame>t){const o={frame:t,value:s.value,inTangent:s.inTangent,outTangent:s.outTangent,interpolation:s.interpolation};a.splice(0,0,o)}if(r.frame<i){const o={frame:i,value:r.value,inTangent:r.inTangent,outTangent:r.outTangent,interpolation:r.interpolation};a.push(o)}}return this._from=t,this._to=i,this}_processLoop(t,i,e){t.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(i),!this._animationLoopFlags[e]&&(this._animationLoopFlags[e]=!0,this._animationLoopCount++,this._animationLoopCount===this._targetedAnimations.length&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(t=!1,i=1,e,n,a){if(this._isStarted||this._targetedAnimations.length===0)return this;this._loopAnimation=t,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let s=0;s<this._targetedAnimations.length;s++){const r=this._targetedAnimations[s],o=this._scene.beginDirectAnimation(r.target,[r.animation],e!==void 0?e:this._from,n!==void 0?n:this._to,t,i,void 0,void 0,a!==void 0?a:this._isAdditive);o.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(r),this._checkAnimationGroupEnded(o)},this._processLoop(o,r,s),this._animatables.push(o)}return this._speedRatio=i,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let t=0;t<this._animatables.length;t++)this._animatables[t].pause();return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(t){return this.isStarted&&this._animatables.length===this._targetedAnimations.length?(t!==void 0&&(this.loopAnimation=t),this.restart()):(this.stop(),this.start(t,this._speedRatio)),this._isPaused=!1,this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(),this;for(let t=0;t<this._animatables.length;t++)this._animatables[t].reset();return this}restart(){if(!this._isStarted)return this;for(let t=0;t<this._animatables.length;t++)this._animatables[t].restart();return this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){if(!this._isStarted)return this;const t=this._animatables.slice();for(let e=0;e<t.length;e++)t[e].stop(void 0,void 0,!0);let i=0;for(let e=0;e<this._scene._activeAnimatables.length;e++){const n=this._scene._activeAnimatables[e];n._runtimeAnimations.length>0&&(this._scene._activeAnimatables[i++]=n)}return this._scene._activeAnimatables.length=i,this._isStarted=!1,this}setWeightForAllAnimatables(t){for(let i=0;i<this._animatables.length;i++){const e=this._animatables[i];e.weight=t}return this}syncAllAnimationsWith(t){for(let i=0;i<this._animatables.length;i++)this._animatables[i].syncWith(t);return this}goToFrame(t){if(!this._isStarted)return this;for(let i=0;i<this._animatables.length;i++)this._animatables[i].goToFrame(t);return this}dispose(){this._targetedAnimations.length=0,this._animatables.length=0;const t=this._scene.animationGroups.indexOf(this);if(t>-1&&this._scene.animationGroups.splice(t,1),this._parentContainer){const i=this._parentContainer.animationGroups.indexOf(this);i>-1&&this._parentContainer.animationGroups.splice(i,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(t){const i=this._animatables.indexOf(t);i>-1&&this._animatables.splice(i,1),this._animatables.length===0&&(this._isStarted=!1,this.onAnimationGroupEndObservable.notifyObservers(this))}clone(t,i,e=!1){const n=new m(t||this.name,this._scene);for(const a of this._targetedAnimations)n.addTargetedAnimation(e?a.animation.clone():a.animation,i?i(a.target):a.target);return n}serialize(){const t={};t.name=this.name,t.from=this.from,t.to=this.to,t.targetedAnimations=[];for(let i=0;i<this.targetedAnimations.length;i++){const e=this.targetedAnimations[i];t.targetedAnimations[i]=e.serialize()}return l&&l.HasTags(this)&&(t.tags=l.GetTags(this)),this.metadata&&(t.metadata=this.metadata),t}static Parse(t,i){const e=new m(t.name,i);for(let n=0;n<t.targetedAnimations.length;n++){const a=t.targetedAnimations[n],s=d.Parse(a.animation),r=a.targetId;if(a.animation.property==="influence"){const o=i.getMorphTargetById(r);o&&e.addTargetedAnimation(s,o)}else{const o=i.getNodeById(r);o!=null&&e.addTargetedAnimation(s,o)}}return t.from!==null&&t.to!==null&&e.normalize(t.from,t.to),l&&l.AddTagsTo(e,t.tags),t.metadata!==void 0&&(e.metadata=t.metadata),e}static MakeAnimationAdditive(t,i=0,e,n=!1,a){let s=t;n&&(s=t.clone(a||s.name));const r=s.targetedAnimations;for(let o=0;o<r.length;o++){const _=r[o];d.MakeAnimationAdditive(_.animation,i,e)}return s.isAdditive=!0,s}getClassName(){return"AnimationGroup"}toString(t){let i="Name: "+this.name;return i+=", type: "+this.getClassName(),t&&(i+=", from: "+this._from,i+=", to: "+this._to,i+=", isStarted: "+this._isStarted,i+=", speedRatio: "+this._speedRatio,i+=", targetedAnimations length: "+this._targetedAnimations.length,i+=", animatables length: "+this._animatables),i}}export{m as A,f as T};
