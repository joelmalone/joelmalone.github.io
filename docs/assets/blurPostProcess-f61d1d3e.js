import{y as le,V as b,S as w,h as L,X as te,v as R,bG as ue,E as de,aL as $,W as N,af as G,a1 as z,ae as re,L as Z,n as S,p as y,ap as fe,aQ as Q,d as J,O as D,ad as ie,Z as ce,i as X,t as q,aA as _e,R as se,Y as pe,aa as W,a8 as ge,j as H,g as me,cQ as Te,ca as be,c1 as xe,cO as Re}from"./runBabylonPlaygroundScene-32a4afbd.js";import{T as B}from"./linesBuilder-a2dae4c1.js";class T{constructor(e,t,r=Number.MAX_VALUE){this.origin=e,this.direction=t,this.length=r}clone(){return new T(this.origin.clone(),this.direction.clone(),this.length)}intersectsBoxMinMax(e,t,r=0){const i=T._TmpVector3[0].copyFromFloats(e.x-r,e.y-r,e.z-r),s=T._TmpVector3[1].copyFromFloats(t.x+r,t.y+r,t.z+r);let n=0,a=Number.MAX_VALUE,h,o,l,u;if(Math.abs(this.direction.x)<1e-7){if(this.origin.x<i.x||this.origin.x>s.x)return!1}else if(h=1/this.direction.x,o=(i.x-this.origin.x)*h,l=(s.x-this.origin.x)*h,l===-1/0&&(l=1/0),o>l&&(u=o,o=l,l=u),n=Math.max(o,n),a=Math.min(l,a),n>a)return!1;if(Math.abs(this.direction.y)<1e-7){if(this.origin.y<i.y||this.origin.y>s.y)return!1}else if(h=1/this.direction.y,o=(i.y-this.origin.y)*h,l=(s.y-this.origin.y)*h,l===-1/0&&(l=1/0),o>l&&(u=o,o=l,l=u),n=Math.max(o,n),a=Math.min(l,a),n>a)return!1;if(Math.abs(this.direction.z)<1e-7){if(this.origin.z<i.z||this.origin.z>s.z)return!1}else if(h=1/this.direction.z,o=(i.z-this.origin.z)*h,l=(s.z-this.origin.z)*h,l===-1/0&&(l=1/0),o>l&&(u=o,o=l,l=u),n=Math.max(o,n),a=Math.min(l,a),n>a)return!1;return!0}intersectsBox(e,t=0){return this.intersectsBoxMinMax(e.minimum,e.maximum,t)}intersectsSphere(e,t=0){const r=e.center.x-this.origin.x,i=e.center.y-this.origin.y,s=e.center.z-this.origin.z,n=r*r+i*i+s*s,a=e.radius+t,h=a*a;if(n<=h)return!0;const o=r*this.direction.x+i*this.direction.y+s*this.direction.z;return o<0?!1:n-o*o<=h}intersectsTriangle(e,t,r){const i=T._TmpVector3[0],s=T._TmpVector3[1],n=T._TmpVector3[2],a=T._TmpVector3[3],h=T._TmpVector3[4];t.subtractToRef(e,i),r.subtractToRef(e,s),b.CrossToRef(this.direction,s,n);const o=b.Dot(i,n);if(o===0)return null;const l=1/o;this.origin.subtractToRef(e,a);const u=b.Dot(a,n)*l;if(u<0||u>1)return null;b.CrossToRef(a,i,h);const d=b.Dot(this.direction,h)*l;if(d<0||u+d>1)return null;const c=b.Dot(s,h)*l;return c>this.length?null:new ue(1-u-d,u,c)}intersectsPlane(e){let t;const r=b.Dot(e.normal,this.direction);if(Math.abs(r)<999999997475243e-21)return null;{const i=b.Dot(e.normal,this.origin);return t=(-e.d-i)/r,t<0?t<-999999997475243e-21?null:0:t}}intersectsAxis(e,t=0){switch(e){case"y":{const r=(this.origin.y-t)/this.direction.y;return r>0?null:new b(this.origin.x+this.direction.x*-r,t,this.origin.z+this.direction.z*-r)}case"x":{const r=(this.origin.x-t)/this.direction.x;return r>0?null:new b(t,this.origin.y+this.direction.y*-r,this.origin.z+this.direction.z*-r)}case"z":{const r=(this.origin.z-t)/this.direction.z;return r>0?null:new b(this.origin.x+this.direction.x*-r,this.origin.y+this.direction.y*-r,t)}default:return null}}intersectsMesh(e,t,r,i=!1,s,n=!1){const a=R.Matrix[0];return e.getWorldMatrix().invertToRef(a),this._tmpRay?T.TransformToRef(this,a,this._tmpRay):this._tmpRay=T.Transform(this,a),e.intersects(this._tmpRay,t,r,i,s,n)}intersectsMeshes(e,t,r){r?r.length=0:r=[];for(let i=0;i<e.length;i++){const s=this.intersectsMesh(e[i],t);s.hit&&r.push(s)}return r.sort(this._comparePickingInfo),r}_comparePickingInfo(e,t){return e.distance<t.distance?-1:e.distance>t.distance?1:0}intersectionSegment(e,t,r){const i=this.origin,s=R.Vector3[0],n=R.Vector3[1],a=R.Vector3[2],h=R.Vector3[3];t.subtractToRef(e,s),this.direction.scaleToRef(T._Rayl,a),i.addToRef(a,n),e.subtractToRef(i,h);const o=b.Dot(s,s),l=b.Dot(s,a),u=b.Dot(a,a),d=b.Dot(s,h),c=b.Dot(a,h),g=o*u-l*l;let p,_=g,m,v=g;g<T._Smallnum?(p=0,_=1,m=c,v=u):(p=l*c-u*d,m=o*c-l*d,p<0?(p=0,m=c,v=u):p>_&&(p=_,m=c+l,v=u)),m<0?(m=0,-d<0?p=0:-d>o?p=_:(p=-d,_=o)):m>v&&(m=v,-d+l<0?p=0:-d+l>o?p=_:(p=-d+l,_=o));const C=Math.abs(p)<T._Smallnum?0:p/_,E=Math.abs(m)<T._Smallnum?0:m/v,F=R.Vector3[4];a.scaleToRef(E,F);const I=R.Vector3[5];s.scaleToRef(C,I),I.addInPlace(h);const k=R.Vector3[6];return I.subtractToRef(F,k),E>0&&E<=this.length&&k.lengthSquared()<r*r?I.length():-1}update(e,t,r,i,s,n,a,h=!1){if(h){T._RayDistant||(T._RayDistant=T.Zero()),T._RayDistant.unprojectRayToRef(e,t,r,i,L.IdentityReadOnly,n,a);const o=R.Matrix[0];s.invertToRef(o),T.TransformToRef(T._RayDistant,o,this)}else this.unprojectRayToRef(e,t,r,i,s,n,a);return this}static Zero(){return new T(b.Zero(),b.Zero())}static CreateNew(e,t,r,i,s,n,a){return T.Zero().update(e,t,r,i,s,n,a)}static CreateNewFromTo(e,t,r=L.IdentityReadOnly){const i=t.subtract(e),s=Math.sqrt(i.x*i.x+i.y*i.y+i.z*i.z);return i.normalize(),T.Transform(new T(e,i,s),r)}static Transform(e,t){const r=new T(new b(0,0,0),new b(0,0,0));return T.TransformToRef(e,t,r),r}static TransformToRef(e,t,r){b.TransformCoordinatesToRef(e.origin,t,r.origin),b.TransformNormalToRef(e.direction,t,r.direction),r.length=e.length;const i=r.direction,s=i.length();if(!(s===0||s===1)){const n=1/s;i.x*=n,i.y*=n,i.z*=n,r.length*=s}}unprojectRayToRef(e,t,r,i,s,n,a){var h;const o=R.Matrix[0];s.multiplyToRef(n,o),o.multiplyToRef(a,o),o.invert();const l=R.Vector3[0];l.x=e/r*2-1,l.y=-(t/i*2-1),l.z=!((h=de.LastCreatedEngine)===null||h===void 0)&&h.isNDCHalfZRange?0:-1;const u=R.Vector3[1].copyFromFloats(l.x,l.y,1-1e-8),d=R.Vector3[2],c=R.Vector3[3];b._UnprojectFromInvertedMatrixToRef(l,o,d),b._UnprojectFromInvertedMatrixToRef(u,o,c),this.origin.copyFrom(d),c.subtractToRef(d,this.direction),this.direction.normalize()}}T._TmpVector3=le.BuildArray(6,b.Zero);T._RayDistant=T.Zero();T._Smallnum=1e-8;T._Rayl=1e9;w.prototype.createPickingRay=function(f,e,t,r,i=!1){const s=T.Zero();return this.createPickingRayToRef(f,e,t,s,r,i),s};w.prototype.createPickingRayToRef=function(f,e,t,r,i,s=!1,n=!1){const a=this.getEngine();if(!i){if(!this.activeCamera)return this;i=this.activeCamera}const o=i.viewport.toGlobal(a.getRenderWidth(),a.getRenderHeight());return f=f/a.getHardwareScalingLevel()-o.x,e=e/a.getHardwareScalingLevel()-(a.getRenderHeight()-o.y-o.height),r.update(f,e,o.width,o.height,t||L.IdentityReadOnly,s?L.IdentityReadOnly:i.getViewMatrix(),i.getProjectionMatrix(),n),this};w.prototype.createPickingRayInCameraSpace=function(f,e,t){const r=T.Zero();return this.createPickingRayInCameraSpaceToRef(f,e,r,t),r};w.prototype.createPickingRayInCameraSpaceToRef=function(f,e,t,r){if(!$)return this;const i=this.getEngine();if(!r){if(!this.activeCamera)throw new Error("Active camera not set");r=this.activeCamera}const n=r.viewport.toGlobal(i.getRenderWidth(),i.getRenderHeight()),a=L.Identity();return f=f/i.getHardwareScalingLevel()-n.x,e=e/i.getHardwareScalingLevel()-(i.getRenderHeight()-n.y-n.height),t.update(f,e,n.width,n.height,a,a,r.getProjectionMatrix()),this};w.prototype._internalPickForMesh=function(f,e,t,r,i,s,n,a){const h=e(r,t.enableDistantPicking),o=t.intersects(h,i,n,s,r,a);return!o||!o.hit||!i&&f!=null&&o.distance>=f.distance?null:o};w.prototype._internalPick=function(f,e,t,r,i){let s=null;const n=!!(this.activeCameras&&this.activeCameras.length>1&&this.cameraToUseForPointers!==this.activeCamera),a=this.cameraToUseForPointers||this.activeCamera;for(let h=0;h<this.meshes.length;h++){const o=this.meshes[h];if(e){if(!e(o))continue}else if(!o.isEnabled()||!o.isVisible||!o.isPickable)continue;const l=n&&o.isWorldMatrixCameraDependent(),u=o.computeWorldMatrix(l,a);if(o.hasThinInstances&&o.thinInstanceEnablePicking){const d=this._internalPickForMesh(s,f,o,u,!0,!0,i);if(d){if(r)return d;const c=R.Matrix[1],g=o.thinInstanceGetWorldMatrices();for(let p=0;p<g.length;p++){g[p].multiplyToRef(u,c);const m=this._internalPickForMesh(s,f,o,c,t,r,i,!0);if(m&&(s=m,s.thinInstanceIndex=p,t))return s}}}else{const d=this._internalPickForMesh(s,f,o,u,t,r,i);if(d&&(s=d,t))return s}}return s||new $};w.prototype._internalMultiPick=function(f,e,t){if(!$)return null;const r=new Array,i=!!(this.activeCameras&&this.activeCameras.length>1&&this.cameraToUseForPointers!==this.activeCamera),s=this.cameraToUseForPointers||this.activeCamera;for(let n=0;n<this.meshes.length;n++){const a=this.meshes[n];if(e){if(!e(a))continue}else if(!a.isEnabled()||!a.isVisible||!a.isPickable)continue;const h=i&&a.isWorldMatrixCameraDependent(),o=a.computeWorldMatrix(h,s);if(a.hasThinInstances&&a.thinInstanceEnablePicking){if(this._internalPickForMesh(null,f,a,o,!0,!0,t)){const u=R.Matrix[1],d=a.thinInstanceGetWorldMatrices();for(let c=0;c<d.length;c++){d[c].multiplyToRef(o,u);const p=this._internalPickForMesh(null,f,a,u,!1,!1,t,!0);p&&(p.thinInstanceIndex=c,r.push(p))}}}else{const l=this._internalPickForMesh(null,f,a,o,!1,!1,t);l&&r.push(l)}}return r};w.prototype.pickWithBoundingInfo=function(f,e,t,r,i){if(!$)return null;const s=this._internalPick(n=>(this._tempPickingRay||(this._tempPickingRay=T.Zero()),this.createPickingRayToRef(f,e,n,this._tempPickingRay,i||null),this._tempPickingRay),t,r,!0);return s&&(s.ray=this.createPickingRay(f,e,L.Identity(),i||null)),s};Object.defineProperty(w.prototype,"_pickingAvailable",{get:()=>!0,enumerable:!1,configurable:!1});w.prototype.pick=function(f,e,t,r,i,s,n=!1){const a=this._internalPick((h,o)=>(this._tempPickingRay||(this._tempPickingRay=T.Zero()),this.createPickingRayToRef(f,e,h,this._tempPickingRay,i||null,!1,o),this._tempPickingRay),t,r,!1,s);return a&&(a.ray=this.createPickingRay(f,e,L.Identity(),i||null)),a};w.prototype.pickWithRay=function(f,e,t,r){const i=this._internalPick(s=>(this._pickWithRayInverseMatrix||(this._pickWithRayInverseMatrix=L.Identity()),s.invertToRef(this._pickWithRayInverseMatrix),this._cachedRayForTransform||(this._cachedRayForTransform=T.Zero()),T.TransformToRef(f,this._pickWithRayInverseMatrix,this._cachedRayForTransform),this._cachedRayForTransform),e,t,!1,r);return i&&(i.ray=f),i};w.prototype.multiPick=function(f,e,t,r,i){return this._internalMultiPick(s=>this.createPickingRay(f,e,s,r||null),t,i)};w.prototype.multiPickWithRay=function(f,e,t){return this._internalMultiPick(r=>(this._pickWithRayInverseMatrix||(this._pickWithRayInverseMatrix=L.Identity()),r.invertToRef(this._pickWithRayInverseMatrix),this._cachedRayForTransform||(this._cachedRayForTransform=T.Zero()),T.TransformToRef(f,this._pickWithRayInverseMatrix,this._cachedRayForTransform),this._cachedRayForTransform),e,t)};te.prototype.getForwardRay=function(f=100,e,t){return this.getForwardRayToRef(new T(b.Zero(),b.Zero(),f),f,e,t)};te.prototype.getForwardRayToRef=function(f,e=100,t,r){return t||(t=this.getWorldMatrix()),f.length=e,r?f.origin.copyFrom(r):f.origin.copyFrom(this.position),R.Vector3[2].set(0,0,this._scene.useRightHandedSystem?-1:1),b.TransformNormalToRef(R.Vector3[2],t,R.Vector3[3]),b.NormalizeToRef(R.Vector3[3],f.direction),f};const ve="postprocessVertexShader",Se=`attribute vec2 position;
uniform vec2 scale;
varying vec2 vUV;
const vec2 madd=vec2(0.5,0.5);
#define CUSTOM_VERTEX_DEFINITIONS
void main(void) {
#define CUSTOM_VERTEX_MAIN_BEGIN
vUV=(position*madd+madd)*scale;
gl_Position=vec4(position,0.0,1.0);
#define CUSTOM_VERTEX_MAIN_END
}`;N.ShadersStore[ve]=Se;class Ce{get depthStencilTexture(){return this._depthStencilTexture}get depthStencilTextureWithStencil(){return this._depthStencilTextureWithStencil}get isCube(){return this._isCube}get isMulti(){return this._isMulti}get is2DArray(){return this.layers>0}get size(){return this.width}get width(){return this._size.width||this._size}get height(){return this._size.height||this._size}get layers(){return this._size.layers||0}get texture(){var e,t;return(t=(e=this._textures)===null||e===void 0?void 0:e[0])!==null&&t!==void 0?t:null}get textures(){return this._textures}get faceIndices(){return this._faceIndices}get layerIndices(){return this._layerIndices}get samples(){return this._samples}setSamples(e,t=!0,r=!1){if(this.samples===e&&!r)return e;const i=this._isMulti?this._engine.updateMultipleRenderTargetTextureSampleCount(this,e,t):this._engine.updateRenderTargetTextureSampleCount(this,e);return this._samples=e,i}constructor(e,t,r,i){this._textures=null,this._faceIndices=null,this._layerIndices=null,this._samples=1,this._attachments=null,this._generateStencilBuffer=!1,this._generateDepthBuffer=!1,this._depthStencilTextureWithStencil=!1,this._isMulti=e,this._isCube=t,this._size=r,this._engine=i,this._depthStencilTexture=null}setTextures(e){Array.isArray(e)?this._textures=e:e?this._textures=[e]:this._textures=null}setTexture(e,t=0,r=!0){this._textures||(this._textures=[]),this._textures[t]&&r&&this._textures[t].dispose(),this._textures[t]=e}setLayerAndFaceIndices(e,t){this._layerIndices=e,this._faceIndices=t}setLayerAndFaceIndex(e=0,t,r){this._layerIndices||(this._layerIndices=[]),this._faceIndices||(this._faceIndices=[]),t!==void 0&&t>=0&&(this._layerIndices[e]=t),r!==void 0&&r>=0&&(this._faceIndices[e]=r)}createDepthStencilTexture(e=0,t=!0,r=!1,i=1,s=14,n){var a;return(a=this._depthStencilTexture)===null||a===void 0||a.dispose(),this._depthStencilTextureWithStencil=r,this._depthStencilTexture=this._engine.createDepthStencilTexture(this._size,{bilinearFiltering:t,comparisonFunction:e,generateStencil:r,isCube:this._isCube,samples:i,depthTextureFormat:s,label:n},this),this._depthStencilTexture}_shareDepth(e){this._depthStencilTexture&&(e._depthStencilTexture&&e._depthStencilTexture.dispose(),e._depthStencilTexture=this._depthStencilTexture,this._depthStencilTexture.incrementReferences())}_swapAndDie(e){this.texture&&this.texture._swapAndDie(e),this._textures=null,this.dispose(!0)}_cloneRenderTargetWrapper(){var e,t,r,i,s,n,a,h;let o=null;if(this._isMulti){const l=this.textures;if(l&&l.length>0){let u=!1,d=l.length;const c=l[l.length-1]._source;(c===G.Depth||c===G.DepthStencil)&&(u=!0,d--);const g=[],p=[],_=[],m=[],v=[],C=[],E=[],F={};for(let A=0;A<d;++A){const P=l[A];g.push(P.samplingMode),p.push(P.type),_.push(P.format),F[P.uniqueId]!==void 0?(m.push(-1),E.push(0)):(F[P.uniqueId]=A,P.is2DArray?(m.push(35866),E.push(P.depth)):P.isCube?(m.push(34067),E.push(0)):P.is3D?(m.push(32879),E.push(P.depth)):(m.push(3553),E.push(0))),this._faceIndices&&v.push((e=this._faceIndices[A])!==null&&e!==void 0?e:0),this._layerIndices&&C.push((t=this._layerIndices[A])!==null&&t!==void 0?t:0)}const I={samplingModes:g,generateMipMaps:l[0].generateMipMaps,generateDepthBuffer:this._generateDepthBuffer,generateStencilBuffer:this._generateStencilBuffer,generateDepthTexture:u,types:p,formats:_,textureCount:d,targetTypes:m,faceIndex:v,layerIndex:C,layerCounts:E},k={width:this.width,height:this.height};o=this._engine.createMultipleRenderTarget(k,I);for(let A=0;A<d;++A){if(m[A]!==-1)continue;const P=F[l[A].uniqueId];o.setTexture(o.textures[P],A)}}}else{const l={};if(l.generateDepthBuffer=this._generateDepthBuffer,l.generateMipMaps=(i=(r=this.texture)===null||r===void 0?void 0:r.generateMipMaps)!==null&&i!==void 0?i:!1,l.generateStencilBuffer=this._generateStencilBuffer,l.samplingMode=(s=this.texture)===null||s===void 0?void 0:s.samplingMode,l.type=(n=this.texture)===null||n===void 0?void 0:n.type,l.format=(a=this.texture)===null||a===void 0?void 0:a.format,this.isCube)o=this._engine.createRenderTargetCubeTexture(this.width,l);else{const u={width:this.width,height:this.height,layers:this.is2DArray?(h=this.texture)===null||h===void 0?void 0:h.depth:void 0};o=this._engine.createRenderTargetTexture(u,l)}o.texture.isReady=!0}return o}_swapRenderTargetWrapper(e){if(this._textures&&e._textures)for(let t=0;t<this._textures.length;++t)this._textures[t]._swapAndDie(e._textures[t],!1),e._textures[t].isReady=!0;this._depthStencilTexture&&e._depthStencilTexture&&(this._depthStencilTexture._swapAndDie(e._depthStencilTexture),e._depthStencilTexture.isReady=!0),this._textures=null,this._depthStencilTexture=null}_rebuild(){const e=this._cloneRenderTargetWrapper();if(e){if(this._depthStencilTexture){const t=this._depthStencilTexture.samplingMode,r=t===2||t===3||t===11;e.createDepthStencilTexture(this._depthStencilTexture._comparisonFunction,r,this._depthStencilTextureWithStencil,this._depthStencilTexture.samples)}this.samples>1&&e.setSamples(this.samples),e._swapRenderTargetWrapper(this),e.dispose()}}releaseTextures(){var e,t;if(this._textures)for(let r=0;(t=r<((e=this._textures)===null||e===void 0?void 0:e.length))!==null&&t!==void 0&&t;++r)this._textures[r].dispose();this._textures=null}dispose(e=!1){var t;e||((t=this._depthStencilTexture)===null||t===void 0||t.dispose(),this._depthStencilTexture=null,this.releaseTextures()),this._engine._releaseRenderTargetWrapper(this)}}class Ee extends Ce{constructor(e,t,r,i,s){super(e,t,r,i),this._framebuffer=null,this._depthStencilBuffer=null,this._MSAAFramebuffer=null,this._colorTextureArray=null,this._depthStencilTextureArray=null,this._disposeOnlyFramebuffers=!1,this._context=s}_cloneRenderTargetWrapper(){let e=null;return this._colorTextureArray&&this._depthStencilTextureArray?(e=this._engine.createMultiviewRenderTargetTexture(this.width,this.height),e.texture.isReady=!0):e=super._cloneRenderTargetWrapper(),e}_swapRenderTargetWrapper(e){super._swapRenderTargetWrapper(e),e._framebuffer=this._framebuffer,e._depthStencilBuffer=this._depthStencilBuffer,e._MSAAFramebuffer=this._MSAAFramebuffer,e._colorTextureArray=this._colorTextureArray,e._depthStencilTextureArray=this._depthStencilTextureArray,this._framebuffer=this._depthStencilBuffer=this._MSAAFramebuffer=this._colorTextureArray=this._depthStencilTextureArray=null}_shareDepth(e){super._shareDepth(e);const t=this._context,r=this._depthStencilBuffer,i=e._MSAAFramebuffer||e._framebuffer;e._depthStencilBuffer&&t.deleteRenderbuffer(e._depthStencilBuffer),e._depthStencilBuffer=this._depthStencilBuffer,this._engine._bindUnboundFramebuffer(i),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,r),this._engine._bindUnboundFramebuffer(null)}_bindTextureRenderTarget(e,t=0,r,i=0){var s,n,a,h;if(!e._hardwareTexture)return;const o=this._framebuffer,l=this._engine._currentFramebuffer;if(this._engine._bindUnboundFramebuffer(o),this._engine.webGLVersion>1){const u=this._context,d=u["COLOR_ATTACHMENT"+t];e.is2DArray||e.is3D?(r=(n=r??((s=this.layerIndices)===null||s===void 0?void 0:s[t]))!==null&&n!==void 0?n:0,u.framebufferTextureLayer(u.FRAMEBUFFER,d,e._hardwareTexture.underlyingResource,i,r)):e.isCube?(r=(h=r??((a=this.faceIndices)===null||a===void 0?void 0:a[t]))!==null&&h!==void 0?h:0,u.framebufferTexture2D(u.FRAMEBUFFER,d,u.TEXTURE_CUBE_MAP_POSITIVE_X+r,e._hardwareTexture.underlyingResource,i)):u.framebufferTexture2D(u.FRAMEBUFFER,d,u.TEXTURE_2D,e._hardwareTexture.underlyingResource,i)}else{const u=this._context,d=u["COLOR_ATTACHMENT"+t+"_WEBGL"],c=r!==void 0?u.TEXTURE_CUBE_MAP_POSITIVE_X+r:u.TEXTURE_2D;u.framebufferTexture2D(u.FRAMEBUFFER,d,c,e._hardwareTexture.underlyingResource,i)}this._engine._bindUnboundFramebuffer(l)}setTexture(e,t=0,r=!0){super.setTexture(e,t,r),this._bindTextureRenderTarget(e,t)}setLayerAndFaceIndices(e,t){var r,i;if(super.setLayerAndFaceIndices(e,t),!this.textures||!this.layerIndices||!this.faceIndices)return;const s=(i=(r=this._attachments)===null||r===void 0?void 0:r.length)!==null&&i!==void 0?i:this.textures.length;for(let n=0;n<s;n++){const a=this.textures[n];a&&(a.is2DArray||a.is3D?this._bindTextureRenderTarget(a,n,this.layerIndices[n]):a.isCube?this._bindTextureRenderTarget(a,n,this.faceIndices[n]):this._bindTextureRenderTarget(a,n))}}setLayerAndFaceIndex(e=0,t,r){if(super.setLayerAndFaceIndex(e,t,r),!this.textures||!this.layerIndices||!this.faceIndices)return;const i=this.textures[e];i.is2DArray||i.is3D?this._bindTextureRenderTarget(this.textures[e],e,this.layerIndices[e]):i.isCube&&this._bindTextureRenderTarget(this.textures[e],e,this.faceIndices[e])}dispose(e=this._disposeOnlyFramebuffers){const t=this._context;e||(this._colorTextureArray&&(this._context.deleteTexture(this._colorTextureArray),this._colorTextureArray=null),this._depthStencilTextureArray&&(this._context.deleteTexture(this._depthStencilTextureArray),this._depthStencilTextureArray=null)),this._framebuffer&&(t.deleteFramebuffer(this._framebuffer),this._framebuffer=null),this._depthStencilBuffer&&(t.deleteRenderbuffer(this._depthStencilBuffer),this._depthStencilBuffer=null),this._MSAAFramebuffer&&(t.deleteFramebuffer(this._MSAAFramebuffer),this._MSAAFramebuffer=null),super.dispose(e)}}z.prototype._createHardwareRenderTargetWrapper=function(f,e,t){const r=new Ee(f,e,t,this,this._gl);return this._renderTargetWrapperCache.push(r),r};z.prototype.createRenderTargetTexture=function(f,e){var t,r;const i=this._createHardwareRenderTargetWrapper(!1,!1,f);let s=!0,n=!1,a=!1,h,o=1;e!==void 0&&typeof e=="object"&&(s=(t=e.generateDepthBuffer)!==null&&t!==void 0?t:!0,n=!!e.generateStencilBuffer,a=!!e.noColorAttachment,h=e.colorAttachment,o=(r=e.samples)!==null&&r!==void 0?r:1);const l=h||(a?null:this._createInternalTexture(f,e,!0,G.RenderTarget)),u=f.width||f,d=f.height||f,c=this._currentFramebuffer,g=this._gl,p=g.createFramebuffer();return this._bindUnboundFramebuffer(p),i._depthStencilBuffer=this._setupFramebufferDepthAttachments(n,s,u,d),l&&!l.is2DArray&&g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,g.TEXTURE_2D,l._hardwareTexture.underlyingResource,0),this._bindUnboundFramebuffer(c),i._framebuffer=p,i._generateDepthBuffer=s,i._generateStencilBuffer=n,i.setTextures(l),this.updateRenderTargetTextureSampleCount(i,o),i};z.prototype.createDepthStencilTexture=function(f,e,t){if(e.isCube){const r=f.width||f;return this._createDepthStencilCubeTexture(r,e,t)}else return this._createDepthStencilTexture(f,e,t)};z.prototype._createDepthStencilTexture=function(f,e,t){const r=this._gl,i=f.layers||0,s=i!==0?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D,n=new re(this,G.DepthStencil);if(!this._caps.depthTextureExtension)return Z.Error("Depth texture is not supported by your browser or hardware."),n;const a=Object.assign({bilinearFiltering:!1,comparisonFunction:0,generateStencil:!1},e);if(this._bindTextureDirectly(s,n,!0),this._setupDepthStencilTexture(n,f,a.generateStencil,a.comparisonFunction===0?!1:a.bilinearFiltering,a.comparisonFunction,a.samples),a.depthTextureFormat!==void 0){if(a.depthTextureFormat!==15&&a.depthTextureFormat!==16&&a.depthTextureFormat!==17&&a.depthTextureFormat!==13&&a.depthTextureFormat!==14&&a.depthTextureFormat!==18)return Z.Error("Depth texture format is not supported."),n;n.format=a.depthTextureFormat}else n.format=a.generateStencil?13:16;const h=n.format===17||n.format===13||n.format===18;t._depthStencilTexture=n,t._depthStencilTextureWithStencil=h;let o=r.UNSIGNED_INT;n.format===15?o=r.UNSIGNED_SHORT:n.format===17||n.format===13?o=r.UNSIGNED_INT_24_8:n.format===14?o=r.FLOAT:n.format===18&&(o=r.FLOAT_32_UNSIGNED_INT_24_8_REV);const l=h?r.DEPTH_STENCIL:r.DEPTH_COMPONENT;let u=l;this.webGLVersion>1&&(n.format===15?u=r.DEPTH_COMPONENT16:n.format===16?u=r.DEPTH_COMPONENT24:n.format===17||n.format===13?u=r.DEPTH24_STENCIL8:n.format===14?u=r.DEPTH_COMPONENT32F:n.format===18&&(u=r.DEPTH32F_STENCIL8)),n.is2DArray?r.texImage3D(s,0,u,n.width,n.height,i,0,l,o,null):r.texImage2D(s,0,u,n.width,n.height,0,l,o,null),this._bindTextureDirectly(s,null),this._internalTexturesCache.push(n);const d=t;if(d._depthStencilBuffer){const c=this._currentFramebuffer;this._bindUnboundFramebuffer(d._framebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,null),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,null),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.STENCIL_ATTACHMENT,r.RENDERBUFFER,null),this._bindUnboundFramebuffer(c),r.deleteRenderbuffer(d._depthStencilBuffer),d._depthStencilBuffer=null}return n};z.prototype.updateRenderTargetTextureSampleCount=function(f,e){if(this.webGLVersion<2||!f||!f.texture)return 1;if(f.samples===e)return e;const t=this._gl;e=Math.min(e,this.getCaps().maxMSAASamples),f._depthStencilBuffer&&(t.deleteRenderbuffer(f._depthStencilBuffer),f._depthStencilBuffer=null),f._MSAAFramebuffer&&(t.deleteFramebuffer(f._MSAAFramebuffer),f._MSAAFramebuffer=null);const r=f.texture._hardwareTexture;if(r.releaseMSAARenderBuffers(),e>1&&typeof t.renderbufferStorageMultisample=="function"){const i=t.createFramebuffer();if(!i)throw new Error("Unable to create multi sampled framebuffer");f._MSAAFramebuffer=i,this._bindUnboundFramebuffer(f._MSAAFramebuffer);const s=this._createRenderBuffer(f.texture.width,f.texture.height,e,-1,this._getRGBAMultiSampleBufferFormat(f.texture.type),t.COLOR_ATTACHMENT0,!1);if(!s)throw new Error("Unable to create multi sampled framebuffer");r.addMSAARenderBuffer(s)}else this._bindUnboundFramebuffer(f._framebuffer);return f.texture.samples=e,f._samples=e,f._depthStencilBuffer=this._setupFramebufferDepthAttachments(f._generateStencilBuffer,f._generateDepthBuffer,f.texture.width,f.texture.height,e),this._bindUnboundFramebuffer(null),e};class x{static RegisterShaderCodeProcessing(e,t){if(!t){delete x._CustomShaderCodeProcessing[e??""];return}x._CustomShaderCodeProcessing[e??""]=t}static _GetShaderCodeProcessing(e){var t;return(t=x._CustomShaderCodeProcessing[e])!==null&&t!==void 0?t:x._CustomShaderCodeProcessing[""]}get samples(){return this._samples}set samples(e){this._samples=Math.min(e,this._engine.getCaps().maxMSAASamples),this._textures.forEach(t=>{t.setSamples(this._samples)})}getEffectName(){return this._fragmentUrl}set onActivate(e){this._onActivateObserver&&this.onActivateObservable.remove(this._onActivateObserver),e&&(this._onActivateObserver=this.onActivateObservable.add(e))}set onSizeChanged(e){this._onSizeChangedObserver&&this.onSizeChangedObservable.remove(this._onSizeChangedObserver),this._onSizeChangedObserver=this.onSizeChangedObservable.add(e)}set onApply(e){this._onApplyObserver&&this.onApplyObservable.remove(this._onApplyObserver),this._onApplyObserver=this.onApplyObservable.add(e)}set onBeforeRender(e){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(e)}set onAfterRender(e){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(e)}get inputTexture(){return this._textures.data[this._currentRenderTextureInd]}set inputTexture(e){this._forcedOutputTexture=e}restoreDefaultInputTexture(){this._forcedOutputTexture&&(this._forcedOutputTexture=null,this.markTextureDirty())}getCamera(){return this._camera}get texelSize(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.texelSize:(this._forcedOutputTexture&&this._texelSize.copyFromFloats(1/this._forcedOutputTexture.width,1/this._forcedOutputTexture.height),this._texelSize)}constructor(e,t,r,i,s,n,a=1,h,o,l=null,u=0,d="postprocess",c,g=!1,p=5,_=ce.GLSL){this._parentContainer=null,this.width=-1,this.height=-1,this.nodeMaterialSource=null,this._outputTexture=null,this.autoClear=!0,this.forceAutoClearInAlphaMode=!1,this.alphaMode=0,this.animations=new Array,this.enablePixelPerfectMode=!1,this.forceFullscreenViewport=!0,this.scaleMode=1,this.alwaysForcePOT=!1,this._samples=1,this.adaptScaleToCurrentViewport=!1,this._reusable=!1,this._renderId=0,this.externalTextureSamplerBinding=!1,this._textures=new Q(2),this._textureCache=[],this._currentRenderTextureInd=0,this._scaleRatio=new J(1,1),this._texelSize=J.Zero(),this.onActivateObservable=new D,this.onSizeChangedObservable=new D,this.onApplyObservable=new D,this.onBeforeRenderObservable=new D,this.onAfterRenderObservable=new D,this.name=e,n!=null?(this._camera=n,this._scene=n.getScene(),n.attachPostProcess(this),this._engine=this._scene.getEngine(),this._scene.postProcesses.push(this),this.uniqueId=this._scene.getUniqueId()):h&&(this._engine=h,this._engine.postProcesses.push(this)),this._options=s,this.renderTargetSamplingMode=a||1,this._reusable=o||!1,this._textureType=u,this._textureFormat=p,this._shaderLanguage=_,this._samplers=i||[],this._samplers.push("textureSampler"),this._fragmentUrl=t,this._vertexUrl=d,this._parameters=r||[],this._parameters.push("scale"),this._indexParameters=c,this._drawWrapper=new ie(this._engine),g||this.updateEffect(l)}getClassName(){return"PostProcess"}getEngine(){return this._engine}getEffect(){return this._drawWrapper.effect}shareOutputWith(e){return this._disposeTextures(),this._shareOutputWithPostProcess=e,this}useOwnOutput(){this._textures.length==0&&(this._textures=new Q(2)),this._shareOutputWithPostProcess=null}updateEffect(e=null,t=null,r=null,i,s,n,a,h){var o,l;const u=x._GetShaderCodeProcessing(this.name);if(u!=null&&u.defineCustomBindings){const d=(o=t==null?void 0:t.slice())!==null&&o!==void 0?o:[];d.push(...this._parameters);const c=(l=r==null?void 0:r.slice())!==null&&l!==void 0?l:[];c.push(...this._samplers),e=u.defineCustomBindings(this.name,e,d,c),t=d,r=c}this._postProcessDefines=e,this._drawWrapper.effect=this._engine.createEffect({vertex:a??this._vertexUrl,fragment:h??this._fragmentUrl},{attributes:["position"],uniformsNames:t||this._parameters,uniformBuffersNames:[],samplers:r||this._samplers,defines:e!==null?e:"",fallbacks:null,onCompiled:s??null,onError:n??null,indexParameters:i||this._indexParameters,processCodeAfterIncludes:u!=null&&u.processCodeAfterIncludes?(d,c)=>u.processCodeAfterIncludes(this.name,d,c):null,processFinalCode:u!=null&&u.processFinalCode?(d,c)=>u.processFinalCode(this.name,d,c):null,shaderLanguage:this._shaderLanguage},this._engine)}isReusable(){return this._reusable}markTextureDirty(){this.width=-1}_createRenderTargetTexture(e,t,r=0){for(let s=0;s<this._textureCache.length;s++)if(this._textureCache[s].texture.width===e.width&&this._textureCache[s].texture.height===e.height&&this._textureCache[s].postProcessChannel===r&&this._textureCache[s].texture._generateDepthBuffer===t.generateDepthBuffer&&this._textureCache[s].texture.samples===t.samples)return this._textureCache[s].texture;const i=this._engine.createRenderTargetTexture(e,t);return this._textureCache.push({texture:i,postProcessChannel:r,lastUsedRenderId:-1}),i}_flushTextureCache(){const e=this._renderId;for(let t=this._textureCache.length-1;t>=0;t--)if(e-this._textureCache[t].lastUsedRenderId>100){let r=!1;for(let i=0;i<this._textures.length;i++)if(this._textures.data[i]===this._textureCache[t].texture){r=!0;break}r||(this._textureCache[t].texture.dispose(),this._textureCache.splice(t,1))}}_resize(e,t,r,i,s){this._textures.length>0&&this._textures.reset(),this.width=e,this.height=t;let n=null;for(let o=0;o<r._postProcesses.length;o++)if(r._postProcesses[o]!==null){n=r._postProcesses[o];break}const a={width:this.width,height:this.height},h={generateMipMaps:i,generateDepthBuffer:s||n===this,generateStencilBuffer:(s||n===this)&&this._engine.isStencilEnable,samplingMode:this.renderTargetSamplingMode,type:this._textureType,format:this._textureFormat,samples:this._samples,label:"PostProcessRTT-"+this.name};this._textures.push(this._createRenderTargetTexture(a,h,0)),this._reusable&&this._textures.push(this._createRenderTargetTexture(a,h,1)),this._texelSize.copyFromFloats(1/this.width,1/this.height),this.onSizeChangedObservable.notifyObservers(this)}activate(e,t=null,r){var i,s;e=e||this._camera;const n=e.getScene(),a=n.getEngine(),h=a.getCaps().maxTextureSize;let o=(t?t.width:this._engine.getRenderWidth(!0))*this._options|0;const l=(t?t.height:this._engine.getRenderHeight(!0))*this._options|0,u=e.parent;u&&(u.leftCamera==e||u.rightCamera==e)&&(o/=2);let d=this._options.width||o,c=this._options.height||l;const g=this.renderTargetSamplingMode!==7&&this.renderTargetSamplingMode!==1&&this.renderTargetSamplingMode!==2;if(!this._shareOutputWithPostProcess&&!this._forcedOutputTexture){if(this.adaptScaleToCurrentViewport){const _=a.currentViewport;_&&(d*=_.width,c*=_.height)}(g||this.alwaysForcePOT)&&(this._options.width||(d=a.needPOTTextures?X.GetExponentOfTwo(d,h,this.scaleMode):d),this._options.height||(c=a.needPOTTextures?X.GetExponentOfTwo(c,h,this.scaleMode):c)),(this.width!==d||this.height!==c)&&this._resize(d,c,e,g,r),this._textures.forEach(_=>{_.samples!==this.samples&&this._engine.updateRenderTargetTextureSampleCount(_,this.samples)}),this._flushTextureCache(),this._renderId++}let p;if(this._shareOutputWithPostProcess)p=this._shareOutputWithPostProcess.inputTexture;else if(this._forcedOutputTexture)p=this._forcedOutputTexture,this.width=this._forcedOutputTexture.width,this.height=this._forcedOutputTexture.height;else{p=this.inputTexture;let _;for(let m=0;m<this._textureCache.length;m++)if(this._textureCache[m].texture===p){_=this._textureCache[m];break}_&&(_.lastUsedRenderId=this._renderId)}return this.enablePixelPerfectMode?(this._scaleRatio.copyFromFloats(o/d,l/c),this._engine.bindFramebuffer(p,0,o,l,this.forceFullscreenViewport)):(this._scaleRatio.copyFromFloats(1,1),this._engine.bindFramebuffer(p,0,void 0,void 0,this.forceFullscreenViewport)),(s=(i=this._engine)._debugInsertMarker)===null||s===void 0||s.call(i,`post process ${this.name} input`),this.onActivateObservable.notifyObservers(e),this.autoClear&&(this.alphaMode===0||this.forceAutoClearInAlphaMode)&&this._engine.clear(this.clearColor?this.clearColor:n.clearColor,n._allowPostProcessClearColor,!0,!0),this._reusable&&(this._currentRenderTextureInd=(this._currentRenderTextureInd+1)%2),p}get isSupported(){return this._drawWrapper.effect.isSupported}get aspectRatio(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.aspectRatio:this._forcedOutputTexture?this._forcedOutputTexture.width/this._forcedOutputTexture.height:this.width/this.height}isReady(){var e,t;return(t=(e=this._drawWrapper.effect)===null||e===void 0?void 0:e.isReady())!==null&&t!==void 0?t:!1}apply(){var e,t,r;if(!(!((e=this._drawWrapper.effect)===null||e===void 0)&&e.isReady()))return null;this._engine.enableEffect(this._drawWrapper),this._engine.setState(!1),this._engine.setDepthBuffer(!1),this._engine.setDepthWrite(!1),this._engine.setAlphaMode(this.alphaMode),this.alphaConstants&&this.getEngine().setAlphaConstants(this.alphaConstants.r,this.alphaConstants.g,this.alphaConstants.b,this.alphaConstants.a);let i;return this._shareOutputWithPostProcess?i=this._shareOutputWithPostProcess.inputTexture:this._forcedOutputTexture?i=this._forcedOutputTexture:i=this.inputTexture,this.externalTextureSamplerBinding||this._drawWrapper.effect._bindTexture("textureSampler",i==null?void 0:i.texture),this._drawWrapper.effect.setVector2("scale",this._scaleRatio),this.onApplyObservable.notifyObservers(this._drawWrapper.effect),(r=(t=x._GetShaderCodeProcessing(this.name))===null||t===void 0?void 0:t.bindCustomBindings)===null||r===void 0||r.call(t,this.name,this._drawWrapper.effect),this._drawWrapper.effect}_disposeTextures(){if(this._shareOutputWithPostProcess||this._forcedOutputTexture){this._disposeTextureCache();return}this._disposeTextureCache(),this._textures.dispose()}_disposeTextureCache(){for(let e=this._textureCache.length-1;e>=0;e--)this._textureCache[e].texture.dispose();this._textureCache.length=0}setPrePassRenderer(e){return this._prePassEffectConfiguration?(this._prePassEffectConfiguration=e.addEffectConfiguration(this._prePassEffectConfiguration),this._prePassEffectConfiguration.enabled=!0,!0):!1}dispose(e){e=e||this._camera,this._disposeTextures();let t;if(this._scene&&(t=this._scene.postProcesses.indexOf(this),t!==-1&&this._scene.postProcesses.splice(t,1)),this._parentContainer){const r=this._parentContainer.postProcesses.indexOf(this);r>-1&&this._parentContainer.postProcesses.splice(r,1),this._parentContainer=null}if(t=this._engine.postProcesses.indexOf(this),t!==-1&&this._engine.postProcesses.splice(t,1),!!e){if(e.detachPostProcess(this),t=e._postProcesses.indexOf(this),t===0&&e._postProcesses.length>0){const r=this._camera._getFirstPostProcess();r&&r.markTextureDirty()}this.onActivateObservable.clear(),this.onAfterRenderObservable.clear(),this.onApplyObservable.clear(),this.onBeforeRenderObservable.clear(),this.onSizeChangedObservable.clear()}}serialize(){const e=q.Serialize(this),t=this.getCamera()||this._scene&&this._scene.activeCamera;return e.customType="BABYLON."+this.getClassName(),e.cameraId=t?t.id:null,e.reusable=this._reusable,e.textureType=this._textureType,e.fragmentUrl=this._fragmentUrl,e.parameters=this._parameters,e.samplers=this._samplers,e.options=this._options,e.defines=this._postProcessDefines,e.textureFormat=this._textureFormat,e.vertexUrl=this._vertexUrl,e.indexParameters=this._indexParameters,e}clone(){const e=this.serialize();e._engine=this._engine,e.cameraId=null;const t=x.Parse(e,this._scene,"");return t?(t.onActivateObservable=this.onActivateObservable.clone(),t.onSizeChangedObservable=this.onSizeChangedObservable.clone(),t.onApplyObservable=this.onApplyObservable.clone(),t.onBeforeRenderObservable=this.onBeforeRenderObservable.clone(),t.onAfterRenderObservable=this.onAfterRenderObservable.clone(),t._prePassEffectConfiguration=this._prePassEffectConfiguration,t):null}static Parse(e,t,r){const i=_e(e.customType);if(!i||!i._Parse)return null;const s=t?t.getCameraById(e.cameraId):null;return i._Parse(e,s,t,r)}static _Parse(e,t,r,i){return q.Parse(()=>new x(e.name,e.fragmentUrl,e.parameters,e.samplers,e.options,t,e.renderTargetSamplingMode,e._engine,e.reusable,e.defines,e.textureType,e.vertexUrl,e.indexParameters,!1,e.textureFormat),e,r,i)}}x._CustomShaderCodeProcessing={};S([y()],x.prototype,"uniqueId",void 0);S([y()],x.prototype,"name",void 0);S([y()],x.prototype,"width",void 0);S([y()],x.prototype,"height",void 0);S([y()],x.prototype,"renderTargetSamplingMode",void 0);S([fe()],x.prototype,"clearColor",void 0);S([y()],x.prototype,"autoClear",void 0);S([y()],x.prototype,"forceAutoClearInAlphaMode",void 0);S([y()],x.prototype,"alphaMode",void 0);S([y()],x.prototype,"alphaConstants",void 0);S([y()],x.prototype,"enablePixelPerfectMode",void 0);S([y()],x.prototype,"forceFullscreenViewport",void 0);S([y()],x.prototype,"scaleMode",void 0);S([y()],x.prototype,"alwaysForcePOT",void 0);S([y("samples")],x.prototype,"_samples",void 0);S([y()],x.prototype,"adaptScaleToCurrentViewport",void 0);se("BABYLON.PostProcess",x);z.prototype.createRenderTargetCubeTexture=function(f,e){const t=this._createHardwareRenderTargetWrapper(!1,!0,f),r=Object.assign({generateMipMaps:!0,generateDepthBuffer:!0,generateStencilBuffer:!1,type:0,samplingMode:3,format:5},e);r.generateStencilBuffer=r.generateDepthBuffer&&r.generateStencilBuffer,(r.type===1&&!this._caps.textureFloatLinearFiltering||r.type===2&&!this._caps.textureHalfFloatLinearFiltering)&&(r.samplingMode=1);const i=this._gl,s=new re(this,G.RenderTarget);this._bindTextureDirectly(i.TEXTURE_CUBE_MAP,s,!0);const n=this._getSamplingParameters(r.samplingMode,r.generateMipMaps);r.type===1&&!this._caps.textureFloat&&(r.type=0,Z.Warn("Float textures are not supported. Cube render target forced to TEXTURETYPE_UNESIGNED_BYTE type")),i.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_MAG_FILTER,n.mag),i.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_MIN_FILTER,n.min),i.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);for(let h=0;h<6;h++)i.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+h,0,this._getRGBABufferInternalSizedFormat(r.type,r.format),f,f,0,this._getInternalFormat(r.format),this._getWebGLTextureType(r.type),null);const a=i.createFramebuffer();return this._bindUnboundFramebuffer(a),t._depthStencilBuffer=this._setupFramebufferDepthAttachments(r.generateStencilBuffer,r.generateDepthBuffer,f,f),r.generateMipMaps&&i.generateMipmap(i.TEXTURE_CUBE_MAP),this._bindTextureDirectly(i.TEXTURE_CUBE_MAP,null),this._bindUnboundFramebuffer(null),t._framebuffer=a,t._generateDepthBuffer=r.generateDepthBuffer,t._generateStencilBuffer=r.generateStencilBuffer,s.width=f,s.height=f,s.isReady=!0,s.isCube=!0,s.samples=1,s.generateMipMaps=r.generateMipMaps,s.samplingMode=r.samplingMode,s.type=r.type,s.format=r.format,this._internalTexturesCache.push(s),t.setTextures(s),t};const j={positions:[1,1,-1,1,-1,-1,1,-1],indices:[0,1,2,0,2,3]};class Me{constructor(e,t=j){var r,i;this._fullscreenViewport=new pe(0,0,1,1);const s=(r=t.positions)!==null&&r!==void 0?r:j.positions,n=(i=t.indices)!==null&&i!==void 0?i:j.indices;this.engine=e,this._vertexBuffers={[W.PositionKind]:new W(e,s,W.PositionKind,!1,!1,2)},this._indexBuffer=e.createIndexBuffer(n),this._onContextRestoredObserver=e.onContextRestoredObservable.add(()=>{this._indexBuffer=e.createIndexBuffer(n);for(const a in this._vertexBuffers)this._vertexBuffers[a]._rebuild()})}setViewport(e=this._fullscreenViewport){this.engine.setViewport(e)}bindBuffers(e){this.engine.bindBuffers(this._vertexBuffers,this._indexBuffer,e)}applyEffectWrapper(e){this.engine.setState(!0),this.engine.depthCullingState.depthTest=!1,this.engine.stencilState.stencilTest=!1,this.engine.enableEffect(e._drawWrapper),this.bindBuffers(e.effect),e.onApplyObservable.notifyObservers({})}restoreStates(){this.engine.depthCullingState.depthTest=!0,this.engine.stencilState.stencilTest=!0}draw(){this.engine.drawElementsType(0,0,6)}_isRenderTargetTexture(e){return e.renderTarget!==void 0}render(e,t=null){if(!e.effect.isReady())return;this.setViewport();const r=t===null?null:this._isRenderTargetTexture(t)?t.renderTarget:t;r&&this.engine.bindFramebuffer(r),this.applyEffectWrapper(e),this.draw(),r&&this.engine.unBindFramebuffer(r),this.restoreStates()}dispose(){const e=this._vertexBuffers[W.PositionKind];e&&(e.dispose(),delete this._vertexBuffers[W.PositionKind]),this._indexBuffer&&this.engine._releaseBuffer(this._indexBuffer),this._onContextRestoredObserver&&(this.engine.onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null)}}class ye{get effect(){return this._drawWrapper.effect}set effect(e){this._drawWrapper.effect=e}constructor(e){this.onApplyObservable=new D;let t;const r=e.uniformNames||[];e.vertexShader?t={fragmentSource:e.fragmentShader,vertexSource:e.vertexShader,spectorName:e.name||"effectWrapper"}:(r.push("scale"),t={fragmentSource:e.fragmentShader,vertex:"postprocess",spectorName:e.name||"effectWrapper"},this.onApplyObservable.add(()=>{this.effect.setFloat2("scale",1,1)}));const i=e.defines?e.defines.join(`
`):"";this._drawWrapper=new ie(e.engine),e.useShaderStore?(t.fragment=t.fragmentSource,t.vertex||(t.vertex=t.vertexSource),delete t.fragmentSource,delete t.vertexSource,this.effect=e.engine.createEffect(t,e.attributeNames||["position"],r,e.samplerNames,i,void 0,e.onCompiled,void 0,void 0,e.shaderLanguage)):(this.effect=new ge(t,e.attributeNames||["position"],r,e.samplerNames,e.engine,i,void 0,e.onCompiled,void 0,void 0,void 0,e.shaderLanguage),this._onContextRestoredObserver=e.engine.onContextRestoredObservable.add(()=>{this.effect._pipelineContext=null,this.effect._wasPreviouslyReady=!1,this.effect._prepareEffect()}))}dispose(){this._onContextRestoredObserver&&(this.effect.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null),this.effect.dispose()}}const ne="passPixelShader",ae=`varying vec2 vUV;
uniform sampler2D textureSampler;
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void) 
{
gl_FragColor=texture2D(textureSampler,vUV);
}`;N.ShadersStore[ne]=ae;const ee={name:ne,shader:ae};class O{static _CreateDumpRenderer(){if(!O._DumpToolsEngine){const e=new OffscreenCanvas(100,100),t=new z(e,!1,{preserveDrawingBuffer:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1});t.getCaps().parallelShaderCompile=void 0;const r=new Me(t),i=new ye({engine:t,name:ee.name,fragmentShader:ee.shader,samplerNames:["textureSampler"]});O._DumpToolsEngine={canvas:e,engine:t,renderer:r,wrapper:i}}return O._DumpToolsEngine}static async DumpFramebuffer(e,t,r,i,s="image/png",n,a){const h=await r.readPixels(0,0,e,t),o=new Uint8Array(h.buffer);O.DumpData(e,t,o,i,s,n,!0,void 0,a)}static DumpDataAsync(e,t,r,i="image/png",s,n=!1,a=!1,h){return new Promise(o=>{O.DumpData(e,t,r,l=>o(l),i,s,n,a,h)})}static DumpData(e,t,r,i,s="image/png",n,a=!1,h=!1,o){const l=O._CreateDumpRenderer();if(l.engine.setSize(e,t,!0),r instanceof Float32Array){const d=new Uint8Array(r.length);let c=r.length;for(;c--;){const g=r[c];d[c]=Math.round(me.Clamp(g)*255)}r=d}const u=l.engine.createRawTexture(r,e,t,5,!1,!a,1);l.renderer.setViewport(),l.renderer.applyEffectWrapper(l.wrapper),l.wrapper.effect._bindTexture("textureSampler",u),l.renderer.draw(),h?H.ToBlob(l.canvas,d=>{const c=new FileReader;c.onload=g=>{const p=g.target.result;i&&i(p)},c.readAsArrayBuffer(d)},s,o):H.EncodeScreenshotCanvasData(l.canvas,i,s,n,o),u.dispose()}static Dispose(){O._DumpToolsEngine&&(O._DumpToolsEngine.wrapper.dispose(),O._DumpToolsEngine.renderer.dispose(),O._DumpToolsEngine.engine.dispose()),O._DumpToolsEngine=null}}const Ae=()=>{H.DumpData=O.DumpData,H.DumpDataAsync=O.DumpDataAsync,H.DumpFramebuffer=O.DumpFramebuffer};Ae();class U extends B{get renderList(){return this._renderList}set renderList(e){this._unObserveRenderList&&(this._unObserveRenderList(),this._unObserveRenderList=null),e&&(this._unObserveRenderList=Te(e,this._renderListHasChanged)),this._renderList=e}get postProcesses(){return this._postProcesses}get _prePassEnabled(){return!!this._prePassRenderTarget&&this._prePassRenderTarget.enabled}set onAfterUnbind(e){this._onAfterUnbindObserver&&this.onAfterUnbindObservable.remove(this._onAfterUnbindObserver),this._onAfterUnbindObserver=this.onAfterUnbindObservable.add(e)}set onBeforeRender(e){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(e)}set onAfterRender(e){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(e)}set onClear(e){this._onClearObserver&&this.onClearObservable.remove(this._onClearObserver),this._onClearObserver=this.onClearObservable.add(e)}get renderPassIds(){return this._renderPassIds}get currentRefreshId(){return this._currentRefreshId}setMaterialForRendering(e,t){let r;Array.isArray(e)?r=e:r=[e];for(let i=0;i<r.length;++i)for(let s=0;s<this._renderPassIds.length;++s)r[i].setMaterialForRenderPass(this._renderPassIds[s],t!==void 0?Array.isArray(t)?t[s]:t:void 0)}get isMulti(){var e,t;return(t=(e=this._renderTarget)===null||e===void 0?void 0:e.isMulti)!==null&&t!==void 0?t:!1}get renderTargetOptions(){return this._renderTargetOptions}get renderTarget(){return this._renderTarget}_onRatioRescale(){this._sizeRatio&&this.resize(this._initialSizeParameter)}set boundingBoxSize(e){if(this._boundingBoxSize&&this._boundingBoxSize.equals(e))return;this._boundingBoxSize=e;const t=this.getScene();t&&t.markAllMaterialsAsDirty(1)}get boundingBoxSize(){return this._boundingBoxSize}get depthStencilTexture(){var e,t;return(t=(e=this._renderTarget)===null||e===void 0?void 0:e._depthStencilTexture)!==null&&t!==void 0?t:null}constructor(e,t,r,i=!1,s=!0,n=0,a=!1,h=B.TRILINEAR_SAMPLINGMODE,o=!0,l=!1,u=!1,d=5,c=!1,g,p,_=!1,m=!1){var v,C,E,F,I,k;let A;if(typeof i=="object"){const M=i;i=!!M.generateMipMaps,s=(v=M.doNotChangeAspectRatio)!==null&&v!==void 0?v:!0,n=(C=M.type)!==null&&C!==void 0?C:0,a=!!M.isCube,h=(E=M.samplingMode)!==null&&E!==void 0?E:B.TRILINEAR_SAMPLINGMODE,o=(F=M.generateDepthBuffer)!==null&&F!==void 0?F:!0,l=!!M.generateStencilBuffer,u=!!M.isMulti,d=(I=M.format)!==null&&I!==void 0?I:5,c=!!M.delayAllocation,g=M.samples,p=M.creationFlags,_=!!M.noColorAttachment,m=!!M.useSRGBBuffer,A=M.colorAttachment}if(super(null,r,!i,void 0,h,void 0,void 0,void 0,void 0,d),this._unObserveRenderList=null,this._renderListHasChanged=(M,oe)=>{var K;const Y=this._renderList?this._renderList.length:0;(oe===0&&Y>0||Y===0)&&((K=this.getScene())===null||K===void 0||K.meshes.forEach(he=>{he._markSubMeshesAsLightDirty()}))},this.renderParticles=!0,this.renderSprites=!1,this.forceLayerMaskCheck=!1,this.ignoreCameraViewport=!1,this.onBeforeBindObservable=new D,this.onAfterUnbindObservable=new D,this.onBeforeRenderObservable=new D,this.onAfterRenderObservable=new D,this.onClearObservable=new D,this.onResizeObservable=new D,this._cleared=!1,this.skipInitialClear=!1,this._currentRefreshId=-1,this._refreshRate=1,this._samples=1,this._canRescale=!0,this._renderTarget=null,this.boundingBoxPosition=b.Zero(),r=this.getScene(),!r)return;const P=this.getScene().getEngine();this._coordinatesMode=B.PROJECTION_MODE,this.renderList=new Array,this.name=e,this.isRenderTarget=!0,this._initialSizeParameter=t,this._renderPassIds=[],this._isCubeData=a,this._processSizeParameter(t),this.renderPassId=this._renderPassIds[0],this._resizeObserver=P.onResizeObservable.add(()=>{}),this._generateMipMaps=!!i,this._doNotChangeAspectRatio=s,this._renderingManager=new be(r),this._renderingManager._useSceneAutoClearSetup=!0,!u&&(this._renderTargetOptions={generateMipMaps:i,type:n,format:(k=this._format)!==null&&k!==void 0?k:void 0,samplingMode:this.samplingMode,generateDepthBuffer:o,generateStencilBuffer:l,samples:g,creationFlags:p,noColorAttachment:_,useSRGBBuffer:m,colorAttachment:A,label:this.name},this.samplingMode===B.NEAREST_SAMPLINGMODE&&(this.wrapU=B.CLAMP_ADDRESSMODE,this.wrapV=B.CLAMP_ADDRESSMODE),c||(a?(this._renderTarget=r.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions),this.coordinatesMode=B.INVCUBIC_MODE,this._textureMatrix=L.Identity()):this._renderTarget=r.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,g!==void 0&&(this.samples=g)))}createDepthStencilTexture(e=0,t=!0,r=!1,i=1,s=14){var n;(n=this._renderTarget)===null||n===void 0||n.createDepthStencilTexture(e,t,r,i,s)}_releaseRenderPassId(){if(this._scene){const e=this._scene.getEngine();for(let t=0;t<this._renderPassIds.length;++t)e.releaseRenderPassId(this._renderPassIds[t])}this._renderPassIds=[]}_createRenderPassId(){this._releaseRenderPassId();const e=this._scene.getEngine(),t=this._isCubeData?6:this.getRenderLayers()||1;for(let r=0;r<t;++r)this._renderPassIds[r]=e.createRenderPassId(`RenderTargetTexture - ${this.name}#${r}`)}_processSizeParameter(e,t=!0){if(e.ratio){this._sizeRatio=e.ratio;const r=this._getEngine();this._size={width:this._bestReflectionRenderTargetDimension(r.getRenderWidth(),this._sizeRatio),height:this._bestReflectionRenderTargetDimension(r.getRenderHeight(),this._sizeRatio)}}else this._size=e;t&&this._createRenderPassId()}get samples(){var e,t;return(t=(e=this._renderTarget)===null||e===void 0?void 0:e.samples)!==null&&t!==void 0?t:this._samples}set samples(e){this._renderTarget&&(this._samples=this._renderTarget.setSamples(e))}resetRefreshCounter(){this._currentRefreshId=-1}get refreshRate(){return this._refreshRate}set refreshRate(e){this._refreshRate=e,this.resetRefreshCounter()}addPostProcess(e){if(!this._postProcessManager){const t=this.getScene();if(!t)return;this._postProcessManager=new xe(t),this._postProcesses=new Array}this._postProcesses.push(e),this._postProcesses[0].autoClear=!1}clearPostProcesses(e=!1){if(this._postProcesses){if(e)for(const t of this._postProcesses)t.dispose();this._postProcesses=[]}}removePostProcess(e){if(!this._postProcesses)return;const t=this._postProcesses.indexOf(e);t!==-1&&(this._postProcesses.splice(t,1),this._postProcesses.length>0&&(this._postProcesses[0].autoClear=!1))}_shouldRender(){return this._currentRefreshId===-1?(this._currentRefreshId=1,!0):this.refreshRate===this._currentRefreshId?(this._currentRefreshId=1,!0):(this._currentRefreshId++,!1)}getRenderSize(){return this.getRenderWidth()}getRenderWidth(){return this._size.width?this._size.width:this._size}getRenderHeight(){return this._size.width?this._size.height:this._size}getRenderLayers(){const e=this._size.layers;return e||0}disableRescaling(){this._canRescale=!1}get canRescale(){return this._canRescale}scale(e){const t=Math.max(1,this.getRenderSize()*e);this.resize(t)}getReflectionTextureMatrix(){return this.isCube?this._textureMatrix:super.getReflectionTextureMatrix()}resize(e){var t;const r=this.isCube;(t=this._renderTarget)===null||t===void 0||t.dispose(),this._renderTarget=null;const i=this.getScene();i&&(this._processSizeParameter(e,!1),r?this._renderTarget=i.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions):this._renderTarget=i.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,this._renderTargetOptions.samples!==void 0&&(this.samples=this._renderTargetOptions.samples),this.onResizeObservable.hasObservers()&&this.onResizeObservable.notifyObservers(this))}render(e=!1,t=!1){this._render(e,t)}isReadyForRendering(){return this._render(!1,!1,!0)}_render(e=!1,t=!1,r=!1){var i;const s=this.getScene();if(!s)return r;const n=s.getEngine();if(this.useCameraPostProcesses!==void 0&&(e=this.useCameraPostProcesses),this._waitingRenderList){this.renderList=[];for(let u=0;u<this._waitingRenderList.length;u++){const d=this._waitingRenderList[u],c=s.getMeshById(d);c&&this.renderList.push(c)}this._waitingRenderList=void 0}if(this.renderListPredicate){this.renderList?this.renderList.length=0:this.renderList=[];const u=this.getScene();if(!u)return r;const d=u.meshes;for(let c=0;c<d.length;c++){const g=d[c];this.renderListPredicate(g)&&this.renderList.push(g)}}const a=n.currentRenderPassId;this.onBeforeBindObservable.notifyObservers(this);const h=(i=this.activeCamera)!==null&&i!==void 0?i:s.activeCamera,o=s.activeCamera;h&&(h!==s.activeCamera&&(s.setTransformMatrix(h.getViewMatrix(),h.getProjectionMatrix(!0)),s.activeCamera=h),n.setViewport(h.rigParent?h.rigParent.viewport:h.viewport,this.getRenderWidth(),this.getRenderHeight())),this._defaultRenderListPrepared=!1;let l=r;if(r){s.getViewMatrix()||s.updateTransformMatrix();const u=this.is2DArray?this.getRenderLayers():this.isCube?6:1;for(let d=0;d<u&&l;d++){let c=null;const g=this.renderList?this.renderList:s.getActiveMeshes().data,p=this.renderList?this.renderList.length:s.getActiveMeshes().length;n.currentRenderPassId=this._renderPassIds[d],this.onBeforeRenderObservable.notifyObservers(d),this.getCustomRenderList&&(c=this.getCustomRenderList(d,g,p)),c||(c=g),this._doNotChangeAspectRatio||s.updateTransformMatrix(!0);for(let _=0;_<c.length&&l;++_){const m=c[_];if(!(!m.isEnabled()||m.isBlocked||!m.isVisible||!m.subMeshes)){if(this.customIsReadyFunction){if(!this.customIsReadyFunction(m,this.refreshRate,r)){l=!1;continue}}else if(!m.isReady(!0)){l=!1;continue}}}this.onAfterRenderObservable.notifyObservers(d),(this.is2DArray||this.isCube)&&(s.incrementRenderId(),s.resetCachedMaterial())}}else if(this.is2DArray&&!this.isMulti)for(let u=0;u<this.getRenderLayers();u++)this._renderToTarget(0,e,t,u,h),s.incrementRenderId(),s.resetCachedMaterial();else if(this.isCube&&!this.isMulti)for(let u=0;u<6;u++)this._renderToTarget(u,e,t,void 0,h),s.incrementRenderId(),s.resetCachedMaterial();else this._renderToTarget(0,e,t,void 0,h);return this.onAfterUnbindObservable.notifyObservers(this),n.currentRenderPassId=a,o&&(s.activeCamera=o,(s.getEngine().scenes.length>1||this.activeCamera&&this.activeCamera!==s.activeCamera)&&s.setTransformMatrix(s.activeCamera.getViewMatrix(),s.activeCamera.getProjectionMatrix(!0)),n.setViewport(s.activeCamera.viewport)),s.resetCachedMaterial(),l}_bestReflectionRenderTargetDimension(e,t){const i=e*t,s=X.NearestPOT(i+128*128/(128+i));return Math.min(X.FloorPOT(e),s)}_prepareRenderingManager(e,t,r,i){const s=this.getScene();if(!s)return;this._renderingManager.reset();const n=s.getRenderId();for(let a=0;a<t;a++){const h=e[a];if(h&&!h.isBlocked){if(this.customIsReadyFunction){if(!this.customIsReadyFunction(h,this.refreshRate,!1)){this.resetRefreshCounter();continue}}else if(!h.isReady(this.refreshRate===0)){this.resetRefreshCounter();continue}if(!h._internalAbstractMeshDataInfo._currentLODIsUpToDate&&s.activeCamera&&(h._internalAbstractMeshDataInfo._currentLOD=s.customLODSelector?s.customLODSelector(h,this.activeCamera||s.activeCamera):h.getLOD(this.activeCamera||s.activeCamera),h._internalAbstractMeshDataInfo._currentLODIsUpToDate=!0),!h._internalAbstractMeshDataInfo._currentLOD)continue;let o=h._internalAbstractMeshDataInfo._currentLOD;o._preActivateForIntermediateRendering(n);let l;if(i&&r?l=(h.layerMask&r.layerMask)===0:l=!1,h.isEnabled()&&h.isVisible&&h.subMeshes&&!l&&(o!==h&&o._activate(n,!0),h._activate(n,!0)&&h.subMeshes.length)){h.isAnInstance?h._internalAbstractMeshDataInfo._actAsRegularMesh&&(o=h):o._internalAbstractMeshDataInfo._onlyForInstancesIntermediate=!1,o._internalAbstractMeshDataInfo._isActiveIntermediate=!0;for(let u=0;u<o.subMeshes.length;u++){const d=o.subMeshes[u];this._renderingManager.dispatch(d,o)}}}}for(let a=0;a<s.particleSystems.length;a++){const h=s.particleSystems[a],o=h.emitter;!h.isStarted()||!o||o.position&&!o.isEnabled()||this._renderingManager.dispatchParticles(h)}}_bindFrameBuffer(e=0,t=0){const r=this.getScene();if(!r)return;const i=r.getEngine();this._renderTarget&&i.bindFramebuffer(this._renderTarget,this.isCube?e:void 0,void 0,void 0,this.ignoreCameraViewport,0,t)}_unbindFrameBuffer(e,t){this._renderTarget&&e.unBindFramebuffer(this._renderTarget,this.isCube,()=>{this.onAfterRenderObservable.notifyObservers(t)})}_prepareFrame(e,t,r,i){this._postProcessManager?this._prePassEnabled||this._postProcessManager._prepareFrame(this._texture,this._postProcesses):(!i||!e.postProcessManager._prepareFrame(this._texture))&&this._bindFrameBuffer(t,r)}_renderToTarget(e,t,r,i=0,s=null){var n,a,h,o,l,u;const d=this.getScene();if(!d)return;const c=d.getEngine();if((n=c._debugPushGroup)===null||n===void 0||n.call(c,`render to face #${e} layer #${i}`,1),this._prepareFrame(d,e,i,t),this.is2DArray?(c.currentRenderPassId=this._renderPassIds[i],this.onBeforeRenderObservable.notifyObservers(i)):(c.currentRenderPassId=this._renderPassIds[e],this.onBeforeRenderObservable.notifyObservers(e)),c.snapshotRendering&&c.snapshotRenderingMode===1)this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(c):this.skipInitialClear||c.clear(this.clearColor||d.clearColor,!0,!0,!0);else{let p=null;const _=this.renderList?this.renderList:d.getActiveMeshes().data,m=this.renderList?this.renderList.length:d.getActiveMeshes().length;this.getCustomRenderList&&(p=this.getCustomRenderList(this.is2DArray?i:e,_,m)),p?this._prepareRenderingManager(p,p.length,s,this.forceLayerMaskCheck):(this._defaultRenderListPrepared||(this._prepareRenderingManager(_,m,s,!this.renderList||this.forceLayerMaskCheck),this._defaultRenderListPrepared=!0),p=_);for(const C of d._beforeRenderTargetClearStage)C.action(this,e,i);this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(c):this.skipInitialClear||c.clear(this.clearColor||d.clearColor,!0,!0,!0),this._doNotChangeAspectRatio||d.updateTransformMatrix(!0);for(const C of d._beforeRenderTargetDrawStage)C.action(this,e,i);this._renderingManager.render(this.customRenderFunction,p,this.renderParticles,this.renderSprites);for(const C of d._afterRenderTargetDrawStage)C.action(this,e,i);const v=(h=(a=this._texture)===null||a===void 0?void 0:a.generateMipMaps)!==null&&h!==void 0?h:!1;this._texture&&(this._texture.generateMipMaps=!1),this._postProcessManager?this._postProcessManager._finalizeFrame(!1,(o=this._renderTarget)!==null&&o!==void 0?o:void 0,e,this._postProcesses,this.ignoreCameraViewport):t&&d.postProcessManager._finalizeFrame(!1,(l=this._renderTarget)!==null&&l!==void 0?l:void 0,e);for(const C of d._afterRenderTargetPostProcessStage)C.action(this,e,i);this._texture&&(this._texture.generateMipMaps=v),this._doNotChangeAspectRatio||d.updateTransformMatrix(!0),r&&O.DumpFramebuffer(this.getRenderWidth(),this.getRenderHeight(),c)}this._unbindFrameBuffer(c,e),this._texture&&this.isCube&&e===5&&c.generateMipMapsForCubemap(this._texture),(u=c._debugPopGroup)===null||u===void 0||u.call(c,1)}setRenderingOrder(e,t=null,r=null,i=null){this._renderingManager.setRenderingOrder(e,t,r,i)}setRenderingAutoClearDepthStencil(e,t){this._renderingManager.setRenderingAutoClearDepthStencil(e,t),this._renderingManager._useSceneAutoClearSetup=!1}clone(){const e=this.getSize(),t=new U(this.name,e,this.getScene(),this._renderTargetOptions.generateMipMaps,this._doNotChangeAspectRatio,this._renderTargetOptions.type,this.isCube,this._renderTargetOptions.samplingMode,this._renderTargetOptions.generateDepthBuffer,this._renderTargetOptions.generateStencilBuffer,void 0,this._renderTargetOptions.format,void 0,this._renderTargetOptions.samples);return t.hasAlpha=this.hasAlpha,t.level=this.level,t.coordinatesMode=this.coordinatesMode,this.renderList&&(t.renderList=this.renderList.slice(0)),t}serialize(){if(!this.name)return null;const e=super.serialize();if(e.renderTargetSize=this.getRenderSize(),e.renderList=[],this.renderList)for(let t=0;t<this.renderList.length;t++)e.renderList.push(this.renderList[t].id);return e}disposeFramebufferObjects(){var e;(e=this._renderTarget)===null||e===void 0||e.dispose(!0)}releaseInternalTexture(){var e;(e=this._renderTarget)===null||e===void 0||e.releaseTextures(),this._texture=null}dispose(){var e;this.onResizeObservable.clear(),this.onClearObservable.clear(),this.onAfterRenderObservable.clear(),this.onAfterUnbindObservable.clear(),this.onBeforeBindObservable.clear(),this.onBeforeRenderObservable.clear(),this._postProcessManager&&(this._postProcessManager.dispose(),this._postProcessManager=null),this._prePassRenderTarget&&this._prePassRenderTarget.dispose(),this._releaseRenderPassId(),this.clearPostProcesses(!0),this._resizeObserver&&(this.getScene().getEngine().onResizeObservable.remove(this._resizeObserver),this._resizeObserver=null),this.renderList=null;const t=this.getScene();if(!t)return;let r=t.customRenderTargets.indexOf(this);r>=0&&t.customRenderTargets.splice(r,1);for(const i of t.cameras)r=i.customRenderTargets.indexOf(this),r>=0&&i.customRenderTargets.splice(r,1);(e=this._renderTarget)===null||e===void 0||e.dispose(),this._renderTarget=null,this._texture=null,super.dispose()}_rebuild(){this.refreshRate===U.REFRESHRATE_RENDER_ONCE&&(this.refreshRate=U.REFRESHRATE_RENDER_ONCE),this._postProcessManager&&this._postProcessManager._rebuild()}freeRenderingGroups(){this._renderingManager&&this._renderingManager.freeRenderingGroups()}getViewCount(){return 1}}U.REFRESHRATE_RENDER_ONCE=0;U.REFRESHRATE_RENDER_ONEVERYFRAME=1;U.REFRESHRATE_RENDER_ONEVERYTWOFRAMES=2;B._CreateRenderTargetTexture=(f,e,t,r,i)=>new U(f,e,t,r);const Oe="kernelBlurVaryingDeclaration",Fe="varying vec2 sampleCoord{X};";N.IncludesShadersStore[Oe]=Fe;const Pe="packingFunctions",we=`vec4 pack(float depth)
{
const vec4 bit_shift=vec4(255.0*255.0*255.0,255.0*255.0,255.0,1.0);
const vec4 bit_mask=vec4(0.0,1.0/255.0,1.0/255.0,1.0/255.0);
vec4 res=fract(depth*bit_shift);
res-=res.xxyz*bit_mask;
return res;
}
float unpack(vec4 color)
{
const vec4 bit_shift=vec4(1.0/(255.0*255.0*255.0),1.0/(255.0*255.0),1.0/255.0,1.0);
return dot(color,bit_shift);
}`;N.IncludesShadersStore[Pe]=we;const De="kernelBlurFragment",Ie=`#ifdef DOF
factor=sampleCoC(sampleCoord{X}); 
computedWeight=KERNEL_WEIGHT{X}*factor;
sumOfWeights+=computedWeight;
#else
computedWeight=KERNEL_WEIGHT{X};
#endif
#ifdef PACKEDFLOAT
blend+=unpack(texture2D(textureSampler,sampleCoord{X}))*computedWeight;
#else
blend+=texture2D(textureSampler,sampleCoord{X})*computedWeight;
#endif
`;N.IncludesShadersStore[De]=Ie;const Be="kernelBlurFragment2",Le=`#ifdef DOF
factor=sampleCoC(sampleCenter+delta*KERNEL_DEP_OFFSET{X});
computedWeight=KERNEL_DEP_WEIGHT{X}*factor;
sumOfWeights+=computedWeight;
#else
computedWeight=KERNEL_DEP_WEIGHT{X};
#endif
#ifdef PACKEDFLOAT
blend+=unpack(texture2D(textureSampler,sampleCenter+delta*KERNEL_DEP_OFFSET{X}))*computedWeight;
#else
blend+=texture2D(textureSampler,sampleCenter+delta*KERNEL_DEP_OFFSET{X})*computedWeight;
#endif
`;N.IncludesShadersStore[Be]=Le;const Ne="kernelBlurPixelShader",ke=`uniform sampler2D textureSampler;
uniform vec2 delta;
varying vec2 sampleCenter;
#ifdef DOF
uniform sampler2D circleOfConfusionSampler;
float sampleCoC(in vec2 offset) {
float coc=texture2D(circleOfConfusionSampler,offset).r;
return coc; 
}
#endif
#include<kernelBlurVaryingDeclaration>[0..varyingCount]
#ifdef PACKEDFLOAT
#include<packingFunctions>
#endif
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void)
{
float computedWeight=0.0;
#ifdef PACKEDFLOAT
float blend=0.;
#else
vec4 blend=vec4(0.);
#endif
#ifdef DOF
float sumOfWeights=CENTER_WEIGHT; 
float factor=0.0;
#ifdef PACKEDFLOAT
blend+=unpack(texture2D(textureSampler,sampleCenter))*CENTER_WEIGHT;
#else
blend+=texture2D(textureSampler,sampleCenter)*CENTER_WEIGHT;
#endif
#endif
#include<kernelBlurFragment>[0..varyingCount]
#include<kernelBlurFragment2>[0..depCount]
#ifdef PACKEDFLOAT
gl_FragColor=pack(blend);
#else
gl_FragColor=blend;
#endif
#ifdef DOF
gl_FragColor/=sumOfWeights;
#endif
}`;N.ShadersStore[Ne]=ke;const Ue="kernelBlurVertex",ze="sampleCoord{X}=sampleCenter+delta*KERNEL_OFFSET{X};";N.IncludesShadersStore[Ue]=ze;const Ve="kernelBlurVertexShader",We=`attribute vec2 position;
uniform vec2 delta;
varying vec2 sampleCenter;
#include<kernelBlurVaryingDeclaration>[0..varyingCount]
const vec2 madd=vec2(0.5,0.5);
#define CUSTOM_VERTEX_DEFINITIONS
void main(void) {
#define CUSTOM_VERTEX_MAIN_BEGIN
sampleCenter=(position*madd+madd);
#include<kernelBlurVertex>[0..varyingCount]
gl_Position=vec4(position,0.0,1.0);
#define CUSTOM_VERTEX_MAIN_END
}`;N.ShadersStore[Ve]=We;class V extends x{set kernel(e){this._idealKernel!==e&&(e=Math.max(e,1),this._idealKernel=e,this._kernel=this._nearestBestKernel(e),this._blockCompilation||this._updateParameters())}get kernel(){return this._idealKernel}set packedFloat(e){this._packedFloat!==e&&(this._packedFloat=e,this._blockCompilation||this._updateParameters())}get packedFloat(){return this._packedFloat}getClassName(){return"BlurPostProcess"}constructor(e,t,r,i,s,n=B.BILINEAR_SAMPLINGMODE,a,h,o=0,l="",u=!1,d=5){super(e,"kernelBlur",["delta","direction"],["circleOfConfusionSampler"],i,s,n,a,h,null,o,"kernelBlur",{varyingCount:0,depCount:0},!0,d),this._blockCompilation=u,this._packedFloat=!1,this._staticDefines="",this._staticDefines=l,this.direction=t,this.onApplyObservable.add(c=>{this._outputTexture?c.setFloat2("delta",1/this._outputTexture.width*this.direction.x,1/this._outputTexture.height*this.direction.y):c.setFloat2("delta",1/this.width*this.direction.x,1/this.height*this.direction.y)}),this.kernel=r}updateEffect(e=null,t=null,r=null,i,s,n){this._updateParameters(s,n)}_updateParameters(e,t){const r=this._kernel,i=(r-1)/2;let s=[],n=[],a=0;for(let _=0;_<r;_++){const m=_/(r-1),v=this._gaussianWeight(m*2-1);s[_]=_-i,n[_]=v,a+=v}for(let _=0;_<n.length;_++)n[_]/=a;const h=[],o=[],l=[];for(let _=0;_<=i;_+=2){const m=Math.min(_+1,Math.floor(i));if(_===m)l.push({o:s[_],w:n[_]});else{const C=m===i,E=n[_]+n[m]*(C?.5:1),F=s[_]+1/(1+n[_]/n[m]);F===0?(l.push({o:s[_],w:n[_]}),l.push({o:s[_+1],w:n[_+1]})):(l.push({o:F,w:E}),l.push({o:-F,w:E}))}}for(let _=0;_<l.length;_++)o[_]=l[_].o,h[_]=l[_].w;s=o,n=h;const u=this.getEngine().getCaps().maxVaryingVectors,d=Math.max(u,0)-1;let c=Math.min(s.length,d),g="";g+=this._staticDefines,this._staticDefines.indexOf("DOF")!=-1&&(g+=`#define CENTER_WEIGHT ${this._glslFloat(n[c-1])}\r
`,c--);for(let _=0;_<c;_++)g+=`#define KERNEL_OFFSET${_} ${this._glslFloat(s[_])}\r
`,g+=`#define KERNEL_WEIGHT${_} ${this._glslFloat(n[_])}\r
`;let p=0;for(let _=d;_<s.length;_++)g+=`#define KERNEL_DEP_OFFSET${p} ${this._glslFloat(s[_])}\r
`,g+=`#define KERNEL_DEP_WEIGHT${p} ${this._glslFloat(n[_])}\r
`,p++;this.packedFloat&&(g+="#define PACKEDFLOAT 1"),this._blockCompilation=!1,super.updateEffect(g,null,null,{varyingCount:c,depCount:p},e,t)}_nearestBestKernel(e){const t=Math.round(e);for(const r of[t,t-1,t+1,t-2,t+2])if(r%2!==0&&Math.floor(r/2)%2===0&&r>0)return Math.max(r,3);return Math.max(t,3)}_gaussianWeight(e){const t=.3333333333333333,r=Math.sqrt(2*Math.PI)*t,i=-(e*e/(2*t*t));return 1/r*Math.exp(i)}_glslFloat(e,t=8){return e.toFixed(t).replace(/0+$/,"")}static _Parse(e,t,r,i){return q.Parse(()=>new V(e.name,e.direction,e.kernel,e.options,t,e.renderTargetSamplingMode,r.getEngine(),e.reusable,e.textureType,void 0,!1),e,r,i)}}S([y("kernel")],V.prototype,"_kernel",void 0);S([y("packedFloat")],V.prototype,"_packedFloat",void 0);S([Re()],V.prototype,"direction",void 0);se("BABYLON.BlurPostProcess",V);export{V as B,O as D,ye as E,x as P,T as R,Ce as a,U as b,Me as c};
