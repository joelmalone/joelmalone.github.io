import{H as z,W as G}from"./HavokPhysics-7490dd75.js";import{D as U,G as Y,S as K,B as X,T as W,V as Q}from"./gui3DManager-711f3909.js";import{P as V,d as T,V as t,e as Z,Q as D,K as j,S as $,C as A,c as q,T as E}from"./runBabylonPlaygroundScene-32a4afbd.js";import{H as J,S as _}from"./linesBuilder-a2dae4c1.js";import{D as ee}from"./directionalLight-d037032f.js";import{S as te}from"./shadowGeneratorSceneComponent-1c2fa54e.js";import{P as N,a as H,H as oe,b as ne,c as ae,d as re,e as se,f as ie}from"./havokPlugin-66927be8.js";import{M as O}from"./meshBuilder-ad173be8.js";import"./blurPostProcess-f61d1d3e.js";import"./physicsEngineComponent-f32049b7.js";import"./utilityLayerRenderer-fefda23f.js";import"./physicsImpostor-3dac248c.js";import"./sceneLoader-f06775c7.js";import"./dynamicTexture-7393bdcd.js";import"./animationGroup-a96e107c.js";function L(e,r){let n=null;function o(){n&&(n.events.onEnd(),n=null)}const s=e.onPointerObservable.add(i=>{const g=i.pickInfo,a=g.pickedPoint,c=g.pickedMesh;switch(i.type){case V.POINTERDOWN:if(a&&c){o();const l=r(c,a);if(!l)return;n={startXY:new T(i.event.clientX,i.event.clientY),startPosition:a,mesh:c,events:l,plane:null}}break;case V.POINTERMOVE:if(!n)return;const d=g.ray;if(d){if(!n.plane){const y=Math.min(e.getEngine().getRenderWidth(),e.getEngine().getRenderHeight())*.1,v=new T(i.event.clientX,i.event.clientY).subtract(n.startXY);if(v.length()<y)return;const k=v.normalize().y<-.7?new t(-d.direction.x,0,-d.direction.z).normalize():t.UpReadOnly;n.plane=Z.FromPositionAndNormal(n.startPosition,k)}const l=d.intersectsPlane(n.plane);if(l!==null){const y=d.origin.add(d.direction.scale(l));n.events.onDrag(y,n.plane)}}break;case V.POINTERUP:o();break}});function h(){o(),e.onPointerObservable.remove(s)}return e.onDisposeObservable.addOnce(h),h}function ce(e,r){const n=O.CreateSphere("from sphere",{diameter:.5},e),o=O.CreateSphere("to sphere",{diameter:.5},e);n.isVisible=!1,o.isVisible=!1;const s=500;function h(i,g){var C;const a=r(i);if(!a)return null;(C=e.activeCamera)==null||C.detachControl(),n.isVisible=!1,n.position.copyFrom(g),o.position.copyFrom(g);const c=g.subtract(a.transformNode.absolutePosition),d=a.getGravityFactor(),l=a.getLinearDamping(),y=a.getMassProperties();a.setGravityFactor(0),a.setLinearDamping(s),a.setMassProperties({...y,inertia:new t(0,0,0)});const v=()=>{const f=o.position.subtract(c).subtractInPlace(a.transformNode.absolutePosition).scaleInPlace(s),P=a.getMassProperties().centerOfMass,S=a.transformNode.absolutePosition;P&&S.addInPlace(P),a.applyForce(f,S)};e.onBeforePhysicsObservable.add(v);function b(f){o.isVisible=!1,o.position.copyFrom(f).addInPlace(new t(0,2,0))}return{onDrag:b,onEnd:()=>{var f;e.onBeforePhysicsObservable.removeCallback(v),a.setGravityFactor(d),a.setLinearDamping(l),a.setMassProperties(y),n.isVisible=!1,o.isVisible=!1,a==null||a.applyImpulse(new t(0,2,0),a.transformNode.absolutePosition.add(new t(1,0,1))),(f=e.activeCamera)==null||f.attachControl()}}}return L(e,h)}function M(e){var n;let r=e;for(;r;){if((n=r.metadata)!=null&&n.draggable&&"physicsBody"in r&&r.physicsBody)return r.physicsBody;r=r.parent}return null}function B(e,r,n){const o=O.CreateSphere("from sphere",{diameter:.5},e),s=O.CreateSphere("to sphere",{diameter:.5},e),h=s.rotationQuaternion=D.Identity();o.isVisible=!1,s.isVisible=!1;function i(g,a){var I;const c=r(g);if(!c)return null;(I=e.activeCamera)==null||I.detachControl();const d=c.transformNode.absolutePosition.clone(),l=c.transformNode.absoluteRotationQuaternion.clone();console.log("physicsBody.transformNode",c.transformNode.name,c.transformNode),o.isVisible=!1,o.position.copyFrom(d),s.position.copyFrom(d),h.copyFrom(l);const y=a.subtract(c.transformNode.absolutePosition);console.log("Drag started.",{targetPosition:d,pickPointOffset:y,targetRotation:l.toEulerAngles()});let v=!1;const b=e.onBeforePhysicsObservable.add(()=>{var m;const u=(m=e.getPhysicsEngine())==null?void 0:m.getTimeStep();if(!u)return;if(v){const w=d.subtract(s.position);s.position.addInPlace(w.scale(u*5))}const p=D.Slerp(h,l,u*5);h.copyFrom(p)}),k=u=>{const p=e.activeCamera;if(!p)return;const m=45*Math.PI/180,w=new D;switch(u){case"reset":const R=p.getDirection(new t(0,0,1));R.y=0,R.normalize();const x=D.FromLookDirectionLH(R,p.upVector);l.copyFrom(x);return;case"up":D.RotationAxisToRef(p.getDirection(t.LeftReadOnly),-m,w);break;case"down":D.RotationAxisToRef(p.getDirection(t.LeftReadOnly),m,w);break;case"left":D.RotationAxisToRef(p.upVector,m,w);break;case"right":D.RotationAxisToRef(p.upVector,-m,w);break}l.copyFrom(w.multiplyInPlace(l))},C={reset:[" ","x"],up:["w","ArrowUp"],down:["s","ArrowDown"],left:["a","ArrowLeft"],right:["d","ArrowRight"]},f=e.onKeyboardObservable.add(u=>{if(u.type===j.KEYUP){const p=Object.entries(C).filter(([,m])=>m.includes(u.event.key)).map(([m])=>m)[0];p&&k(p)}}),P=n.map(u=>{const p=O.CreateSphere("constraint sphere",{diameter:.5},e);p.parent=s,p.position=u;const m=new N(p,H.ANIMATED,!1,e);m.disablePreStep=!1;const w=new U(.01,e);return w.options.pivotA=t.ZeroReadOnly,w.options.pivotB=u,m.addConstraint(c,w),{constraint:w,sphereBody:m,sphere:p}});window.constraints=P;function S(u){v=!0,s.isVisible=!1,d.copyFrom(u).subtractInPlace(y).addInPlace(new t(0,2,0))}return{onDrag:S,onEnd:()=>{var u;e.onKeyboardObservable.remove(f),e.onBeforePhysicsObservable.remove(b),o.isVisible=!1,s.isVisible=!1,P.forEach(({sphere:p,constraint:m,sphereBody:w})=>{m.dispose(),w.dispose(),p.dispose()}),c==null||c.applyImpulse(new t(0,2,0),c.transformNode.absolutePosition.add(new t(1,0,1))),(u=e.activeCamera)==null||u.attachControl()}}}return L(e,i)}function Be(e){const r=new $(e);return le(r).then(n=>r.onDisposeObservable.addOnce(n)),r}async function le(e){const r=he(e);e.clearColor=A.FromHSV(30,.8,1).toColor4(),new q("camera",280/180*Math.PI,60/180*Math.PI,23,new t(0,0,0),e).attachControl();const o=new ee("shadowLight",new t(0,-20,10),e);o.autoUpdateExtends=!1,o.shadowMinZ=1,o.shadowMaxZ=30,o.shadowFrustumSize=20,window.shadowLight=o;const s=new te(1024,o);s.darkness=.95,s.useContactHardeningShadow=!0,s.contactHardeningLightSizeUVRatio=.1;var h=new J("ambient light",o.direction,e);h.intensity=.3;function i(){return G}const g=await z({locateFile:i}),a=new oe(!0,g);e.enablePhysics(new t(0,-9.8,0),a);const c=pe(e);c.receiveShadows=!0;const d={ApplyForce:()=>ce(e,M),SingleHanging:()=>B(e,M,[new t(0,2,0)]),SingleCenter:()=>B(e,M,[new t(0,0,0)]),CenterAndHanging:()=>B(e,M,[new t(0,2,0),new t(0,0,0)]),Crucifixion:()=>B(e,M,[new t(1,1,0),new t(-1,1,0),new t(0,-1,0)]),Corners:()=>B(e,M,[new t(1,0,1),new t(-1,0,1),new t(1,0,-1),new t(-1,0,-1)]),HorizontalTriangle:()=>B(e,M,[new t(0,0,1),new t(1,0,-1),new t(-1,0,-1)]),TwoPointSkewer:()=>B(e,M,[new t(0,0,1),new t(0,0,-1)])};let l=null;var y=new E("gui anchor");y.position=new t(-3,5,0);var v=new Y(e),b=new K(!0);b.margin=.2,b.position.y+=5,v.addControl(b),b.blockLayout=!0;const k=Object.entries(d).reverse().map(([C,f])=>{const P=new X(`3d button: ${C}`,{width:3,height:.8}),S=new W;return S.text=C,S.color="white",S.fontSize=30,P.content=S,P.onPointerClickObservable.add(()=>{l&&l(),l=f(),k.forEach(F=>{F.scaling.setAll(F===P?1.1:1),F.content.color=F===P?"yellow":"white"})}),b.addControl(P),P});b.blockLayout=!1,b.linkToTransformNode(y),k[k.length-1].onPointerClickObservable.notifyObservers(new Q(t.ZeroReadOnly));for(let C=0;C<10;C++)de(e,new t(Math.random()*10-5,5,Math.random()*10-5),r).getChildMeshes(!1).forEach(f=>s.addShadowCaster(f,!1)),await new Promise(f=>setTimeout(f,500));return()=>l&&l()}function de(e,r,n){const o=new E("root");o.position=r;const s=Math.random(),h=O.CreateBox("cube");h.parent=o,h.material=n.fromHue(s);const i=O.CreateSphere("sphere");i.parent=o,i.position.y+=.5,i.material=n.fromHue(s-.05);const g=new ne(new t(0,0,0),D.Identity(),new t(1,1,1),e),a=new ae(new t(0,0,0),.5,e),c=new re(e);c.addChildFromParent(o,g,h),c.addChildFromParent(o,a,i);const d=new N(o,H.DYNAMIC,!1,e);return d.shape=c,d.setMassProperties({mass:1}),o.metadata={draggable:!0},o}function pe(e){const r=O.CreateBox("ground",{width:20,depth:20,height:.5},e);return r.position=new t(0,-.25,0),new se(r,ie.BOX,{mass:0,restitution:.1},e),r}function he(e){const r=new Map;function n(o){const s=A.FromHSV(Math.trunc(o*36)*10,.8,.9),h=s.toHexString();let i=r.get(h);return i||(i=new _(`createMaterialsPool ${h}`,e),i.diffuseColor=s,r.set(h,i)),i}return{fromHue:n}}export{Be as createScene};
